// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module convolution_convolution_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_11_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_in_address0,
        img_in_ce0,
        img_in_q0,
        img_in_address1,
        img_in_ce1,
        img_in_q1,
        img_out_address0,
        img_out_ce0,
        img_out_we0,
        img_out_d0,
        empty_5,
        empty_6,
        empty_7,
        empty_8,
        empty_9,
        empty_10,
        empty_11,
        empty_12,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] img_in_address0;
output   img_in_ce0;
input  [31:0] img_in_q0;
output  [9:0] img_in_address1;
output   img_in_ce1;
input  [31:0] img_in_q1;
output  [9:0] img_out_address0;
output   img_out_ce0;
output   img_out_we0;
output  [31:0] img_out_d0;
input  [7:0] empty_5;
input  [7:0] empty_6;
input  [7:0] empty_7;
input  [7:0] empty_8;
input  [7:0] empty_9;
input  [7:0] empty_10;
input  [7:0] empty_11;
input  [7:0] empty_12;
input  [7:0] empty;

reg ap_idle;
reg[9:0] img_in_address0;
reg img_in_ce0;
reg[9:0] img_in_address1;
reg img_in_ce1;
reg img_out_ce0;
reg img_out_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln9_reg_701;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln9_fu_248_p2;
wire   [4:0] select_ln9_fu_272_p3;
reg   [4:0] select_ln9_reg_705;
wire   [4:0] select_ln9_1_fu_292_p3;
reg   [4:0] select_ln9_1_reg_710;
wire   [9:0] sub_ln21_fu_332_p2;
reg   [9:0] sub_ln21_reg_721;
wire   [9:0] sub_ln21_2_fu_364_p2;
reg   [9:0] sub_ln21_2_reg_727;
wire   [9:0] zext_ln21_4_fu_370_p1;
reg   [9:0] zext_ln21_4_reg_733;
wire   [9:0] zext_ln21_12_fu_391_p1;
reg   [9:0] zext_ln21_12_reg_745;
wire   [9:0] sub_ln21_1_fu_434_p2;
reg   [9:0] sub_ln21_1_reg_756;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire  signed [7:0] trunc_ln21_fu_450_p1;
reg  signed [7:0] trunc_ln21_reg_766;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] add_ln21_12_fu_486_p2;
reg   [9:0] add_ln21_12_reg_786;
wire   [9:0] add_ln21_13_fu_491_p2;
reg   [9:0] add_ln21_13_reg_791;
wire   [9:0] add_ln21_15_fu_506_p2;
reg   [9:0] add_ln21_15_reg_801;
wire  signed [7:0] trunc_ln21_3_fu_510_p1;
reg  signed [7:0] trunc_ln21_3_reg_806;
wire  signed [7:0] trunc_ln21_5_fu_514_p1;
reg  signed [7:0] trunc_ln21_5_reg_811;
wire   [9:0] grp_fu_596_p3;
reg   [9:0] add_ln24_reg_816;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [7:0] mul_ln21_6_fu_539_p2;
wire    ap_block_pp0_stage4_11001;
wire   [7:0] mul_ln21_fu_552_p2;
wire  signed [7:0] trunc_ln21_2_fu_557_p1;
reg  signed [7:0] trunc_ln21_2_reg_851;
wire   [7:0] grp_fu_603_p3;
reg   [7:0] add_ln21_6_reg_856;
wire   [7:0] mul_ln21_1_fu_561_p2;
wire  signed [7:0] trunc_ln21_4_fu_565_p1;
reg  signed [7:0] trunc_ln21_4_reg_866;
wire   [7:0] grp_fu_610_p3;
reg  signed [7:0] add_ln21_2_reg_871;
wire   [7:0] mul_ln21_3_fu_569_p2;
wire   [7:0] grp_fu_616_p3;
reg  signed [7:0] add_ln21_3_reg_881;
wire   [7:0] grp_fu_622_p3;
reg  signed [7:0] add_ln21_7_reg_886;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln21_5_fu_380_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln21_15_fu_401_p1;
wire   [63:0] zext_ln21_6_fu_445_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln21_14_fu_459_p1;
wire   [63:0] zext_ln21_7_fu_472_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln21_11_fu_501_p1;
wire   [63:0] zext_ln21_9_fu_523_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln21_13_fu_527_p1;
wire   [63:0] zext_ln21_10_fu_544_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln24_1_fu_573_p1;
reg   [4:0] j_fu_70;
wire   [4:0] add_ln21_fu_477_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
reg   [4:0] i_fu_74;
wire   [4:0] select_ln9_2_fu_300_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten_fu_78;
wire   [9:0] add_ln9_fu_254_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln11_fu_266_p2;
wire   [4:0] indvars_iv_next28_mid1_fu_280_p2;
wire   [4:0] indvars_iv_next287_fu_286_p2;
wire   [6:0] tmp_1_fu_320_p3;
wire   [9:0] tmp_fu_312_p3;
wire   [9:0] zext_ln21_1_fu_328_p1;
wire   [4:0] empty_13_fu_338_p2;
wire   [6:0] tmp_5_fu_352_p3;
wire   [9:0] tmp_4_fu_344_p3;
wire   [9:0] zext_ln21_3_fu_360_p1;
wire   [9:0] add_ln21_9_fu_374_p2;
wire   [4:0] add_ln21_1_fu_385_p2;
wire   [9:0] add_ln21_17_fu_395_p2;
wire   [6:0] tmp_3_fu_423_p3;
wire   [9:0] tmp_2_fu_416_p3;
wire   [9:0] zext_ln21_2_fu_430_p1;
wire   [9:0] add_ln21_10_fu_440_p2;
wire   [9:0] add_ln21_16_fu_454_p2;
wire   [9:0] add_ln21_11_fu_468_p2;
wire   [9:0] zext_ln21_8_fu_482_p1;
wire   [9:0] add_ln21_14_fu_496_p2;
wire  signed [7:0] mul_ln21_6_fu_539_p0;
wire  signed [7:0] mul_ln21_fu_552_p0;
wire  signed [7:0] add_ln21_8_fu_581_p1;
wire   [7:0] grp_fu_628_p3;
(* use_dsp48 = "no" *) wire   [7:0] add_ln21_8_fu_581_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln21_4_fu_577_p2;
wire   [7:0] sum_1_fu_585_p2;
wire   [4:0] grp_fu_596_p0;
wire   [4:0] grp_fu_596_p1;
wire   [4:0] grp_fu_596_p2;
wire  signed [7:0] grp_fu_603_p0;
wire  signed [7:0] grp_fu_622_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] grp_fu_596_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_70 = 5'd0;
#0 i_fu_74 = 5'd0;
#0 indvar_flatten_fu_78 = 10'd0;
#0 ap_done_reg = 1'b0;
end

convolution_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U1(
    .din0(mul_ln21_6_fu_539_p0),
    .din1(empty_12),
    .dout(mul_ln21_6_fu_539_p2)
);

convolution_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U2(
    .din0(mul_ln21_fu_552_p0),
    .din1(empty_6),
    .dout(mul_ln21_fu_552_p2)
);

convolution_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U3(
    .din0(trunc_ln21_2_reg_851),
    .din1(empty_7),
    .dout(mul_ln21_1_fu_561_p2)
);

convolution_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U4(
    .din0(trunc_ln21_4_reg_866),
    .din1(empty_9),
    .dout(mul_ln21_3_fu_569_p2)
);

convolution_mac_muladd_5ns_5ns_5ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_5ns_5ns_5ns_10_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_596_p0),
    .din1(grp_fu_596_p1),
    .din2(grp_fu_596_p2),
    .ce(1'b1),
    .dout(grp_fu_596_p3)
);

convolution_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_603_p0),
    .din1(empty),
    .din2(mul_ln21_6_fu_539_p2),
    .ce(1'b1),
    .dout(grp_fu_603_p3)
);

convolution_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln21_reg_766),
    .din1(empty_5),
    .din2(mul_ln21_fu_552_p2),
    .ce(1'b1),
    .dout(grp_fu_610_p3)
);

convolution_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln21_3_reg_806),
    .din1(empty_8),
    .din2(mul_ln21_1_fu_561_p2),
    .ce(1'b1),
    .dout(grp_fu_616_p3)
);

convolution_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_622_p0),
    .din1(empty_11),
    .din2(add_ln21_6_reg_856),
    .ce(1'b1),
    .dout(grp_fu_622_p3)
);

convolution_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln21_5_reg_811),
    .din1(empty_10),
    .din2(mul_ln21_3_fu_569_p2),
    .ce(1'b1),
    .dout(grp_fu_628_p3)
);

convolution_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln9_fu_248_p2 == 1'd0))) begin
            i_fu_74 <= select_ln9_2_fu_300_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_74 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln9_fu_248_p2 == 1'd0))) begin
            indvar_flatten_fu_78 <= add_ln9_fu_254_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_78 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_70 <= 5'd0;
    end else if (((icmp_ln9_reg_701 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_fu_70 <= add_ln21_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln21_12_reg_786 <= add_ln21_12_fu_486_p2;
        add_ln21_13_reg_791 <= add_ln21_13_fu_491_p2;
        add_ln21_15_reg_801 <= add_ln21_15_fu_506_p2;
        trunc_ln21_3_reg_806 <= trunc_ln21_3_fu_510_p1;
        trunc_ln21_5_reg_811 <= trunc_ln21_5_fu_514_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln21_2_reg_871 <= grp_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln21_3_reg_881 <= grp_fu_616_p3;
        add_ln21_7_reg_886 <= grp_fu_622_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln21_6_reg_856 <= grp_fu_603_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln24_reg_816 <= grp_fu_596_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln9_reg_701 <= icmp_ln9_fu_248_p2;
        select_ln9_1_reg_710 <= select_ln9_1_fu_292_p3;
        select_ln9_reg_705 <= select_ln9_fu_272_p3;
        sub_ln21_2_reg_727[9 : 2] <= sub_ln21_2_fu_364_p2[9 : 2];
        sub_ln21_reg_721[9 : 2] <= sub_ln21_fu_332_p2[9 : 2];
        trunc_ln21_4_reg_866 <= trunc_ln21_4_fu_565_p1;
        zext_ln21_12_reg_745[4 : 0] <= zext_ln21_12_fu_391_p1[4 : 0];
        zext_ln21_4_reg_733[4 : 0] <= zext_ln21_4_fu_370_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_ln21_1_reg_756[9 : 2] <= sub_ln21_1_fu_434_p2[9 : 2];
        trunc_ln21_reg_766 <= trunc_ln21_fu_450_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        trunc_ln21_2_reg_851 <= trunc_ln21_2_fu_557_p1;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_701 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_70;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            img_in_address0 = zext_ln21_10_fu_544_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            img_in_address0 = zext_ln21_13_fu_527_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            img_in_address0 = zext_ln21_11_fu_501_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            img_in_address0 = zext_ln21_14_fu_459_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            img_in_address0 = zext_ln21_15_fu_401_p1;
        end else begin
            img_in_address0 = 'bx;
        end
    end else begin
        img_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            img_in_address1 = zext_ln21_9_fu_523_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            img_in_address1 = zext_ln21_7_fu_472_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            img_in_address1 = zext_ln21_6_fu_445_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            img_in_address1 = zext_ln21_5_fu_380_p1;
        end else begin
            img_in_address1 = 'bx;
        end
    end else begin
        img_in_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_in_ce0 = 1'b1;
    end else begin
        img_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_in_ce1 = 1'b1;
    end else begin
        img_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        img_out_ce0 = 1'b1;
    end else begin
        img_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        img_out_we0 = 1'b1;
    end else begin
        img_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_10_fu_440_p2 = (sub_ln21_1_fu_434_p2 + zext_ln21_4_reg_733);

assign add_ln21_11_fu_468_p2 = (sub_ln21_2_reg_727 + zext_ln21_4_reg_733);

assign add_ln21_12_fu_486_p2 = (sub_ln21_reg_721 + zext_ln21_8_fu_482_p1);

assign add_ln21_13_fu_491_p2 = (sub_ln21_1_reg_756 + zext_ln21_8_fu_482_p1);

assign add_ln21_14_fu_496_p2 = (sub_ln21_2_reg_727 + zext_ln21_8_fu_482_p1);

assign add_ln21_15_fu_506_p2 = (sub_ln21_reg_721 + zext_ln21_12_reg_745);

assign add_ln21_16_fu_454_p2 = (sub_ln21_1_fu_434_p2 + zext_ln21_12_reg_745);

assign add_ln21_17_fu_395_p2 = (sub_ln21_2_fu_364_p2 + zext_ln21_12_fu_391_p1);

assign add_ln21_1_fu_385_p2 = (select_ln9_fu_272_p3 + 5'd2);

assign add_ln21_4_fu_577_p2 = ($signed(add_ln21_3_reg_881) + $signed(add_ln21_2_reg_871));

assign add_ln21_8_fu_581_p1 = grp_fu_628_p3;

assign add_ln21_8_fu_581_p2 = ($signed(add_ln21_7_reg_886) + $signed(add_ln21_8_fu_581_p1));

assign add_ln21_9_fu_374_p2 = (sub_ln21_fu_332_p2 + zext_ln21_4_fu_370_p1);

assign add_ln21_fu_477_p2 = (select_ln9_reg_705 + 5'd1);

assign add_ln9_fu_254_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign empty_13_fu_338_p2 = (select_ln9_2_fu_300_p3 + 5'd2);

assign grp_fu_596_p0 = grp_fu_596_p00;

assign grp_fu_596_p00 = select_ln9_2_fu_300_p3;

assign grp_fu_596_p1 = 10'd26;

assign grp_fu_596_p2 = zext_ln21_4_reg_733;

assign grp_fu_603_p0 = img_in_q0[7:0];

assign grp_fu_622_p0 = img_in_q1[7:0];

assign icmp_ln11_fu_266_p2 = ((ap_sig_allocacmp_j_load == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_248_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd676) ? 1'b1 : 1'b0);

assign img_out_address0 = zext_ln24_1_fu_573_p1;

assign img_out_d0 = sum_1_fu_585_p2;

assign indvars_iv_next287_fu_286_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign indvars_iv_next28_mid1_fu_280_p2 = (ap_sig_allocacmp_i_load + 5'd2);

assign mul_ln21_6_fu_539_p0 = img_in_q0[7:0];

assign mul_ln21_fu_552_p0 = img_in_q1[7:0];

assign select_ln9_1_fu_292_p3 = ((icmp_ln11_fu_266_p2[0:0] == 1'b1) ? indvars_iv_next28_mid1_fu_280_p2 : indvars_iv_next287_fu_286_p2);

assign select_ln9_2_fu_300_p3 = ((icmp_ln11_fu_266_p2[0:0] == 1'b1) ? indvars_iv_next287_fu_286_p2 : ap_sig_allocacmp_i_load);

assign select_ln9_fu_272_p3 = ((icmp_ln11_fu_266_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_load);

assign sub_ln21_1_fu_434_p2 = (tmp_2_fu_416_p3 - zext_ln21_2_fu_430_p1);

assign sub_ln21_2_fu_364_p2 = (tmp_4_fu_344_p3 - zext_ln21_3_fu_360_p1);

assign sub_ln21_fu_332_p2 = (tmp_fu_312_p3 - zext_ln21_1_fu_328_p1);

assign sum_1_fu_585_p2 = (add_ln21_8_fu_581_p2 + add_ln21_4_fu_577_p2);

assign tmp_1_fu_320_p3 = {{select_ln9_2_fu_300_p3}, {2'd0}};

assign tmp_2_fu_416_p3 = {{select_ln9_1_reg_710}, {5'd0}};

assign tmp_3_fu_423_p3 = {{select_ln9_1_reg_710}, {2'd0}};

assign tmp_4_fu_344_p3 = {{empty_13_fu_338_p2}, {5'd0}};

assign tmp_5_fu_352_p3 = {{empty_13_fu_338_p2}, {2'd0}};

assign tmp_fu_312_p3 = {{select_ln9_2_fu_300_p3}, {5'd0}};

assign trunc_ln21_2_fu_557_p1 = img_in_q0[7:0];

assign trunc_ln21_3_fu_510_p1 = img_in_q1[7:0];

assign trunc_ln21_4_fu_565_p1 = img_in_q0[7:0];

assign trunc_ln21_5_fu_514_p1 = img_in_q0[7:0];

assign trunc_ln21_fu_450_p1 = img_in_q1[7:0];

assign zext_ln21_10_fu_544_p1 = add_ln21_13_reg_791;

assign zext_ln21_11_fu_501_p1 = add_ln21_14_fu_496_p2;

assign zext_ln21_12_fu_391_p1 = add_ln21_1_fu_385_p2;

assign zext_ln21_13_fu_527_p1 = add_ln21_15_reg_801;

assign zext_ln21_14_fu_459_p1 = add_ln21_16_fu_454_p2;

assign zext_ln21_15_fu_401_p1 = add_ln21_17_fu_395_p2;

assign zext_ln21_1_fu_328_p1 = tmp_1_fu_320_p3;

assign zext_ln21_2_fu_430_p1 = tmp_3_fu_423_p3;

assign zext_ln21_3_fu_360_p1 = tmp_5_fu_352_p3;

assign zext_ln21_4_fu_370_p1 = select_ln9_fu_272_p3;

assign zext_ln21_5_fu_380_p1 = add_ln21_9_fu_374_p2;

assign zext_ln21_6_fu_445_p1 = add_ln21_10_fu_440_p2;

assign zext_ln21_7_fu_472_p1 = add_ln21_11_fu_468_p2;

assign zext_ln21_8_fu_482_p1 = add_ln21_fu_477_p2;

assign zext_ln21_9_fu_523_p1 = add_ln21_12_reg_786;

assign zext_ln24_1_fu_573_p1 = add_ln24_reg_816;

always @ (posedge ap_clk) begin
    sub_ln21_reg_721[1:0] <= 2'b00;
    sub_ln21_2_reg_727[1:0] <= 2'b00;
    zext_ln21_4_reg_733[9:5] <= 5'b00000;
    zext_ln21_12_reg_745[9:5] <= 5'b00000;
    sub_ln21_1_reg_756[1:0] <= 2'b00;
end

endmodule //convolution_convolution_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_11_2
