-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_edge_detector_sobel_edge_detector_Pipeline_VITIS_LOOP_55_5_VITIS_LOOP_58_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    edge_out_TREADY : IN STD_LOGIC;
    edge_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    edge_out_TVALID : OUT STD_LOGIC;
    temp_edge_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_ce0 : OUT STD_LOGIC;
    temp_edge_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_1_ce0 : OUT STD_LOGIC;
    temp_edge_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_2_ce0 : OUT STD_LOGIC;
    temp_edge_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_3_ce0 : OUT STD_LOGIC;
    temp_edge_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_4_ce0 : OUT STD_LOGIC;
    temp_edge_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_5_ce0 : OUT STD_LOGIC;
    temp_edge_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_6_ce0 : OUT STD_LOGIC;
    temp_edge_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_7_ce0 : OUT STD_LOGIC;
    temp_edge_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_8_ce0 : OUT STD_LOGIC;
    temp_edge_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_9_ce0 : OUT STD_LOGIC;
    temp_edge_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_10_ce0 : OUT STD_LOGIC;
    temp_edge_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_11_ce0 : OUT STD_LOGIC;
    temp_edge_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_12_ce0 : OUT STD_LOGIC;
    temp_edge_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_13_ce0 : OUT STD_LOGIC;
    temp_edge_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_14_ce0 : OUT STD_LOGIC;
    temp_edge_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_15_ce0 : OUT STD_LOGIC;
    temp_edge_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_16_ce0 : OUT STD_LOGIC;
    temp_edge_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_17_ce0 : OUT STD_LOGIC;
    temp_edge_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_18_ce0 : OUT STD_LOGIC;
    temp_edge_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_19_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_19_ce0 : OUT STD_LOGIC;
    temp_edge_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_20_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_20_ce0 : OUT STD_LOGIC;
    temp_edge_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_21_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_21_ce0 : OUT STD_LOGIC;
    temp_edge_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_22_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_22_ce0 : OUT STD_LOGIC;
    temp_edge_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_23_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_23_ce0 : OUT STD_LOGIC;
    temp_edge_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_24_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_24_ce0 : OUT STD_LOGIC;
    temp_edge_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_25_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_25_ce0 : OUT STD_LOGIC;
    temp_edge_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_26_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_26_ce0 : OUT STD_LOGIC;
    temp_edge_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_27_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_27_ce0 : OUT STD_LOGIC;
    temp_edge_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_28_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_28_ce0 : OUT STD_LOGIC;
    temp_edge_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_29_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_29_ce0 : OUT STD_LOGIC;
    temp_edge_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_30_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_30_ce0 : OUT STD_LOGIC;
    temp_edge_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_31_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_31_ce0 : OUT STD_LOGIC;
    temp_edge_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_32_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_32_ce0 : OUT STD_LOGIC;
    temp_edge_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_33_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_33_ce0 : OUT STD_LOGIC;
    temp_edge_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_34_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_34_ce0 : OUT STD_LOGIC;
    temp_edge_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_35_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_35_ce0 : OUT STD_LOGIC;
    temp_edge_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_36_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_36_ce0 : OUT STD_LOGIC;
    temp_edge_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_37_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_37_ce0 : OUT STD_LOGIC;
    temp_edge_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_38_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_38_ce0 : OUT STD_LOGIC;
    temp_edge_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_39_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_39_ce0 : OUT STD_LOGIC;
    temp_edge_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_40_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_40_ce0 : OUT STD_LOGIC;
    temp_edge_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_41_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_41_ce0 : OUT STD_LOGIC;
    temp_edge_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_42_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_42_ce0 : OUT STD_LOGIC;
    temp_edge_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_43_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_43_ce0 : OUT STD_LOGIC;
    temp_edge_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_44_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_44_ce0 : OUT STD_LOGIC;
    temp_edge_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_45_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_45_ce0 : OUT STD_LOGIC;
    temp_edge_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_46_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_46_ce0 : OUT STD_LOGIC;
    temp_edge_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_47_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_47_ce0 : OUT STD_LOGIC;
    temp_edge_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_48_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_48_ce0 : OUT STD_LOGIC;
    temp_edge_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_49_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_49_ce0 : OUT STD_LOGIC;
    temp_edge_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_50_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_50_ce0 : OUT STD_LOGIC;
    temp_edge_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_51_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_51_ce0 : OUT STD_LOGIC;
    temp_edge_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_52_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_52_ce0 : OUT STD_LOGIC;
    temp_edge_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_53_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_53_ce0 : OUT STD_LOGIC;
    temp_edge_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_54_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_54_ce0 : OUT STD_LOGIC;
    temp_edge_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_55_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_55_ce0 : OUT STD_LOGIC;
    temp_edge_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_56_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_56_ce0 : OUT STD_LOGIC;
    temp_edge_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_57_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_57_ce0 : OUT STD_LOGIC;
    temp_edge_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_58_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_58_ce0 : OUT STD_LOGIC;
    temp_edge_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_59_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_59_ce0 : OUT STD_LOGIC;
    temp_edge_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_60_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_60_ce0 : OUT STD_LOGIC;
    temp_edge_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_61_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_61_ce0 : OUT STD_LOGIC;
    temp_edge_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_62_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_62_ce0 : OUT STD_LOGIC;
    temp_edge_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_63_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_63_ce0 : OUT STD_LOGIC;
    temp_edge_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_64_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_64_ce0 : OUT STD_LOGIC;
    temp_edge_64_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_65_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_65_ce0 : OUT STD_LOGIC;
    temp_edge_65_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_66_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_66_ce0 : OUT STD_LOGIC;
    temp_edge_66_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_67_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_67_ce0 : OUT STD_LOGIC;
    temp_edge_67_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_68_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_68_ce0 : OUT STD_LOGIC;
    temp_edge_68_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_69_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_69_ce0 : OUT STD_LOGIC;
    temp_edge_69_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_70_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_70_ce0 : OUT STD_LOGIC;
    temp_edge_70_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_71_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_71_ce0 : OUT STD_LOGIC;
    temp_edge_71_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_72_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_72_ce0 : OUT STD_LOGIC;
    temp_edge_72_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_73_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_73_ce0 : OUT STD_LOGIC;
    temp_edge_73_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_74_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_74_ce0 : OUT STD_LOGIC;
    temp_edge_74_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_75_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_75_ce0 : OUT STD_LOGIC;
    temp_edge_75_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_76_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_76_ce0 : OUT STD_LOGIC;
    temp_edge_76_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_77_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_77_ce0 : OUT STD_LOGIC;
    temp_edge_77_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_78_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_78_ce0 : OUT STD_LOGIC;
    temp_edge_78_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_79_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_79_ce0 : OUT STD_LOGIC;
    temp_edge_79_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_80_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_80_ce0 : OUT STD_LOGIC;
    temp_edge_80_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_81_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_81_ce0 : OUT STD_LOGIC;
    temp_edge_81_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_82_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_82_ce0 : OUT STD_LOGIC;
    temp_edge_82_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_83_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_83_ce0 : OUT STD_LOGIC;
    temp_edge_83_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_84_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_84_ce0 : OUT STD_LOGIC;
    temp_edge_84_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_85_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_85_ce0 : OUT STD_LOGIC;
    temp_edge_85_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_86_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_86_ce0 : OUT STD_LOGIC;
    temp_edge_86_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_87_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_87_ce0 : OUT STD_LOGIC;
    temp_edge_87_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_88_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_88_ce0 : OUT STD_LOGIC;
    temp_edge_88_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_89_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_89_ce0 : OUT STD_LOGIC;
    temp_edge_89_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_90_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_90_ce0 : OUT STD_LOGIC;
    temp_edge_90_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_91_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_91_ce0 : OUT STD_LOGIC;
    temp_edge_91_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_92_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_92_ce0 : OUT STD_LOGIC;
    temp_edge_92_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_93_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_93_ce0 : OUT STD_LOGIC;
    temp_edge_93_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_94_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_94_ce0 : OUT STD_LOGIC;
    temp_edge_94_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_95_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_95_ce0 : OUT STD_LOGIC;
    temp_edge_95_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_96_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_96_ce0 : OUT STD_LOGIC;
    temp_edge_96_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_97_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_97_ce0 : OUT STD_LOGIC;
    temp_edge_97_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_98_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_98_ce0 : OUT STD_LOGIC;
    temp_edge_98_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_99_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_99_ce0 : OUT STD_LOGIC;
    temp_edge_99_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_100_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_100_ce0 : OUT STD_LOGIC;
    temp_edge_100_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_101_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_101_ce0 : OUT STD_LOGIC;
    temp_edge_101_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_102_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_102_ce0 : OUT STD_LOGIC;
    temp_edge_102_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_103_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_103_ce0 : OUT STD_LOGIC;
    temp_edge_103_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_104_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_104_ce0 : OUT STD_LOGIC;
    temp_edge_104_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_105_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_105_ce0 : OUT STD_LOGIC;
    temp_edge_105_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_106_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_106_ce0 : OUT STD_LOGIC;
    temp_edge_106_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_107_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_107_ce0 : OUT STD_LOGIC;
    temp_edge_107_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_108_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_108_ce0 : OUT STD_LOGIC;
    temp_edge_108_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_109_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_109_ce0 : OUT STD_LOGIC;
    temp_edge_109_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_110_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_110_ce0 : OUT STD_LOGIC;
    temp_edge_110_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_111_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_111_ce0 : OUT STD_LOGIC;
    temp_edge_111_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_112_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_112_ce0 : OUT STD_LOGIC;
    temp_edge_112_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_113_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_113_ce0 : OUT STD_LOGIC;
    temp_edge_113_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_114_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_114_ce0 : OUT STD_LOGIC;
    temp_edge_114_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_115_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_115_ce0 : OUT STD_LOGIC;
    temp_edge_115_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_116_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_116_ce0 : OUT STD_LOGIC;
    temp_edge_116_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_117_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_117_ce0 : OUT STD_LOGIC;
    temp_edge_117_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_118_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_118_ce0 : OUT STD_LOGIC;
    temp_edge_118_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_119_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_119_ce0 : OUT STD_LOGIC;
    temp_edge_119_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_120_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_120_ce0 : OUT STD_LOGIC;
    temp_edge_120_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_121_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_121_ce0 : OUT STD_LOGIC;
    temp_edge_121_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_122_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_122_ce0 : OUT STD_LOGIC;
    temp_edge_122_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_123_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_123_ce0 : OUT STD_LOGIC;
    temp_edge_123_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_124_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_124_ce0 : OUT STD_LOGIC;
    temp_edge_124_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_125_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_125_ce0 : OUT STD_LOGIC;
    temp_edge_125_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_126_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_126_ce0 : OUT STD_LOGIC;
    temp_edge_126_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_edge_127_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    temp_edge_127_ce0 : OUT STD_LOGIC;
    temp_edge_127_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of sobel_edge_detector_sobel_edge_detector_Pipeline_VITIS_LOOP_55_5_VITIS_LOOP_58_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv32_437F0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011111110000000000000000";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln55_reg_5534 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln55_fu_2833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal edge_out_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln55_reg_5534_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_5534_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln16_fu_2857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln16_reg_5538 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16_fu_2863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln16_reg_5542 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln16_reg_5542_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_4065_p259 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_6187 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal normalized_reg_6192 : STD_LOGIC_VECTOR (31 downto 0);
    signal normalized_reg_6192_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal normalized_1_fu_4626_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal normalized_1_reg_6199 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_reg_6204 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln342_fu_4647_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln342_reg_6210 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln342_reg_6210_pp0_iter14_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_3_fu_4660_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_6215 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln71_fu_4677_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln71_reg_6220 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_first_iter_1_phi_fu_2792_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal zext_ln55_fu_2885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_594 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal add_ln58_fu_3017_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_598 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln55_fu_2877_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten262_fu_602 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal add_ln55_fu_2839_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_indvar_flatten262_load : STD_LOGIC_VECTOR (14 downto 0);
    signal temp_edge_127_load1_fu_606 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_126_load3_fu_610 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_125_load5_fu_614 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_124_load7_fu_618 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_123_load9_fu_622 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_122_load11_fu_626 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_121_load13_fu_630 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_120_load15_fu_634 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_119_load17_fu_638 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_118_load19_fu_642 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_117_load21_fu_646 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_116_load23_fu_650 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_115_load25_fu_654 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_114_load27_fu_658 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_113_load29_fu_662 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_112_load31_fu_666 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_111_load33_fu_670 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_110_load35_fu_674 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_109_load37_fu_678 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_108_load39_fu_682 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_107_load41_fu_686 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_106_load43_fu_690 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_105_load45_fu_694 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_104_load47_fu_698 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_103_load49_fu_702 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_102_load51_fu_706 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_101_load53_fu_710 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_100_load55_fu_714 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_99_load57_fu_718 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_98_load59_fu_722 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_97_load61_fu_726 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_96_load63_fu_730 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_95_load65_fu_734 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_94_load67_fu_738 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_93_load69_fu_742 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_92_load71_fu_746 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_91_load73_fu_750 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_90_load75_fu_754 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_89_load77_fu_758 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_88_load79_fu_762 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_87_load81_fu_766 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_86_load83_fu_770 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_85_load85_fu_774 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_84_load87_fu_778 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_83_load89_fu_782 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_82_load91_fu_786 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_81_load93_fu_790 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_80_load95_fu_794 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_79_load97_fu_798 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_78_load99_fu_802 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_77_load101_fu_806 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_76_load103_fu_810 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_75_load105_fu_814 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_74_load107_fu_818 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_73_load109_fu_822 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_72_load111_fu_826 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_71_load113_fu_830 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_70_load115_fu_834 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_69_load117_fu_838 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_68_load119_fu_842 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_67_load121_fu_846 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_66_load123_fu_850 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_65_load125_fu_854 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_64_load127_fu_858 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_63_load129_fu_862 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_62_load131_fu_866 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_61_load133_fu_870 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_60_load135_fu_874 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_59_load137_fu_878 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_58_load139_fu_882 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_57_load141_fu_886 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_56_load143_fu_890 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_55_load145_fu_894 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_54_load147_fu_898 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_53_load149_fu_902 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_52_load151_fu_906 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_51_load153_fu_910 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_50_load155_fu_914 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_49_load157_fu_918 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_48_load159_fu_922 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_47_load161_fu_926 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_46_load163_fu_930 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_45_load165_fu_934 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_44_load167_fu_938 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_43_load169_fu_942 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_42_load171_fu_946 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_41_load173_fu_950 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_40_load175_fu_954 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_39_load177_fu_958 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_38_load179_fu_962 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_37_load181_fu_966 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_36_load183_fu_970 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_35_load185_fu_974 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_34_load187_fu_978 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_33_load189_fu_982 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_32_load191_fu_986 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_31_load193_fu_990 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_30_load195_fu_994 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_29_load197_fu_998 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_28_load199_fu_1002 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_27_load201_fu_1006 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_26_load203_fu_1010 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_25_load205_fu_1014 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_24_load207_fu_1018 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_23_load209_fu_1022 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_22_load211_fu_1026 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_21_load213_fu_1030 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_20_load215_fu_1034 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_19_load217_fu_1038 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_18_load219_fu_1042 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_17_load221_fu_1046 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_16_load223_fu_1050 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_15_load225_fu_1054 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_14_load227_fu_1058 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_13_load229_fu_1062 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_12_load231_fu_1066 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_11_load233_fu_1070 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_10_load235_fu_1074 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_9_load237_fu_1078 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_8_load239_fu_1082 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_7_load241_fu_1086 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_6_load243_fu_1090 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_5_load245_fu_1094 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_4_load247_fu_1098 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_3_load249_fu_1102 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_2_load251_fu_1106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_1_load253_fu_1110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_edge_load255_fu_1114 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln58_fu_2851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln55_1_fu_2871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_4065_p257 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_4065_p258 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln61_fu_4585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_4588_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln61_fu_4598_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln61_1_fu_4608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_fu_4602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln61_fu_4614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln61_fu_4620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2800_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_fu_4633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln317_fu_4651_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln317_fu_4654_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln71_fu_4668_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln71_fu_4673_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_fu_4685_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln71_1_fu_4698_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_fu_4694_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln71_fu_4701_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln71_fu_4705_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln71_fu_4711_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_4_fu_4717_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_4727_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_continue_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_done_int_frp : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal frp_pipeline_valid_U_valid_out : STD_LOGIC_VECTOR (15 downto 0);
    signal frp_pipeline_valid_U_num_valid_datasets : STD_LOGIC_VECTOR (4 downto 0);
    signal pf_edge_out_U_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal pf_edge_out_U_data_out_vld : STD_LOGIC;
    signal pf_edge_out_U_pf_ready : STD_LOGIC;
    signal pf_edge_out_U_pf_done : STD_LOGIC;
    signal ap_condition_frp_pvb_no_fwd_prs : BOOLEAN;
    signal ap_condition_frp_pvb_no_bkwd_prs : BOOLEAN;
    signal ap_condition_frp_pvb_pf_start : BOOLEAN;
    signal ap_frp_vld_in : STD_LOGIC;
    signal frp_pipeline_valid_U_exitcond : STD_LOGIC;
    signal pf_edge_out_U_data_in_vld : STD_LOGIC;
    signal pf_edge_out_U_frpsig_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal pf_all_done : STD_LOGIC := '0';
    signal tmp_fu_4065_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p5 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p7 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p9 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p11 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p13 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p15 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p17 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p19 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p21 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p23 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p25 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p27 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p29 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p31 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p33 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p35 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p37 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p39 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p41 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p43 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p45 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p47 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p49 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p51 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p53 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p55 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p57 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p59 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p61 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p63 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p65 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p67 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p69 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p71 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p73 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p75 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p77 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p79 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p81 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p83 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p85 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p87 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p89 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p91 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p93 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p95 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p97 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p99 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p101 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p103 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p105 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p107 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p109 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p111 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p113 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p115 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p117 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p119 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p121 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p123 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p125 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p127 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p131 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p133 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p135 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p137 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p139 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p141 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p143 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p145 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p147 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p149 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p151 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p153 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p155 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p157 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p159 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p161 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p163 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p165 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p167 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p169 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p171 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p173 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p175 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p177 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p179 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p181 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p183 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p185 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p187 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p189 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p191 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p193 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p195 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p197 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p199 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p201 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p203 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p205 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p207 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p209 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p211 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p213 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p215 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p217 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p219 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p221 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p223 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p225 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p227 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p229 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p231 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p233 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p235 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p237 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p239 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p241 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p243 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p245 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p247 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p249 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p251 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p253 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_4065_p255 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sobel_edge_detector_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_edge_detector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_edge_detector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sobel_edge_detector_sparsemux_257_7_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (6 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (6 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (6 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (6 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (6 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (6 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (6 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (6 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (6 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (6 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (6 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (6 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (6 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (6 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (6 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (6 downto 0);
        din15_WIDTH : INTEGER;
        CASE16 : STD_LOGIC_VECTOR (6 downto 0);
        din16_WIDTH : INTEGER;
        CASE17 : STD_LOGIC_VECTOR (6 downto 0);
        din17_WIDTH : INTEGER;
        CASE18 : STD_LOGIC_VECTOR (6 downto 0);
        din18_WIDTH : INTEGER;
        CASE19 : STD_LOGIC_VECTOR (6 downto 0);
        din19_WIDTH : INTEGER;
        CASE20 : STD_LOGIC_VECTOR (6 downto 0);
        din20_WIDTH : INTEGER;
        CASE21 : STD_LOGIC_VECTOR (6 downto 0);
        din21_WIDTH : INTEGER;
        CASE22 : STD_LOGIC_VECTOR (6 downto 0);
        din22_WIDTH : INTEGER;
        CASE23 : STD_LOGIC_VECTOR (6 downto 0);
        din23_WIDTH : INTEGER;
        CASE24 : STD_LOGIC_VECTOR (6 downto 0);
        din24_WIDTH : INTEGER;
        CASE25 : STD_LOGIC_VECTOR (6 downto 0);
        din25_WIDTH : INTEGER;
        CASE26 : STD_LOGIC_VECTOR (6 downto 0);
        din26_WIDTH : INTEGER;
        CASE27 : STD_LOGIC_VECTOR (6 downto 0);
        din27_WIDTH : INTEGER;
        CASE28 : STD_LOGIC_VECTOR (6 downto 0);
        din28_WIDTH : INTEGER;
        CASE29 : STD_LOGIC_VECTOR (6 downto 0);
        din29_WIDTH : INTEGER;
        CASE30 : STD_LOGIC_VECTOR (6 downto 0);
        din30_WIDTH : INTEGER;
        CASE31 : STD_LOGIC_VECTOR (6 downto 0);
        din31_WIDTH : INTEGER;
        CASE32 : STD_LOGIC_VECTOR (6 downto 0);
        din32_WIDTH : INTEGER;
        CASE33 : STD_LOGIC_VECTOR (6 downto 0);
        din33_WIDTH : INTEGER;
        CASE34 : STD_LOGIC_VECTOR (6 downto 0);
        din34_WIDTH : INTEGER;
        CASE35 : STD_LOGIC_VECTOR (6 downto 0);
        din35_WIDTH : INTEGER;
        CASE36 : STD_LOGIC_VECTOR (6 downto 0);
        din36_WIDTH : INTEGER;
        CASE37 : STD_LOGIC_VECTOR (6 downto 0);
        din37_WIDTH : INTEGER;
        CASE38 : STD_LOGIC_VECTOR (6 downto 0);
        din38_WIDTH : INTEGER;
        CASE39 : STD_LOGIC_VECTOR (6 downto 0);
        din39_WIDTH : INTEGER;
        CASE40 : STD_LOGIC_VECTOR (6 downto 0);
        din40_WIDTH : INTEGER;
        CASE41 : STD_LOGIC_VECTOR (6 downto 0);
        din41_WIDTH : INTEGER;
        CASE42 : STD_LOGIC_VECTOR (6 downto 0);
        din42_WIDTH : INTEGER;
        CASE43 : STD_LOGIC_VECTOR (6 downto 0);
        din43_WIDTH : INTEGER;
        CASE44 : STD_LOGIC_VECTOR (6 downto 0);
        din44_WIDTH : INTEGER;
        CASE45 : STD_LOGIC_VECTOR (6 downto 0);
        din45_WIDTH : INTEGER;
        CASE46 : STD_LOGIC_VECTOR (6 downto 0);
        din46_WIDTH : INTEGER;
        CASE47 : STD_LOGIC_VECTOR (6 downto 0);
        din47_WIDTH : INTEGER;
        CASE48 : STD_LOGIC_VECTOR (6 downto 0);
        din48_WIDTH : INTEGER;
        CASE49 : STD_LOGIC_VECTOR (6 downto 0);
        din49_WIDTH : INTEGER;
        CASE50 : STD_LOGIC_VECTOR (6 downto 0);
        din50_WIDTH : INTEGER;
        CASE51 : STD_LOGIC_VECTOR (6 downto 0);
        din51_WIDTH : INTEGER;
        CASE52 : STD_LOGIC_VECTOR (6 downto 0);
        din52_WIDTH : INTEGER;
        CASE53 : STD_LOGIC_VECTOR (6 downto 0);
        din53_WIDTH : INTEGER;
        CASE54 : STD_LOGIC_VECTOR (6 downto 0);
        din54_WIDTH : INTEGER;
        CASE55 : STD_LOGIC_VECTOR (6 downto 0);
        din55_WIDTH : INTEGER;
        CASE56 : STD_LOGIC_VECTOR (6 downto 0);
        din56_WIDTH : INTEGER;
        CASE57 : STD_LOGIC_VECTOR (6 downto 0);
        din57_WIDTH : INTEGER;
        CASE58 : STD_LOGIC_VECTOR (6 downto 0);
        din58_WIDTH : INTEGER;
        CASE59 : STD_LOGIC_VECTOR (6 downto 0);
        din59_WIDTH : INTEGER;
        CASE60 : STD_LOGIC_VECTOR (6 downto 0);
        din60_WIDTH : INTEGER;
        CASE61 : STD_LOGIC_VECTOR (6 downto 0);
        din61_WIDTH : INTEGER;
        CASE62 : STD_LOGIC_VECTOR (6 downto 0);
        din62_WIDTH : INTEGER;
        CASE63 : STD_LOGIC_VECTOR (6 downto 0);
        din63_WIDTH : INTEGER;
        CASE64 : STD_LOGIC_VECTOR (6 downto 0);
        din64_WIDTH : INTEGER;
        CASE65 : STD_LOGIC_VECTOR (6 downto 0);
        din65_WIDTH : INTEGER;
        CASE66 : STD_LOGIC_VECTOR (6 downto 0);
        din66_WIDTH : INTEGER;
        CASE67 : STD_LOGIC_VECTOR (6 downto 0);
        din67_WIDTH : INTEGER;
        CASE68 : STD_LOGIC_VECTOR (6 downto 0);
        din68_WIDTH : INTEGER;
        CASE69 : STD_LOGIC_VECTOR (6 downto 0);
        din69_WIDTH : INTEGER;
        CASE70 : STD_LOGIC_VECTOR (6 downto 0);
        din70_WIDTH : INTEGER;
        CASE71 : STD_LOGIC_VECTOR (6 downto 0);
        din71_WIDTH : INTEGER;
        CASE72 : STD_LOGIC_VECTOR (6 downto 0);
        din72_WIDTH : INTEGER;
        CASE73 : STD_LOGIC_VECTOR (6 downto 0);
        din73_WIDTH : INTEGER;
        CASE74 : STD_LOGIC_VECTOR (6 downto 0);
        din74_WIDTH : INTEGER;
        CASE75 : STD_LOGIC_VECTOR (6 downto 0);
        din75_WIDTH : INTEGER;
        CASE76 : STD_LOGIC_VECTOR (6 downto 0);
        din76_WIDTH : INTEGER;
        CASE77 : STD_LOGIC_VECTOR (6 downto 0);
        din77_WIDTH : INTEGER;
        CASE78 : STD_LOGIC_VECTOR (6 downto 0);
        din78_WIDTH : INTEGER;
        CASE79 : STD_LOGIC_VECTOR (6 downto 0);
        din79_WIDTH : INTEGER;
        CASE80 : STD_LOGIC_VECTOR (6 downto 0);
        din80_WIDTH : INTEGER;
        CASE81 : STD_LOGIC_VECTOR (6 downto 0);
        din81_WIDTH : INTEGER;
        CASE82 : STD_LOGIC_VECTOR (6 downto 0);
        din82_WIDTH : INTEGER;
        CASE83 : STD_LOGIC_VECTOR (6 downto 0);
        din83_WIDTH : INTEGER;
        CASE84 : STD_LOGIC_VECTOR (6 downto 0);
        din84_WIDTH : INTEGER;
        CASE85 : STD_LOGIC_VECTOR (6 downto 0);
        din85_WIDTH : INTEGER;
        CASE86 : STD_LOGIC_VECTOR (6 downto 0);
        din86_WIDTH : INTEGER;
        CASE87 : STD_LOGIC_VECTOR (6 downto 0);
        din87_WIDTH : INTEGER;
        CASE88 : STD_LOGIC_VECTOR (6 downto 0);
        din88_WIDTH : INTEGER;
        CASE89 : STD_LOGIC_VECTOR (6 downto 0);
        din89_WIDTH : INTEGER;
        CASE90 : STD_LOGIC_VECTOR (6 downto 0);
        din90_WIDTH : INTEGER;
        CASE91 : STD_LOGIC_VECTOR (6 downto 0);
        din91_WIDTH : INTEGER;
        CASE92 : STD_LOGIC_VECTOR (6 downto 0);
        din92_WIDTH : INTEGER;
        CASE93 : STD_LOGIC_VECTOR (6 downto 0);
        din93_WIDTH : INTEGER;
        CASE94 : STD_LOGIC_VECTOR (6 downto 0);
        din94_WIDTH : INTEGER;
        CASE95 : STD_LOGIC_VECTOR (6 downto 0);
        din95_WIDTH : INTEGER;
        CASE96 : STD_LOGIC_VECTOR (6 downto 0);
        din96_WIDTH : INTEGER;
        CASE97 : STD_LOGIC_VECTOR (6 downto 0);
        din97_WIDTH : INTEGER;
        CASE98 : STD_LOGIC_VECTOR (6 downto 0);
        din98_WIDTH : INTEGER;
        CASE99 : STD_LOGIC_VECTOR (6 downto 0);
        din99_WIDTH : INTEGER;
        CASE100 : STD_LOGIC_VECTOR (6 downto 0);
        din100_WIDTH : INTEGER;
        CASE101 : STD_LOGIC_VECTOR (6 downto 0);
        din101_WIDTH : INTEGER;
        CASE102 : STD_LOGIC_VECTOR (6 downto 0);
        din102_WIDTH : INTEGER;
        CASE103 : STD_LOGIC_VECTOR (6 downto 0);
        din103_WIDTH : INTEGER;
        CASE104 : STD_LOGIC_VECTOR (6 downto 0);
        din104_WIDTH : INTEGER;
        CASE105 : STD_LOGIC_VECTOR (6 downto 0);
        din105_WIDTH : INTEGER;
        CASE106 : STD_LOGIC_VECTOR (6 downto 0);
        din106_WIDTH : INTEGER;
        CASE107 : STD_LOGIC_VECTOR (6 downto 0);
        din107_WIDTH : INTEGER;
        CASE108 : STD_LOGIC_VECTOR (6 downto 0);
        din108_WIDTH : INTEGER;
        CASE109 : STD_LOGIC_VECTOR (6 downto 0);
        din109_WIDTH : INTEGER;
        CASE110 : STD_LOGIC_VECTOR (6 downto 0);
        din110_WIDTH : INTEGER;
        CASE111 : STD_LOGIC_VECTOR (6 downto 0);
        din111_WIDTH : INTEGER;
        CASE112 : STD_LOGIC_VECTOR (6 downto 0);
        din112_WIDTH : INTEGER;
        CASE113 : STD_LOGIC_VECTOR (6 downto 0);
        din113_WIDTH : INTEGER;
        CASE114 : STD_LOGIC_VECTOR (6 downto 0);
        din114_WIDTH : INTEGER;
        CASE115 : STD_LOGIC_VECTOR (6 downto 0);
        din115_WIDTH : INTEGER;
        CASE116 : STD_LOGIC_VECTOR (6 downto 0);
        din116_WIDTH : INTEGER;
        CASE117 : STD_LOGIC_VECTOR (6 downto 0);
        din117_WIDTH : INTEGER;
        CASE118 : STD_LOGIC_VECTOR (6 downto 0);
        din118_WIDTH : INTEGER;
        CASE119 : STD_LOGIC_VECTOR (6 downto 0);
        din119_WIDTH : INTEGER;
        CASE120 : STD_LOGIC_VECTOR (6 downto 0);
        din120_WIDTH : INTEGER;
        CASE121 : STD_LOGIC_VECTOR (6 downto 0);
        din121_WIDTH : INTEGER;
        CASE122 : STD_LOGIC_VECTOR (6 downto 0);
        din122_WIDTH : INTEGER;
        CASE123 : STD_LOGIC_VECTOR (6 downto 0);
        din123_WIDTH : INTEGER;
        CASE124 : STD_LOGIC_VECTOR (6 downto 0);
        din124_WIDTH : INTEGER;
        CASE125 : STD_LOGIC_VECTOR (6 downto 0);
        din125_WIDTH : INTEGER;
        CASE126 : STD_LOGIC_VECTOR (6 downto 0);
        din126_WIDTH : INTEGER;
        CASE127 : STD_LOGIC_VECTOR (6 downto 0);
        din127_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (31 downto 0);
        din121 : IN STD_LOGIC_VECTOR (31 downto 0);
        din122 : IN STD_LOGIC_VECTOR (31 downto 0);
        din123 : IN STD_LOGIC_VECTOR (31 downto 0);
        din124 : IN STD_LOGIC_VECTOR (31 downto 0);
        din125 : IN STD_LOGIC_VECTOR (31 downto 0);
        din126 : IN STD_LOGIC_VECTOR (31 downto 0);
        din127 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_edge_detector_frp_fifoout IS
    generic (
        BlockingType : INTEGER;
        PipeLatency : INTEGER;
        PipelineII : INTEGER;
        DataWidth : INTEGER;
        NumWrites : INTEGER;
        CeilLog2Stages : INTEGER;
        CeilLog2FDepth : INTEGER;
        PfAllDoneEnable : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        valid : IN STD_LOGIC_VECTOR (15 downto 0);
        data_in_vld : IN STD_LOGIC;
        data_out_vld : OUT STD_LOGIC;
        data_in_last : IN STD_LOGIC;
        pf_continue : IN STD_LOGIC;
        pf_all_done : IN STD_LOGIC;
        pf_ready : OUT STD_LOGIC;
        pf_done : OUT STD_LOGIC;
        data_out_read : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        num_valid_datasets : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component sobel_edge_detector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;


    component sobel_edge_detector_frp_pipeline_valid IS
    generic (
        PipelineLatency : INTEGER;
        PipelineII : INTEGER;
        CeilLog2Stages : INTEGER;
        ExitLatency : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        valid_in : IN STD_LOGIC;
        exitcond : IN STD_LOGIC;
        valid_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        num_valid_datasets : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    fadd_32ns_32ns_32_5_full_dsp_1_U128 : component sobel_edge_detector_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => normalized_1_reg_6199,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_2800_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U129 : component sobel_edge_detector_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_6187,
        din1 => ap_const_lv32_7F800000,
        ce => ap_const_logic_1,
        dout => grp_fu_2805_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U130 : component sobel_edge_detector_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => normalized_reg_6192,
        din1 => ap_const_lv32_437F0000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_2810_p2);

    sparsemux_257_7_32_1_1_U131 : component sobel_edge_detector_sparsemux_257_7_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000000",
        din0_WIDTH => 32,
        CASE1 => "0000001",
        din1_WIDTH => 32,
        CASE2 => "0000010",
        din2_WIDTH => 32,
        CASE3 => "0000011",
        din3_WIDTH => 32,
        CASE4 => "0000100",
        din4_WIDTH => 32,
        CASE5 => "0000101",
        din5_WIDTH => 32,
        CASE6 => "0000110",
        din6_WIDTH => 32,
        CASE7 => "0000111",
        din7_WIDTH => 32,
        CASE8 => "0001000",
        din8_WIDTH => 32,
        CASE9 => "0001001",
        din9_WIDTH => 32,
        CASE10 => "0001010",
        din10_WIDTH => 32,
        CASE11 => "0001011",
        din11_WIDTH => 32,
        CASE12 => "0001100",
        din12_WIDTH => 32,
        CASE13 => "0001101",
        din13_WIDTH => 32,
        CASE14 => "0001110",
        din14_WIDTH => 32,
        CASE15 => "0001111",
        din15_WIDTH => 32,
        CASE16 => "0010000",
        din16_WIDTH => 32,
        CASE17 => "0010001",
        din17_WIDTH => 32,
        CASE18 => "0010010",
        din18_WIDTH => 32,
        CASE19 => "0010011",
        din19_WIDTH => 32,
        CASE20 => "0010100",
        din20_WIDTH => 32,
        CASE21 => "0010101",
        din21_WIDTH => 32,
        CASE22 => "0010110",
        din22_WIDTH => 32,
        CASE23 => "0010111",
        din23_WIDTH => 32,
        CASE24 => "0011000",
        din24_WIDTH => 32,
        CASE25 => "0011001",
        din25_WIDTH => 32,
        CASE26 => "0011010",
        din26_WIDTH => 32,
        CASE27 => "0011011",
        din27_WIDTH => 32,
        CASE28 => "0011100",
        din28_WIDTH => 32,
        CASE29 => "0011101",
        din29_WIDTH => 32,
        CASE30 => "0011110",
        din30_WIDTH => 32,
        CASE31 => "0011111",
        din31_WIDTH => 32,
        CASE32 => "0100000",
        din32_WIDTH => 32,
        CASE33 => "0100001",
        din33_WIDTH => 32,
        CASE34 => "0100010",
        din34_WIDTH => 32,
        CASE35 => "0100011",
        din35_WIDTH => 32,
        CASE36 => "0100100",
        din36_WIDTH => 32,
        CASE37 => "0100101",
        din37_WIDTH => 32,
        CASE38 => "0100110",
        din38_WIDTH => 32,
        CASE39 => "0100111",
        din39_WIDTH => 32,
        CASE40 => "0101000",
        din40_WIDTH => 32,
        CASE41 => "0101001",
        din41_WIDTH => 32,
        CASE42 => "0101010",
        din42_WIDTH => 32,
        CASE43 => "0101011",
        din43_WIDTH => 32,
        CASE44 => "0101100",
        din44_WIDTH => 32,
        CASE45 => "0101101",
        din45_WIDTH => 32,
        CASE46 => "0101110",
        din46_WIDTH => 32,
        CASE47 => "0101111",
        din47_WIDTH => 32,
        CASE48 => "0110000",
        din48_WIDTH => 32,
        CASE49 => "0110001",
        din49_WIDTH => 32,
        CASE50 => "0110010",
        din50_WIDTH => 32,
        CASE51 => "0110011",
        din51_WIDTH => 32,
        CASE52 => "0110100",
        din52_WIDTH => 32,
        CASE53 => "0110101",
        din53_WIDTH => 32,
        CASE54 => "0110110",
        din54_WIDTH => 32,
        CASE55 => "0110111",
        din55_WIDTH => 32,
        CASE56 => "0111000",
        din56_WIDTH => 32,
        CASE57 => "0111001",
        din57_WIDTH => 32,
        CASE58 => "0111010",
        din58_WIDTH => 32,
        CASE59 => "0111011",
        din59_WIDTH => 32,
        CASE60 => "0111100",
        din60_WIDTH => 32,
        CASE61 => "0111101",
        din61_WIDTH => 32,
        CASE62 => "0111110",
        din62_WIDTH => 32,
        CASE63 => "0111111",
        din63_WIDTH => 32,
        CASE64 => "1000000",
        din64_WIDTH => 32,
        CASE65 => "1000001",
        din65_WIDTH => 32,
        CASE66 => "1000010",
        din66_WIDTH => 32,
        CASE67 => "1000011",
        din67_WIDTH => 32,
        CASE68 => "1000100",
        din68_WIDTH => 32,
        CASE69 => "1000101",
        din69_WIDTH => 32,
        CASE70 => "1000110",
        din70_WIDTH => 32,
        CASE71 => "1000111",
        din71_WIDTH => 32,
        CASE72 => "1001000",
        din72_WIDTH => 32,
        CASE73 => "1001001",
        din73_WIDTH => 32,
        CASE74 => "1001010",
        din74_WIDTH => 32,
        CASE75 => "1001011",
        din75_WIDTH => 32,
        CASE76 => "1001100",
        din76_WIDTH => 32,
        CASE77 => "1001101",
        din77_WIDTH => 32,
        CASE78 => "1001110",
        din78_WIDTH => 32,
        CASE79 => "1001111",
        din79_WIDTH => 32,
        CASE80 => "1010000",
        din80_WIDTH => 32,
        CASE81 => "1010001",
        din81_WIDTH => 32,
        CASE82 => "1010010",
        din82_WIDTH => 32,
        CASE83 => "1010011",
        din83_WIDTH => 32,
        CASE84 => "1010100",
        din84_WIDTH => 32,
        CASE85 => "1010101",
        din85_WIDTH => 32,
        CASE86 => "1010110",
        din86_WIDTH => 32,
        CASE87 => "1010111",
        din87_WIDTH => 32,
        CASE88 => "1011000",
        din88_WIDTH => 32,
        CASE89 => "1011001",
        din89_WIDTH => 32,
        CASE90 => "1011010",
        din90_WIDTH => 32,
        CASE91 => "1011011",
        din91_WIDTH => 32,
        CASE92 => "1011100",
        din92_WIDTH => 32,
        CASE93 => "1011101",
        din93_WIDTH => 32,
        CASE94 => "1011110",
        din94_WIDTH => 32,
        CASE95 => "1011111",
        din95_WIDTH => 32,
        CASE96 => "1100000",
        din96_WIDTH => 32,
        CASE97 => "1100001",
        din97_WIDTH => 32,
        CASE98 => "1100010",
        din98_WIDTH => 32,
        CASE99 => "1100011",
        din99_WIDTH => 32,
        CASE100 => "1100100",
        din100_WIDTH => 32,
        CASE101 => "1100101",
        din101_WIDTH => 32,
        CASE102 => "1100110",
        din102_WIDTH => 32,
        CASE103 => "1100111",
        din103_WIDTH => 32,
        CASE104 => "1101000",
        din104_WIDTH => 32,
        CASE105 => "1101001",
        din105_WIDTH => 32,
        CASE106 => "1101010",
        din106_WIDTH => 32,
        CASE107 => "1101011",
        din107_WIDTH => 32,
        CASE108 => "1101100",
        din108_WIDTH => 32,
        CASE109 => "1101101",
        din109_WIDTH => 32,
        CASE110 => "1101110",
        din110_WIDTH => 32,
        CASE111 => "1101111",
        din111_WIDTH => 32,
        CASE112 => "1110000",
        din112_WIDTH => 32,
        CASE113 => "1110001",
        din113_WIDTH => 32,
        CASE114 => "1110010",
        din114_WIDTH => 32,
        CASE115 => "1110011",
        din115_WIDTH => 32,
        CASE116 => "1110100",
        din116_WIDTH => 32,
        CASE117 => "1110101",
        din117_WIDTH => 32,
        CASE118 => "1110110",
        din118_WIDTH => 32,
        CASE119 => "1110111",
        din119_WIDTH => 32,
        CASE120 => "1111000",
        din120_WIDTH => 32,
        CASE121 => "1111001",
        din121_WIDTH => 32,
        CASE122 => "1111010",
        din122_WIDTH => 32,
        CASE123 => "1111011",
        din123_WIDTH => 32,
        CASE124 => "1111100",
        din124_WIDTH => 32,
        CASE125 => "1111101",
        din125_WIDTH => 32,
        CASE126 => "1111110",
        din126_WIDTH => 32,
        CASE127 => "1111111",
        din127_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => temp_edge_load255_fu_1114,
        din1 => temp_edge_1_load253_fu_1110,
        din2 => temp_edge_2_load251_fu_1106,
        din3 => temp_edge_3_load249_fu_1102,
        din4 => temp_edge_4_load247_fu_1098,
        din5 => temp_edge_5_load245_fu_1094,
        din6 => temp_edge_6_load243_fu_1090,
        din7 => temp_edge_7_load241_fu_1086,
        din8 => temp_edge_8_load239_fu_1082,
        din9 => temp_edge_9_load237_fu_1078,
        din10 => temp_edge_10_load235_fu_1074,
        din11 => temp_edge_11_load233_fu_1070,
        din12 => temp_edge_12_load231_fu_1066,
        din13 => temp_edge_13_load229_fu_1062,
        din14 => temp_edge_14_load227_fu_1058,
        din15 => temp_edge_15_load225_fu_1054,
        din16 => temp_edge_16_load223_fu_1050,
        din17 => temp_edge_17_load221_fu_1046,
        din18 => temp_edge_18_load219_fu_1042,
        din19 => temp_edge_19_load217_fu_1038,
        din20 => temp_edge_20_load215_fu_1034,
        din21 => temp_edge_21_load213_fu_1030,
        din22 => temp_edge_22_load211_fu_1026,
        din23 => temp_edge_23_load209_fu_1022,
        din24 => temp_edge_24_load207_fu_1018,
        din25 => temp_edge_25_load205_fu_1014,
        din26 => temp_edge_26_load203_fu_1010,
        din27 => temp_edge_27_load201_fu_1006,
        din28 => temp_edge_28_load199_fu_1002,
        din29 => temp_edge_29_load197_fu_998,
        din30 => temp_edge_30_load195_fu_994,
        din31 => temp_edge_31_load193_fu_990,
        din32 => temp_edge_32_load191_fu_986,
        din33 => temp_edge_33_load189_fu_982,
        din34 => temp_edge_34_load187_fu_978,
        din35 => temp_edge_35_load185_fu_974,
        din36 => temp_edge_36_load183_fu_970,
        din37 => temp_edge_37_load181_fu_966,
        din38 => temp_edge_38_load179_fu_962,
        din39 => temp_edge_39_load177_fu_958,
        din40 => temp_edge_40_load175_fu_954,
        din41 => temp_edge_41_load173_fu_950,
        din42 => temp_edge_42_load171_fu_946,
        din43 => temp_edge_43_load169_fu_942,
        din44 => temp_edge_44_load167_fu_938,
        din45 => temp_edge_45_load165_fu_934,
        din46 => temp_edge_46_load163_fu_930,
        din47 => temp_edge_47_load161_fu_926,
        din48 => temp_edge_48_load159_fu_922,
        din49 => temp_edge_49_load157_fu_918,
        din50 => temp_edge_50_load155_fu_914,
        din51 => temp_edge_51_load153_fu_910,
        din52 => temp_edge_52_load151_fu_906,
        din53 => temp_edge_53_load149_fu_902,
        din54 => temp_edge_54_load147_fu_898,
        din55 => temp_edge_55_load145_fu_894,
        din56 => temp_edge_56_load143_fu_890,
        din57 => temp_edge_57_load141_fu_886,
        din58 => temp_edge_58_load139_fu_882,
        din59 => temp_edge_59_load137_fu_878,
        din60 => temp_edge_60_load135_fu_874,
        din61 => temp_edge_61_load133_fu_870,
        din62 => temp_edge_62_load131_fu_866,
        din63 => temp_edge_63_load129_fu_862,
        din64 => temp_edge_64_load127_fu_858,
        din65 => temp_edge_65_load125_fu_854,
        din66 => temp_edge_66_load123_fu_850,
        din67 => temp_edge_67_load121_fu_846,
        din68 => temp_edge_68_load119_fu_842,
        din69 => temp_edge_69_load117_fu_838,
        din70 => temp_edge_70_load115_fu_834,
        din71 => temp_edge_71_load113_fu_830,
        din72 => temp_edge_72_load111_fu_826,
        din73 => temp_edge_73_load109_fu_822,
        din74 => temp_edge_74_load107_fu_818,
        din75 => temp_edge_75_load105_fu_814,
        din76 => temp_edge_76_load103_fu_810,
        din77 => temp_edge_77_load101_fu_806,
        din78 => temp_edge_78_load99_fu_802,
        din79 => temp_edge_79_load97_fu_798,
        din80 => temp_edge_80_load95_fu_794,
        din81 => temp_edge_81_load93_fu_790,
        din82 => temp_edge_82_load91_fu_786,
        din83 => temp_edge_83_load89_fu_782,
        din84 => temp_edge_84_load87_fu_778,
        din85 => temp_edge_85_load85_fu_774,
        din86 => temp_edge_86_load83_fu_770,
        din87 => temp_edge_87_load81_fu_766,
        din88 => temp_edge_88_load79_fu_762,
        din89 => temp_edge_89_load77_fu_758,
        din90 => temp_edge_90_load75_fu_754,
        din91 => temp_edge_91_load73_fu_750,
        din92 => temp_edge_92_load71_fu_746,
        din93 => temp_edge_93_load69_fu_742,
        din94 => temp_edge_94_load67_fu_738,
        din95 => temp_edge_95_load65_fu_734,
        din96 => temp_edge_96_load63_fu_730,
        din97 => temp_edge_97_load61_fu_726,
        din98 => temp_edge_98_load59_fu_722,
        din99 => temp_edge_99_load57_fu_718,
        din100 => temp_edge_100_load55_fu_714,
        din101 => temp_edge_101_load53_fu_710,
        din102 => temp_edge_102_load51_fu_706,
        din103 => temp_edge_103_load49_fu_702,
        din104 => temp_edge_104_load47_fu_698,
        din105 => temp_edge_105_load45_fu_694,
        din106 => temp_edge_106_load43_fu_690,
        din107 => temp_edge_107_load41_fu_686,
        din108 => temp_edge_108_load39_fu_682,
        din109 => temp_edge_109_load37_fu_678,
        din110 => temp_edge_110_load35_fu_674,
        din111 => temp_edge_111_load33_fu_670,
        din112 => temp_edge_112_load31_fu_666,
        din113 => temp_edge_113_load29_fu_662,
        din114 => temp_edge_114_load27_fu_658,
        din115 => temp_edge_115_load25_fu_654,
        din116 => temp_edge_116_load23_fu_650,
        din117 => temp_edge_117_load21_fu_646,
        din118 => temp_edge_118_load19_fu_642,
        din119 => temp_edge_119_load17_fu_638,
        din120 => temp_edge_120_load15_fu_634,
        din121 => temp_edge_121_load13_fu_630,
        din122 => temp_edge_122_load11_fu_626,
        din123 => temp_edge_123_load9_fu_622,
        din124 => temp_edge_124_load7_fu_618,
        din125 => temp_edge_125_load5_fu_614,
        din126 => temp_edge_126_load3_fu_610,
        din127 => temp_edge_127_load1_fu_606,
        def => tmp_fu_4065_p257,
        sel => tmp_fu_4065_p258,
        dout => tmp_fu_4065_p259);

    flow_control_loop_pipe_sequential_init_U : component sobel_edge_detector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => pf_all_done,
        ap_continue_int => ap_continue_int,
        ap_done_int => pf_all_done);

    frp_pipeline_valid_U : component sobel_edge_detector_frp_pipeline_valid
    generic map (
        PipelineLatency => 16,
        PipelineII => 1,
        CeilLog2Stages => 4,
        ExitLatency => 0)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        valid_in => ap_frp_vld_in,
        exitcond => frp_pipeline_valid_U_exitcond,
        valid_out => frp_pipeline_valid_U_valid_out,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_edge_out_U : component sobel_edge_detector_frp_fifoout
    generic map (
        BlockingType => 1,
        PipeLatency => 16,
        PipelineII => 1,
        DataWidth => 8,
        NumWrites => 1,
        CeilLog2Stages => 4,
        CeilLog2FDepth => 5,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => pf_edge_out_U_frpsig_data_in,
        data_out => pf_edge_out_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_edge_out_U_data_in_vld,
        data_out_vld => pf_edge_out_U_data_out_vld,
        data_in_last => ap_done_int_frp,
        pf_continue => ap_const_logic_1,
        pf_all_done => pf_all_done,
        pf_ready => pf_edge_out_U_pf_ready,
        pf_done => pf_edge_out_U_pf_done,
        data_out_read => edge_out_TREADY,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    pf_all_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                pf_all_done <= ap_const_logic_0;
            else
                pf_all_done <= (pf_edge_out_U_pf_done);
            end if;
        end if;
    end process;


    i_fu_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and ((icmp_ln55_fu_2833_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                i_fu_598 <= select_ln55_fu_2877_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                i_fu_598 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten262_fu_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and ((icmp_ln55_fu_2833_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                indvar_flatten262_fu_602 <= add_ln55_fu_2839_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten262_fu_602 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    j_fu_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and ((icmp_ln55_fu_2833_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                j_fu_594 <= add_ln58_fu_3017_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                j_fu_594 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln55_reg_5534_pp0_iter10_reg <= icmp_ln55_reg_5534_pp0_iter9_reg;
                icmp_ln55_reg_5534_pp0_iter11_reg <= icmp_ln55_reg_5534_pp0_iter10_reg;
                icmp_ln55_reg_5534_pp0_iter12_reg <= icmp_ln55_reg_5534_pp0_iter11_reg;
                icmp_ln55_reg_5534_pp0_iter13_reg <= icmp_ln55_reg_5534_pp0_iter12_reg;
                icmp_ln55_reg_5534_pp0_iter14_reg <= icmp_ln55_reg_5534_pp0_iter13_reg;
                icmp_ln55_reg_5534_pp0_iter2_reg <= icmp_ln55_reg_5534_pp0_iter1_reg;
                icmp_ln55_reg_5534_pp0_iter3_reg <= icmp_ln55_reg_5534_pp0_iter2_reg;
                icmp_ln55_reg_5534_pp0_iter4_reg <= icmp_ln55_reg_5534_pp0_iter3_reg;
                icmp_ln55_reg_5534_pp0_iter5_reg <= icmp_ln55_reg_5534_pp0_iter4_reg;
                icmp_ln55_reg_5534_pp0_iter6_reg <= icmp_ln55_reg_5534_pp0_iter5_reg;
                icmp_ln55_reg_5534_pp0_iter7_reg <= icmp_ln55_reg_5534_pp0_iter6_reg;
                icmp_ln55_reg_5534_pp0_iter8_reg <= icmp_ln55_reg_5534_pp0_iter7_reg;
                icmp_ln55_reg_5534_pp0_iter9_reg <= icmp_ln55_reg_5534_pp0_iter8_reg;
                normalized_1_reg_6199 <= normalized_1_fu_4626_p3;
                normalized_reg_6192 <= grp_fu_2805_p2;
                normalized_reg_6192_pp0_iter7_reg <= normalized_reg_6192;
                select_ln71_reg_6220 <= select_ln71_fu_4677_p3;
                tmp_3_reg_6215 <= add_ln317_fu_4654_p2(8 downto 8);
                tmp_reg_6187 <= tmp_fu_4065_p259;
                trunc_ln342_reg_6210 <= trunc_ln342_fu_4647_p1;
                trunc_ln342_reg_6210_pp0_iter14_reg <= trunc_ln342_reg_6210;
                xs_exp_reg_6204 <= data_fu_4633_p1(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln55_reg_5534 <= icmp_ln55_fu_2833_p2;
                icmp_ln55_reg_5534_pp0_iter1_reg <= icmp_ln55_reg_5534;
                or_ln16_reg_5538 <= or_ln16_fu_2857_p2;
                select_ln16_reg_5542 <= select_ln16_fu_2863_p3;
                select_ln16_reg_5542_pp0_iter1_reg <= select_ln16_reg_5542;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((frp_pipeline_valid_U_valid_out(1) = ap_const_logic_1) and ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln16_reg_5538 = ap_const_lv1_1)))) then
                temp_edge_100_load55_fu_714 <= temp_edge_100_q0;
                temp_edge_101_load53_fu_710 <= temp_edge_101_q0;
                temp_edge_102_load51_fu_706 <= temp_edge_102_q0;
                temp_edge_103_load49_fu_702 <= temp_edge_103_q0;
                temp_edge_104_load47_fu_698 <= temp_edge_104_q0;
                temp_edge_105_load45_fu_694 <= temp_edge_105_q0;
                temp_edge_106_load43_fu_690 <= temp_edge_106_q0;
                temp_edge_107_load41_fu_686 <= temp_edge_107_q0;
                temp_edge_108_load39_fu_682 <= temp_edge_108_q0;
                temp_edge_109_load37_fu_678 <= temp_edge_109_q0;
                temp_edge_10_load235_fu_1074 <= temp_edge_10_q0;
                temp_edge_110_load35_fu_674 <= temp_edge_110_q0;
                temp_edge_111_load33_fu_670 <= temp_edge_111_q0;
                temp_edge_112_load31_fu_666 <= temp_edge_112_q0;
                temp_edge_113_load29_fu_662 <= temp_edge_113_q0;
                temp_edge_114_load27_fu_658 <= temp_edge_114_q0;
                temp_edge_115_load25_fu_654 <= temp_edge_115_q0;
                temp_edge_116_load23_fu_650 <= temp_edge_116_q0;
                temp_edge_117_load21_fu_646 <= temp_edge_117_q0;
                temp_edge_118_load19_fu_642 <= temp_edge_118_q0;
                temp_edge_119_load17_fu_638 <= temp_edge_119_q0;
                temp_edge_11_load233_fu_1070 <= temp_edge_11_q0;
                temp_edge_120_load15_fu_634 <= temp_edge_120_q0;
                temp_edge_121_load13_fu_630 <= temp_edge_121_q0;
                temp_edge_122_load11_fu_626 <= temp_edge_122_q0;
                temp_edge_123_load9_fu_622 <= temp_edge_123_q0;
                temp_edge_124_load7_fu_618 <= temp_edge_124_q0;
                temp_edge_125_load5_fu_614 <= temp_edge_125_q0;
                temp_edge_126_load3_fu_610 <= temp_edge_126_q0;
                temp_edge_127_load1_fu_606 <= temp_edge_127_q0;
                temp_edge_12_load231_fu_1066 <= temp_edge_12_q0;
                temp_edge_13_load229_fu_1062 <= temp_edge_13_q0;
                temp_edge_14_load227_fu_1058 <= temp_edge_14_q0;
                temp_edge_15_load225_fu_1054 <= temp_edge_15_q0;
                temp_edge_16_load223_fu_1050 <= temp_edge_16_q0;
                temp_edge_17_load221_fu_1046 <= temp_edge_17_q0;
                temp_edge_18_load219_fu_1042 <= temp_edge_18_q0;
                temp_edge_19_load217_fu_1038 <= temp_edge_19_q0;
                temp_edge_1_load253_fu_1110 <= temp_edge_1_q0;
                temp_edge_20_load215_fu_1034 <= temp_edge_20_q0;
                temp_edge_21_load213_fu_1030 <= temp_edge_21_q0;
                temp_edge_22_load211_fu_1026 <= temp_edge_22_q0;
                temp_edge_23_load209_fu_1022 <= temp_edge_23_q0;
                temp_edge_24_load207_fu_1018 <= temp_edge_24_q0;
                temp_edge_25_load205_fu_1014 <= temp_edge_25_q0;
                temp_edge_26_load203_fu_1010 <= temp_edge_26_q0;
                temp_edge_27_load201_fu_1006 <= temp_edge_27_q0;
                temp_edge_28_load199_fu_1002 <= temp_edge_28_q0;
                temp_edge_29_load197_fu_998 <= temp_edge_29_q0;
                temp_edge_2_load251_fu_1106 <= temp_edge_2_q0;
                temp_edge_30_load195_fu_994 <= temp_edge_30_q0;
                temp_edge_31_load193_fu_990 <= temp_edge_31_q0;
                temp_edge_32_load191_fu_986 <= temp_edge_32_q0;
                temp_edge_33_load189_fu_982 <= temp_edge_33_q0;
                temp_edge_34_load187_fu_978 <= temp_edge_34_q0;
                temp_edge_35_load185_fu_974 <= temp_edge_35_q0;
                temp_edge_36_load183_fu_970 <= temp_edge_36_q0;
                temp_edge_37_load181_fu_966 <= temp_edge_37_q0;
                temp_edge_38_load179_fu_962 <= temp_edge_38_q0;
                temp_edge_39_load177_fu_958 <= temp_edge_39_q0;
                temp_edge_3_load249_fu_1102 <= temp_edge_3_q0;
                temp_edge_40_load175_fu_954 <= temp_edge_40_q0;
                temp_edge_41_load173_fu_950 <= temp_edge_41_q0;
                temp_edge_42_load171_fu_946 <= temp_edge_42_q0;
                temp_edge_43_load169_fu_942 <= temp_edge_43_q0;
                temp_edge_44_load167_fu_938 <= temp_edge_44_q0;
                temp_edge_45_load165_fu_934 <= temp_edge_45_q0;
                temp_edge_46_load163_fu_930 <= temp_edge_46_q0;
                temp_edge_47_load161_fu_926 <= temp_edge_47_q0;
                temp_edge_48_load159_fu_922 <= temp_edge_48_q0;
                temp_edge_49_load157_fu_918 <= temp_edge_49_q0;
                temp_edge_4_load247_fu_1098 <= temp_edge_4_q0;
                temp_edge_50_load155_fu_914 <= temp_edge_50_q0;
                temp_edge_51_load153_fu_910 <= temp_edge_51_q0;
                temp_edge_52_load151_fu_906 <= temp_edge_52_q0;
                temp_edge_53_load149_fu_902 <= temp_edge_53_q0;
                temp_edge_54_load147_fu_898 <= temp_edge_54_q0;
                temp_edge_55_load145_fu_894 <= temp_edge_55_q0;
                temp_edge_56_load143_fu_890 <= temp_edge_56_q0;
                temp_edge_57_load141_fu_886 <= temp_edge_57_q0;
                temp_edge_58_load139_fu_882 <= temp_edge_58_q0;
                temp_edge_59_load137_fu_878 <= temp_edge_59_q0;
                temp_edge_5_load245_fu_1094 <= temp_edge_5_q0;
                temp_edge_60_load135_fu_874 <= temp_edge_60_q0;
                temp_edge_61_load133_fu_870 <= temp_edge_61_q0;
                temp_edge_62_load131_fu_866 <= temp_edge_62_q0;
                temp_edge_63_load129_fu_862 <= temp_edge_63_q0;
                temp_edge_64_load127_fu_858 <= temp_edge_64_q0;
                temp_edge_65_load125_fu_854 <= temp_edge_65_q0;
                temp_edge_66_load123_fu_850 <= temp_edge_66_q0;
                temp_edge_67_load121_fu_846 <= temp_edge_67_q0;
                temp_edge_68_load119_fu_842 <= temp_edge_68_q0;
                temp_edge_69_load117_fu_838 <= temp_edge_69_q0;
                temp_edge_6_load243_fu_1090 <= temp_edge_6_q0;
                temp_edge_70_load115_fu_834 <= temp_edge_70_q0;
                temp_edge_71_load113_fu_830 <= temp_edge_71_q0;
                temp_edge_72_load111_fu_826 <= temp_edge_72_q0;
                temp_edge_73_load109_fu_822 <= temp_edge_73_q0;
                temp_edge_74_load107_fu_818 <= temp_edge_74_q0;
                temp_edge_75_load105_fu_814 <= temp_edge_75_q0;
                temp_edge_76_load103_fu_810 <= temp_edge_76_q0;
                temp_edge_77_load101_fu_806 <= temp_edge_77_q0;
                temp_edge_78_load99_fu_802 <= temp_edge_78_q0;
                temp_edge_79_load97_fu_798 <= temp_edge_79_q0;
                temp_edge_7_load241_fu_1086 <= temp_edge_7_q0;
                temp_edge_80_load95_fu_794 <= temp_edge_80_q0;
                temp_edge_81_load93_fu_790 <= temp_edge_81_q0;
                temp_edge_82_load91_fu_786 <= temp_edge_82_q0;
                temp_edge_83_load89_fu_782 <= temp_edge_83_q0;
                temp_edge_84_load87_fu_778 <= temp_edge_84_q0;
                temp_edge_85_load85_fu_774 <= temp_edge_85_q0;
                temp_edge_86_load83_fu_770 <= temp_edge_86_q0;
                temp_edge_87_load81_fu_766 <= temp_edge_87_q0;
                temp_edge_88_load79_fu_762 <= temp_edge_88_q0;
                temp_edge_89_load77_fu_758 <= temp_edge_89_q0;
                temp_edge_8_load239_fu_1082 <= temp_edge_8_q0;
                temp_edge_90_load75_fu_754 <= temp_edge_90_q0;
                temp_edge_91_load73_fu_750 <= temp_edge_91_q0;
                temp_edge_92_load71_fu_746 <= temp_edge_92_q0;
                temp_edge_93_load69_fu_742 <= temp_edge_93_q0;
                temp_edge_94_load67_fu_738 <= temp_edge_94_q0;
                temp_edge_95_load65_fu_734 <= temp_edge_95_q0;
                temp_edge_96_load63_fu_730 <= temp_edge_96_q0;
                temp_edge_97_load61_fu_726 <= temp_edge_97_q0;
                temp_edge_98_load59_fu_722 <= temp_edge_98_q0;
                temp_edge_99_load57_fu_718 <= temp_edge_99_q0;
                temp_edge_9_load237_fu_1078 <= temp_edge_9_q0;
                temp_edge_load255_fu_1114 <= temp_edge_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln317_fu_4654_p2 <= std_logic_vector(unsigned(zext_ln317_fu_4651_p1) + unsigned(ap_const_lv9_181));
    add_ln55_1_fu_2871_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv8_1));
    add_ln55_fu_2839_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten262_load) + unsigned(ap_const_lv15_1));
    add_ln58_fu_3017_p2 <= std_logic_vector(unsigned(select_ln16_fu_2863_p3) + unsigned(ap_const_lv8_1));
    and_ln61_fu_4620_p2 <= (or_ln61_fu_4614_p2 and grp_fu_2810_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_block_pp0_stage0 <= ap_const_boolean_0;
    ap_block_pp0_stage0_00001 <= ap_const_boolean_0;
    ap_block_pp0_stage0_01001 <= ap_const_boolean_0;
    ap_block_pp0_stage0_11001 <= ap_const_boolean_0;
    ap_block_pp0_stage0_subdone <= ap_const_boolean_0;

    ap_block_state16_pp0_stage0_iter15_assign_proc : process(icmp_ln55_reg_5534_pp0_iter14_reg)
    begin
                ap_block_state16_pp0_stage0_iter15 <= ((icmp_ln55_reg_5534_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_block_pp0_stage0_subdone, icmp_ln55_fu_2833_p2, frp_pipeline_valid_U_valid_out)
    begin
        if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and ((icmp_ln55_fu_2833_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_frp_pvb_no_bkwd_prs_assign_proc : process(pf_edge_out_U_pf_ready)
    begin
                ap_condition_frp_pvb_no_bkwd_prs <= (pf_edge_out_U_pf_ready = ap_const_logic_1);
    end process;

        ap_condition_frp_pvb_no_fwd_prs <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_condition_frp_pvb_pf_start_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_condition_frp_pvb_pf_start <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_int_frp_assign_proc : process(ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_1))) then 
            ap_done_int_frp <= ap_const_logic_1;
        else 
            ap_done_int_frp <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_reg_pp0_iter1_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(1) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(10) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter10 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(11) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter11 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(12) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter12 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(13) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter13 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(14) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter14 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(15) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter15 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(2) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter2 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(3) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter3 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(4) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter4 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(5) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter5 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(6) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter6 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(7) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter7 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(8) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter8 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(9) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter9 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_frp_vld_in_assign_proc : process(ap_condition_frp_pvb_no_fwd_prs, ap_condition_frp_pvb_no_bkwd_prs, ap_condition_frp_pvb_pf_start)
    begin
        if (((ap_const_boolean_1 = ap_condition_frp_pvb_pf_start) and (ap_const_boolean_1 = ap_condition_frp_pvb_no_bkwd_prs) and (ap_const_boolean_1 = ap_condition_frp_pvb_no_fwd_prs))) then 
            ap_frp_vld_in <= ap_const_logic_1;
        else 
            ap_frp_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_first_iter_1_phi_fu_2792_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_reg_5534, ap_block_pp0_stage0, ap_loop_init, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_phi_mux_first_iter_1_phi_fu_2792_p4 <= ap_const_lv1_1;
        elsif (((frp_pipeline_valid_U_valid_out(1) = ap_const_logic_1) and ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln55_reg_5534 = ap_const_lv1_0)))) then 
            ap_phi_mux_first_iter_1_phi_fu_2792_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_first_iter_1_phi_fu_2792_p4 <= ap_const_lv1_1;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_block_pp0_stage0_subdone, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_598)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_598;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten262_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten262_fu_602)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten262_load <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_indvar_flatten262_load <= indvar_flatten262_fu_602;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_594)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_594;
        end if; 
    end process;

    bitcast_ln61_fu_4585_p1 <= normalized_reg_6192_pp0_iter7_reg;
    data_fu_4633_p1 <= grp_fu_2800_p2;
    edge_out_TDATA <= pf_edge_out_U_data_out;
    edge_out_TDATA_blk_n <= ap_const_logic_1;

    edge_out_TVALID_assign_proc : process(pf_edge_out_U_data_out_vld)
    begin
        if ((pf_edge_out_U_data_out_vld = ap_const_logic_1)) then 
            edge_out_TVALID <= ap_const_logic_1;
        else 
            edge_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    frp_pipeline_valid_U_exitcond_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln55_fu_2833_p2)
    begin
        if (((icmp_ln55_fu_2833_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            frp_pipeline_valid_U_exitcond <= ap_const_logic_1;
        else 
            frp_pipeline_valid_U_exitcond <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln55_fu_2833_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten262_load = ap_const_lv15_4000) else "0";
    icmp_ln58_fu_2851_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv8_80) else "0";
    icmp_ln61_1_fu_4608_p2 <= "1" when (trunc_ln61_fu_4598_p1 = ap_const_lv23_0) else "0";
    icmp_ln61_fu_4602_p2 <= "0" when (tmp_1_fu_4588_p4 = ap_const_lv8_FF) else "1";
    lshr_ln71_fu_4705_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_fu_4694_p1),to_integer(unsigned('0' & zext_ln71_fu_4701_p1(31-1 downto 0)))));
    mantissa_fu_4685_p4 <= ((ap_const_lv1_1 & trunc_ln342_reg_6210_pp0_iter14_reg) & ap_const_lv1_0);
    normalized_1_fu_4626_p3 <= 
        ap_const_lv32_437F0000 when (and_ln61_fu_4620_p2(0) = '1') else 
        normalized_reg_6192_pp0_iter7_reg;
    or_ln16_fu_2857_p2 <= (icmp_ln58_fu_2851_p2 or ap_phi_mux_first_iter_1_phi_fu_2792_p4);
    or_ln61_fu_4614_p2 <= (icmp_ln61_fu_4602_p2 or icmp_ln61_1_fu_4608_p2);

    pf_edge_out_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter15, icmp_ln55_reg_5534_pp0_iter14_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln55_reg_5534_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            pf_edge_out_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_edge_out_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;

    pf_edge_out_U_frpsig_data_in <= 
        tmp_4_fu_4717_p4 when (tmp_3_reg_6215(0) = '1') else 
        tmp_5_fu_4727_p4;
    select_ln16_fu_2863_p3 <= 
        ap_const_lv8_0 when (icmp_ln58_fu_2851_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln55_fu_2877_p3 <= 
        add_ln55_1_fu_2871_p2 when (icmp_ln58_fu_2851_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln71_fu_4677_p3 <= 
        sext_ln71_fu_4673_p1 when (tmp_3_fu_4660_p3(0) = '1') else 
        add_ln317_fu_4654_p2;
        sext_ln71_1_fu_4698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln71_reg_6220),32));

        sext_ln71_fu_4673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_fu_4668_p2),9));

    shl_ln71_fu_4711_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_fu_4694_p1),to_integer(unsigned('0' & zext_ln71_fu_4701_p1(31-1 downto 0)))));
    sub_ln71_fu_4668_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_reg_6204));
    temp_edge_100_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_100_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_100_ce0 <= ap_const_logic_1;
        else 
            temp_edge_100_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_101_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_101_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_101_ce0 <= ap_const_logic_1;
        else 
            temp_edge_101_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_102_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_102_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_102_ce0 <= ap_const_logic_1;
        else 
            temp_edge_102_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_103_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_103_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_103_ce0 <= ap_const_logic_1;
        else 
            temp_edge_103_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_104_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_104_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_104_ce0 <= ap_const_logic_1;
        else 
            temp_edge_104_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_105_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_105_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_105_ce0 <= ap_const_logic_1;
        else 
            temp_edge_105_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_106_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_106_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_106_ce0 <= ap_const_logic_1;
        else 
            temp_edge_106_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_107_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_107_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_107_ce0 <= ap_const_logic_1;
        else 
            temp_edge_107_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_108_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_108_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_108_ce0 <= ap_const_logic_1;
        else 
            temp_edge_108_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_109_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_109_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_109_ce0 <= ap_const_logic_1;
        else 
            temp_edge_109_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_10_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_10_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_10_ce0 <= ap_const_logic_1;
        else 
            temp_edge_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_110_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_110_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_110_ce0 <= ap_const_logic_1;
        else 
            temp_edge_110_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_111_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_111_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_111_ce0 <= ap_const_logic_1;
        else 
            temp_edge_111_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_112_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_112_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_112_ce0 <= ap_const_logic_1;
        else 
            temp_edge_112_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_113_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_113_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_113_ce0 <= ap_const_logic_1;
        else 
            temp_edge_113_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_114_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_114_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_114_ce0 <= ap_const_logic_1;
        else 
            temp_edge_114_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_115_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_115_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_115_ce0 <= ap_const_logic_1;
        else 
            temp_edge_115_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_116_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_116_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_116_ce0 <= ap_const_logic_1;
        else 
            temp_edge_116_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_117_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_117_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_117_ce0 <= ap_const_logic_1;
        else 
            temp_edge_117_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_118_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_118_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_118_ce0 <= ap_const_logic_1;
        else 
            temp_edge_118_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_119_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_119_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_119_ce0 <= ap_const_logic_1;
        else 
            temp_edge_119_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_11_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_11_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_11_ce0 <= ap_const_logic_1;
        else 
            temp_edge_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_120_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_120_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_120_ce0 <= ap_const_logic_1;
        else 
            temp_edge_120_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_121_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_121_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_121_ce0 <= ap_const_logic_1;
        else 
            temp_edge_121_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_122_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_122_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_122_ce0 <= ap_const_logic_1;
        else 
            temp_edge_122_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_123_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_123_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_123_ce0 <= ap_const_logic_1;
        else 
            temp_edge_123_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_124_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_124_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_124_ce0 <= ap_const_logic_1;
        else 
            temp_edge_124_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_125_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_125_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_125_ce0 <= ap_const_logic_1;
        else 
            temp_edge_125_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_126_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_126_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_126_ce0 <= ap_const_logic_1;
        else 
            temp_edge_126_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_127_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_127_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_127_ce0 <= ap_const_logic_1;
        else 
            temp_edge_127_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_12_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_12_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_12_ce0 <= ap_const_logic_1;
        else 
            temp_edge_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_13_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_13_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_13_ce0 <= ap_const_logic_1;
        else 
            temp_edge_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_14_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_14_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_14_ce0 <= ap_const_logic_1;
        else 
            temp_edge_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_15_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_15_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_15_ce0 <= ap_const_logic_1;
        else 
            temp_edge_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_16_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_16_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_16_ce0 <= ap_const_logic_1;
        else 
            temp_edge_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_17_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_17_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_17_ce0 <= ap_const_logic_1;
        else 
            temp_edge_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_18_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_18_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_18_ce0 <= ap_const_logic_1;
        else 
            temp_edge_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_19_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_19_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_19_ce0 <= ap_const_logic_1;
        else 
            temp_edge_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_1_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_1_ce0 <= ap_const_logic_1;
        else 
            temp_edge_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_20_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_20_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_20_ce0 <= ap_const_logic_1;
        else 
            temp_edge_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_21_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_21_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_21_ce0 <= ap_const_logic_1;
        else 
            temp_edge_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_22_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_22_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_22_ce0 <= ap_const_logic_1;
        else 
            temp_edge_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_23_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_23_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_23_ce0 <= ap_const_logic_1;
        else 
            temp_edge_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_24_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_24_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_24_ce0 <= ap_const_logic_1;
        else 
            temp_edge_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_25_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_25_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_25_ce0 <= ap_const_logic_1;
        else 
            temp_edge_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_26_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_26_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_26_ce0 <= ap_const_logic_1;
        else 
            temp_edge_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_27_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_27_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_27_ce0 <= ap_const_logic_1;
        else 
            temp_edge_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_28_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_28_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_28_ce0 <= ap_const_logic_1;
        else 
            temp_edge_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_29_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_29_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_29_ce0 <= ap_const_logic_1;
        else 
            temp_edge_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_2_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_2_ce0 <= ap_const_logic_1;
        else 
            temp_edge_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_30_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_30_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_30_ce0 <= ap_const_logic_1;
        else 
            temp_edge_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_31_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_31_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_31_ce0 <= ap_const_logic_1;
        else 
            temp_edge_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_32_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_32_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_32_ce0 <= ap_const_logic_1;
        else 
            temp_edge_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_33_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_33_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_33_ce0 <= ap_const_logic_1;
        else 
            temp_edge_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_34_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_34_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_34_ce0 <= ap_const_logic_1;
        else 
            temp_edge_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_35_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_35_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_35_ce0 <= ap_const_logic_1;
        else 
            temp_edge_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_36_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_36_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_36_ce0 <= ap_const_logic_1;
        else 
            temp_edge_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_37_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_37_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_37_ce0 <= ap_const_logic_1;
        else 
            temp_edge_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_38_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_38_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_38_ce0 <= ap_const_logic_1;
        else 
            temp_edge_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_39_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_39_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_39_ce0 <= ap_const_logic_1;
        else 
            temp_edge_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_3_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_3_ce0 <= ap_const_logic_1;
        else 
            temp_edge_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_40_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_40_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_40_ce0 <= ap_const_logic_1;
        else 
            temp_edge_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_41_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_41_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_41_ce0 <= ap_const_logic_1;
        else 
            temp_edge_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_42_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_42_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_42_ce0 <= ap_const_logic_1;
        else 
            temp_edge_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_43_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_43_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_43_ce0 <= ap_const_logic_1;
        else 
            temp_edge_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_44_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_44_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_44_ce0 <= ap_const_logic_1;
        else 
            temp_edge_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_45_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_45_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_45_ce0 <= ap_const_logic_1;
        else 
            temp_edge_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_46_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_46_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_46_ce0 <= ap_const_logic_1;
        else 
            temp_edge_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_47_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_47_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_47_ce0 <= ap_const_logic_1;
        else 
            temp_edge_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_48_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_48_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_48_ce0 <= ap_const_logic_1;
        else 
            temp_edge_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_49_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_49_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_49_ce0 <= ap_const_logic_1;
        else 
            temp_edge_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_4_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_4_ce0 <= ap_const_logic_1;
        else 
            temp_edge_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_50_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_50_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_50_ce0 <= ap_const_logic_1;
        else 
            temp_edge_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_51_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_51_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_51_ce0 <= ap_const_logic_1;
        else 
            temp_edge_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_52_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_52_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_52_ce0 <= ap_const_logic_1;
        else 
            temp_edge_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_53_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_53_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_53_ce0 <= ap_const_logic_1;
        else 
            temp_edge_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_54_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_54_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_54_ce0 <= ap_const_logic_1;
        else 
            temp_edge_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_55_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_55_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_55_ce0 <= ap_const_logic_1;
        else 
            temp_edge_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_56_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_56_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_56_ce0 <= ap_const_logic_1;
        else 
            temp_edge_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_57_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_57_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_57_ce0 <= ap_const_logic_1;
        else 
            temp_edge_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_58_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_58_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_58_ce0 <= ap_const_logic_1;
        else 
            temp_edge_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_59_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_59_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_59_ce0 <= ap_const_logic_1;
        else 
            temp_edge_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_5_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_5_ce0 <= ap_const_logic_1;
        else 
            temp_edge_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_60_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_60_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_60_ce0 <= ap_const_logic_1;
        else 
            temp_edge_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_61_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_61_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_61_ce0 <= ap_const_logic_1;
        else 
            temp_edge_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_62_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_62_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_62_ce0 <= ap_const_logic_1;
        else 
            temp_edge_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_63_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_63_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_63_ce0 <= ap_const_logic_1;
        else 
            temp_edge_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_64_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_64_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_64_ce0 <= ap_const_logic_1;
        else 
            temp_edge_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_65_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_65_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_65_ce0 <= ap_const_logic_1;
        else 
            temp_edge_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_66_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_66_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_66_ce0 <= ap_const_logic_1;
        else 
            temp_edge_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_67_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_67_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_67_ce0 <= ap_const_logic_1;
        else 
            temp_edge_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_68_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_68_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_68_ce0 <= ap_const_logic_1;
        else 
            temp_edge_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_69_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_69_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_69_ce0 <= ap_const_logic_1;
        else 
            temp_edge_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_6_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_6_ce0 <= ap_const_logic_1;
        else 
            temp_edge_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_70_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_70_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_70_ce0 <= ap_const_logic_1;
        else 
            temp_edge_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_71_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_71_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_71_ce0 <= ap_const_logic_1;
        else 
            temp_edge_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_72_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_72_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_72_ce0 <= ap_const_logic_1;
        else 
            temp_edge_72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_73_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_73_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_73_ce0 <= ap_const_logic_1;
        else 
            temp_edge_73_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_74_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_74_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_74_ce0 <= ap_const_logic_1;
        else 
            temp_edge_74_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_75_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_75_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_75_ce0 <= ap_const_logic_1;
        else 
            temp_edge_75_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_76_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_76_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_76_ce0 <= ap_const_logic_1;
        else 
            temp_edge_76_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_77_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_77_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_77_ce0 <= ap_const_logic_1;
        else 
            temp_edge_77_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_78_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_78_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_78_ce0 <= ap_const_logic_1;
        else 
            temp_edge_78_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_79_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_79_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_79_ce0 <= ap_const_logic_1;
        else 
            temp_edge_79_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_7_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_7_ce0 <= ap_const_logic_1;
        else 
            temp_edge_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_80_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_80_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_80_ce0 <= ap_const_logic_1;
        else 
            temp_edge_80_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_81_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_81_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_81_ce0 <= ap_const_logic_1;
        else 
            temp_edge_81_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_82_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_82_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_82_ce0 <= ap_const_logic_1;
        else 
            temp_edge_82_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_83_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_83_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_83_ce0 <= ap_const_logic_1;
        else 
            temp_edge_83_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_84_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_84_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_84_ce0 <= ap_const_logic_1;
        else 
            temp_edge_84_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_85_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_85_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_85_ce0 <= ap_const_logic_1;
        else 
            temp_edge_85_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_86_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_86_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_86_ce0 <= ap_const_logic_1;
        else 
            temp_edge_86_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_87_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_87_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_87_ce0 <= ap_const_logic_1;
        else 
            temp_edge_87_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_88_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_88_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_88_ce0 <= ap_const_logic_1;
        else 
            temp_edge_88_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_89_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_89_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_89_ce0 <= ap_const_logic_1;
        else 
            temp_edge_89_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_8_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_8_ce0 <= ap_const_logic_1;
        else 
            temp_edge_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_90_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_90_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_90_ce0 <= ap_const_logic_1;
        else 
            temp_edge_90_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_91_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_91_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_91_ce0 <= ap_const_logic_1;
        else 
            temp_edge_91_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_92_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_92_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_92_ce0 <= ap_const_logic_1;
        else 
            temp_edge_92_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_93_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_93_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_93_ce0 <= ap_const_logic_1;
        else 
            temp_edge_93_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_94_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_94_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_94_ce0 <= ap_const_logic_1;
        else 
            temp_edge_94_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_95_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_95_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_95_ce0 <= ap_const_logic_1;
        else 
            temp_edge_95_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_96_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_96_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_96_ce0 <= ap_const_logic_1;
        else 
            temp_edge_96_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_97_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_97_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_97_ce0 <= ap_const_logic_1;
        else 
            temp_edge_97_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_98_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_98_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_98_ce0 <= ap_const_logic_1;
        else 
            temp_edge_98_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_99_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_99_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_99_ce0 <= ap_const_logic_1;
        else 
            temp_edge_99_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_9_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_9_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_9_ce0 <= ap_const_logic_1;
        else 
            temp_edge_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    temp_edge_address0 <= zext_ln55_fu_2885_p1(7 - 1 downto 0);

    temp_edge_ce0_assign_proc : process(ap_block_pp0_stage0_11001, frp_pipeline_valid_U_valid_out)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1))) then 
            temp_edge_ce0 <= ap_const_logic_1;
        else 
            temp_edge_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_4588_p4 <= bitcast_ln61_fu_4585_p1(30 downto 23);
    tmp_3_fu_4660_p3 <= add_ln317_fu_4654_p2(8 downto 8);
    tmp_4_fu_4717_p4 <= lshr_ln71_fu_4705_p2(31 downto 24);
    tmp_5_fu_4727_p4 <= shl_ln71_fu_4711_p2(31 downto 24);
    tmp_fu_4065_p257 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_fu_4065_p258 <= select_ln16_reg_5542_pp0_iter1_reg(7 - 1 downto 0);
    trunc_ln342_fu_4647_p1 <= data_fu_4633_p1(23 - 1 downto 0);
    trunc_ln61_fu_4598_p1 <= bitcast_ln61_fu_4585_p1(23 - 1 downto 0);
    zext_ln317_fu_4651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_reg_6204),9));
    zext_ln55_fu_2885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_fu_2877_p3),64));
    zext_ln68_fu_4694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_4685_p4),55));
    zext_ln71_fu_4701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln71_1_fu_4698_p1),55));
end behav;
