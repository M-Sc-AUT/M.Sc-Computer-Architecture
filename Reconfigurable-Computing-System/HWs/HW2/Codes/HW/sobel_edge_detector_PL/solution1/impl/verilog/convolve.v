// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolve_convolve,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.174000,HLS_SYN_LAT=65,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=524,HLS_SYN_LUT=829,HLS_VERSION=2023_2}" *)

module convolve (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        x_address1,
        x_ce1,
        x_q1,
        kernel_address0,
        kernel_ce0,
        kernel_q0,
        kernel_address1,
        kernel_ce1,
        kernel_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [4:0] x_address1;
output   x_ce1;
input  [31:0] x_q1;
output  [3:0] kernel_address0;
output   kernel_ce0;
input  [31:0] kernel_q0;
output  [3:0] kernel_address1;
output   kernel_ce1;
input  [31:0] kernel_q1;
output  [4:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] kernel_address0;
reg kernel_ce0;
reg[3:0] kernel_address1;
reg kernel_ce1;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
reg   [31:0] kernel_load_reg_244;
wire    ap_CS_fsm_state3;
reg   [31:0] kernel_load_1_reg_259;
reg   [31:0] kernel_load_2_reg_264;
wire    ap_CS_fsm_state4;
reg   [31:0] kernel_load_3_reg_279;
reg   [31:0] kernel_load_4_reg_284;
wire    ap_CS_fsm_state5;
reg   [31:0] kernel_load_5_reg_299;
reg   [31:0] kernel_load_6_reg_304;
reg   [31:0] kernel_load_7_reg_309;
wire    ap_CS_fsm_state6;
reg   [31:0] kernel_load_8_reg_314;
wire   [2:0] trunc_ln14_fu_184_p1;
reg   [2:0] trunc_ln14_reg_322;
wire    ap_CS_fsm_state7;
wire   [4:0] add_ln31_2_fu_195_p2;
reg   [4:0] add_ln31_2_reg_327;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_done;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_idle;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_ready;
wire   [4:0] grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address0;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce0;
wire   [4:0] grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address1;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce1;
wire   [4:0] grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_address0;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_ce0;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_we0;
wire   [31:0] grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_d0;
wire   [4:0] grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out;
wire    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out_ap_vld;
reg    grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [4:0] i_fu_56;
wire    ap_CS_fsm_state9;
wire   [4:0] shl_ln31_fu_189_p2;
wire   [0:0] icmp_ln18_fu_205_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg = 1'b0;
#0 i_fu_56 = 5'd0;
end

convolve_convolve_Pipeline_VITIS_LOOP_21_2 grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start),
    .ap_done(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_done),
    .ap_idle(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_idle),
    .ap_ready(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_ready),
    .add_ln31_2(add_ln31_2_reg_327),
    .x_address0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address0),
    .x_ce0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce0),
    .x_q0(x_q0),
    .x_address1(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address1),
    .x_ce1(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce1),
    .x_q1(x_q1),
    .output_r_address0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_address0),
    .output_r_ce0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_ce0),
    .output_r_we0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_we0),
    .output_r_d0(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_d0),
    .empty(trunc_ln14_reg_322),
    .i(i_fu_56),
    .w_7(kernel_load_7_reg_309),
    .w_8(kernel_load_8_reg_314),
    .w_2(kernel_load_2_reg_264),
    .w_1(kernel_load_1_reg_259),
    .w_5(kernel_load_5_reg_299),
    .w_3(kernel_load_3_reg_279),
    .w_4(kernel_load_4_reg_284),
    .w_6(kernel_load_6_reg_304),
    .w(kernel_load_reg_244),
    .p_phi_out(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out),
    .p_phi_out_ap_vld(grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg <= 1'b1;
        end else if ((grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_ready == 1'b1)) begin
            grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_56 <= 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i_fu_56 <= grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln31_2_reg_327 <= add_ln31_2_fu_195_p2;
        trunc_ln14_reg_322 <= trunc_ln14_fu_184_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_load_1_reg_259 <= kernel_q1;
        kernel_load_2_reg_264 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_load_3_reg_279 <= kernel_q0;
        kernel_load_4_reg_284 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_load_5_reg_299 <= kernel_q0;
        kernel_load_6_reg_304 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_load_7_reg_309 <= kernel_q0;
        kernel_load_8_reg_314 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_load_reg_244 <= kernel_q0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln18_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln18_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        kernel_address0 = 64'd0;
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_address1 = 64'd1;
    end else begin
        kernel_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        kernel_ce1 = 1'b1;
    end else begin
        kernel_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln18_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_2_fu_195_p2 = (shl_ln31_fu_189_p2 + i_fu_56);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_ap_start_reg;

assign icmp_ln18_fu_205_p2 = ((grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_p_phi_out == 5'd4) ? 1'b1 : 1'b0);

assign output_r_address0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_address0;

assign output_r_ce0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_ce0;

assign output_r_d0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_d0;

assign output_r_we0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_output_r_we0;

assign shl_ln31_fu_189_p2 = i_fu_56 << 5'd2;

assign trunc_ln14_fu_184_p1 = i_fu_56[2:0];

assign x_address0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address0;

assign x_address1 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_address1;

assign x_ce0 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce0;

assign x_ce1 = grp_convolve_Pipeline_VITIS_LOOP_21_2_fu_154_x_ce1;

endmodule //convolve
