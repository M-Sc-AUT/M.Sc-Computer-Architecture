/******************************************************************************
* Copyright (C) 2023 Advanced Micro Devices, Inc. All Rights Reserved.
* SPDX-License-Identifier: MIT
******************************************************************************/
/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "sleep.h"

#include "xil_io.h"


int main()
{
    init_platform();

    u64 ADRS_BRAM = XPAR_BRAM_0_BASEADDR;
    u64 ADRS_DDR = XPAR_DDR_MEM_BASEADDR + 10000;

    u64 ADRS_GPIO_Start = XPAR_AXI_GPIO_0_BASEADDR;
    u64 ADRS_GPIO_Done = XPAR_AXI_GPIO_1_BASEADDR;
    u64 ADRS_GPIO_LEDs = XPAR_AXI_GPIO_2_BASEADDR;

    u32 Val1 = 65231;
    u32 Val2 = 47851;
    u32 Val3 = 0x00000000;

    xil_printf("Test Started : \n\r");
    Xil_Out8( ADRS_GPIO_Start,0);
    Xil_Out8( ADRS_GPIO_LEDs,0);
    sleep(1);

    //BRAM Test
    Xil_Out32(ADRS_BRAM, Val1);
    Xil_Out32(ADRS_BRAM + 4 , Val2);
    Xil_Out32(ADRS_BRAM + 8 , Val3);

    xil_printf("Check Data Storage In BRAM :");

    if(Xil_In32(ADRS_BRAM)==Val1 && Xil_In32(ADRS_BRAM + 4)==Val2)
    	xil_printf("   BRAM Data OK :D \n");
    else
    	xil_printf("   BRAM Data not OK :(( \n");

    Xil_Out8( ADRS_GPIO_LEDs,1);
    sleep(2);
    Xil_Out8( ADRS_GPIO_Start,1);
    Xil_Out8( ADRS_GPIO_Start,0);
    while(Xil_In8(ADRS_GPIO_Done) == 0)
    {
    	xil_printf("   No Data :(( \n");
    }
    xil_printf("....   New Data .... \n");
    Val3=Xil_In32(ADRS_BRAM + 8);
    xil_printf(" %u x %u = %u \n", Val1,Val2,Val3);
    Xil_Out8( ADRS_GPIO_LEDs,2);
    sleep(1);

    //DDR TEST
    Xil_Out32(ADRS_DDR, Val1);
    Xil_Out32(ADRS_DDR + 4 , Val2);
    xil_printf("Check Data Storage In DDR :");
    if(Xil_In32(ADRS_DDR)==Val1 && Xil_In32(ADRS_DDR + 4)==Val2)
        	xil_printf("   DDR Data OK :D \n");
        else
        	xil_printf("   DDR Data not OK :(( \n");

    while(1)
    {
		Xil_Out8( ADRS_GPIO_LEDs,1);
		sleep(1);
		Xil_Out8( ADRS_GPIO_LEDs,2);
		sleep(1);
    }
    cleanup_platform();
    return 0;
}
