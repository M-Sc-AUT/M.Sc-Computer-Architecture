-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity cnn_dense_dense_weights_0_0_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 9; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 392
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of cnn_dense_dense_weights_0_0_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "000000111", 1 => "111100101", 2 => "111101010", 3 => "111000111", 
    4 => "111011100", 5 => "111010011", 6 => "111100011", 7 => "000010100", 
    8 => "111011001", 9 => "111101010", 10 => "111101111", 11 => "111101011", 
    12 => "111101000", 13 => "110101001", 14 => "000100101", 15 => "000010110", 
    16 => "111100000", 17 => "111101111", 18 => "000000001", 19 => "111000000", 
    20 => "110011101", 21 => "111100000", 22 => "111110001", 23 => "111110111", 
    24 => "111101111", 25 => "111110000", 26 => "111111000", 27 => "101110011", 
    28 => "111110100", 29 => "000001000", 30 => "000000100", 31 => "000110101", 
    32 => "111110010", 33 => "000010000", 34 => "111111110", 35 => "000000110", 
    36 => "000100100", 37 => "000010100", 38 => "000011001", 39 => "000011101", 
    40 => "000101011", 41 => "000010111", 42 => "111110000", 43 => "000110000", 
    44 => "000000101", 45 => "111110101", 46 => "000011001", 47 => "000101010", 
    48 => "000110111", 49 => "111110110", 50 => "111111010", 51 => "000010111", 
    52 => "111000010", 53 => "000001110", 54 => "000100000", 55 => "111110111", 
    56 => "111101110", 57 => "111101111", 58 => "000001100", 59 => "000010000", 
    60 => "000011010", 61 => "000101100", 62 => "111011111", 63 => "111010000", 
    64 => "111110101", 65 => "111101000", 66 => "111110101", 67 => "111101011", 
    68 => "000001101", 69 => "111011011", 70 => "111010110", 71 => "111110001", 
    72 => "000000100", 73 => "111101001", 74 => "111010000", 75 => "111011011", 
    76 => "111001101", 77 => "110110011", 78 => "000001100", 79 => "111100101", 
    80 => "000011101", 81 => "110010011", 82 => "110111010", 83 => "111000100", 
    84 => "111001011", 85 => "000000110", 86 => "000011100", 87 => "000101010", 
    88 => "111011001", 89 => "111000001", 90 => "111001110", 91 => "111110111", 
    92 => "111010010", 93 => "000100111", 94 => "111111011", 95 => "111100001", 
    96 => "111010100", 97 => "111010011", 98 => "000101001", 99 => "000011100", 
    100 => "000001110", 101 => "000110011", 102 => "000100110", 103 => "000001101", 
    104 => "111111001", 105 => "000001110", 106 => "000001000", 107 => "111011111", 
    108 => "000000101", 109 => "000010011", 110 => "000010100", 111 => "111110100", 
    112 => "111111101", 113 => "111011101", 114 => "110011011", 115 => "111001000", 
    116 => "111111000", 117 => "111101011", 118 => "111010001", 119 => "000000011", 
    120 => "111101100", 121 => "111010011", 122 => "111110011", 123 => "111110010", 
    124 => "111111110", 125 => "111001001", 126 => "111101101", 127 => "111100000", 
    128 => "111011100", 129 => "111110100", 130 => "111110110", 131 => "111101111", 
    132 => "111011011", 133 => "000010110", 134 => "111100001", 135 => "111010000", 
    136 => "111100101", 137 => "000001000", 138 => "111110101", 139 => "111010110", 
    140 => "000001000", 141 => "111110001", 142 => "111001011", 143 => "110101010", 
    144 => "111111000", 145 => "111110000", 146 => "111100000", 147 => "000100110", 
    148 => "111110100", 149 => "110111100", 150 => "110011100", 151 => "110110111", 
    152 => "111111011", 153 => "111110101", 154 => "000011100", 155 => "000010010", 
    156 => "000000000", 157 => "110111101", 158 => "111110000", 159 => "111111010", 
    160 => "000000101", 161 => "000001100", 162 => "111101010", 163 => "000000100", 
    164 => "000011011", 165 => "111111001", 166 => "000001111", 167 => "000000010", 
    168 => "000000011", 169 => "000100000", 170 => "000000001", 171 => "000000010", 
    172 => "111110000", 173 => "000000101", 174 => "111100100", 175 => "111111001", 
    176 => "000000100", 177 => "000001101", 178 => "111111011", 179 => "000010100", 
    180 => "000001100", 181 => "111111101", 182 => "000001100", 183 => "000010111", 
    184 => "111110111", 185 => "111101111", 186 => "111101110", 187 => "111101000", 
    188 => "111110001", 189 => "000000010", 190 => "000011101", 191 => "000010000", 
    192 => "111111100", 193 => "111111101", 194 => "111101101", 195 => "000001110", 
    196 => "000001111", 197 => "111100010", 198 => "000001010", 199 => "111101011", 
    200 => "111011100", 201 => "111011011", 202 => "111011010", 203 => "000101011", 
    204 => "000001011", 205 => "111100100", 206 => "000000110", 207 => "000000010", 
    208 => "000010010", 209 => "111011011", 210 => "000010100", 211 => "000000100", 
    212 => "111001011", 213 => "000001110", 214 => "000010101", 215 => "111110011", 
    216 => "000000101", 217 => "000001000", 218 => "110010100", 219 => "111001000", 
    220 => "000010101", 221 => "000010100", 222 => "000001011", 223 => "111111011", 
    224 => "111110100", 225 => "110110001", 226 => "111000010", 227 => "111110110", 
    228 => "000011000", 229 => "000000001", 230 => "000001101", 231 => "111110001", 
    232 => "110100110", 233 => "111101110", 234 => "000100101", 235 => "111111100", 
    236 => "000010000", 237 => "000010111", 238 => "111010101", 239 => "101101111", 
    240 => "111111111", 241 => "000010101", 242 => "111100000", 243 => "000000000", 
    244 => "000010011", 245 => "111011101", 246 => "110010011", 247 => "000110111", 
    248 => "000110010", 249 => "111010001", 250 => "000000110", 251 => "000100111", 
    252 => "000011001", 253 => "111011100", 254 => "000000100", 255 => "000011011", 
    256 => "111101100", 257 => "000011001", 258 => "000010010", 259 => "000010100", 
    260 => "111100100", 261 => "000011100", 262 => "000111001", 263 => "111111010", 
    264 => "111111010", 265 => "000000011", 266 => "000000111", 267 => "111110110", 
    268 => "001010010", 269 => "000010010", 270 => "111101111", 271 => "111101101", 
    272 => "000001110", 273 => "000010001", 274 => "000000011", 275 => "000111010", 
    276 => "111100110", 277 => "111010110", 278 => "111010101", 279 => "111101001", 
    280 => "111101100", 281 => "111110001", 282 => "111110011", 283 => "111101011", 
    284 => "111010000", 285 => "000001100", 286 => "111101010", 287 => "000001101", 
    288 => "111011100", 289 => "110101111", 290 => "110010110", 291 => "110001100", 
    292 => "111001101", 293 => "111001101", 294 => "000000001", 295 => "000000001", 
    296 => "111100110", 297 => "111011010", 298 => "111001001", 299 => "111010011", 
    300 => "111111000", 301 => "000010010", 302 => "000000100", 303 => "000000101", 
    304 => "111100111", 305 => "000001110", 306 => "111101100", 307 => "000000100", 
    308 => "111100011", 309 => "111111101", 310 => "111011111", 311 => "111101101", 
    312 => "000000111", 313 => "000000000", 314 => "000010010", 315 => "110101101", 
    316 => "111111000", 317 => "111011100", 318 => "111100111", 319 => "111110000", 
    320 => "000011111", 321 => "000001001", 322 => "111101111", 323 => "000001001", 
    324 => "111111010", 325 => "111110111", 326 => "111110001", 327 => "000000111", 
    328 => "000010101", 329 => "111100111", 330 => "000001011", 331 => "111111010", 
    332 => "111111100", 333 => "110100000", 334 => "000000010", 335 => "000100000", 
    336 => "111101111", 337 => "111110110", 338 => "111111101", 339 => "111010001", 
    340 => "110010011", 341 => "111101100", 342 => "000100101", 343 => "111100001", 
    344 => "111110111", 345 => "111100011", 346 => "111110000", 347 => "110110011", 
    348 => "000001010", 349 => "111111100", 350 => "111110010", 351 => "110110110", 
    352 => "111110000", 353 => "000010010", 354 => "111101101", 355 => "111111111", 
    356 => "111110101", 357 => "111101110", 358 => "110100010", 359 => "000010101", 
    360 => "000000011", 361 => "000000000", 362 => "111100100", 363 => "111101101", 
    364 => "000011010", 365 => "110101011", 366 => "000000101", 367 => "000011101", 
    368 => "000011100", 369 => "111111111", 370 => "000000000", 371 => "111100001", 
    372 => "110101101", 373 => "111100010", 374 => "000000010", 375 => "000000101", 
    376 => "111101110", 377 => "111011111", 378 => "000010010", 379 => "101100111", 
    380 => "110011010", 381 => "111000001", 382 => "111001001", 383 => "111101001", 
    384 => "111101111", 385 => "000010000", 386 => "111010100", 387 => "111010000", 
    388 => "110111011", 389 => "110001110", 390 => "110111110", 391 => "111010101");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

