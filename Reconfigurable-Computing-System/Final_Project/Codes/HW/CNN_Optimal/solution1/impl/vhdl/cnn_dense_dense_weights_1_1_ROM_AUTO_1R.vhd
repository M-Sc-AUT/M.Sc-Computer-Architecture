-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity cnn_dense_dense_weights_1_1_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 9; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 392
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of cnn_dense_dense_weights_1_1_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "111101111", 1 => "000010100", 2 => "000100101", 3 => "000011010", 
    4 => "000100001", 5 => "110110111", 6 => "111010010", 7 => "000001110", 
    8 => "111011110", 9 => "000111010", 10 => "001001101", 11 => "000111000", 
    12 => "000101111", 13 => "111001000", 14 => "000001001", 15 => "111010001", 
    16 => "111100100", 17 => "000001101", 18 => "001100110", 19 => "000110010", 
    20 => "111100001", 21 => "000010100", 22 => "111101010", 23 => "111001010", 
    24 => "000001011", 25 => "000110010", 26 => "111101000", 27 => "111101100", 
    28 => "111100101", 29 => "000011101", 30 => "111101110", 31 => "000000111", 
    32 => "111010010", 33 => "111001101", 34 => "111011111", 35 => "000000011", 
    36 => "000010000", 37 => "111111111", 38 => "000010011", 39 => "110110101", 
    40 => "111000110", 41 => "111000011", 42 => "000110101", 43 => "111111011", 
    44 => "000000000", 45 => "000101000", 46 => "000001110", 47 => "111011101", 
    48 => "000000110", 49 => "000000110", 50 => "111000110", 51 => "111110100", 
    52 => "000001001", 53 => "111111110", 54 => "111111111", 55 => "000101011", 
    56 => "111101011", 57 => "111001100", 58 => "111000100", 59 => "000000111", 
    60 => "110011010", 61 => "111111100", 62 => "000001110", 63 => "111111111", 
    64 => "111110100", 65 => "111100011", 66 => "000001010", 67 => "101110111", 
    68 => "000000011", 69 => "111101000", 70 => "000000001", 71 => "111111110", 
    72 => "111001110", 73 => "000101101", 74 => "000000111", 75 => "111111010", 
    76 => "000011001", 77 => "000110010", 78 => "111011111", 79 => "111000010", 
    80 => "000000110", 81 => "000111000", 82 => "000100001", 83 => "000001110", 
    84 => "110101101", 85 => "111010001", 86 => "111110000", 87 => "000011111", 
    88 => "000100001", 89 => "111100100", 90 => "000101010", 91 => "111101001", 
    92 => "000010101", 93 => "111111111", 94 => "000010000", 95 => "000101101", 
    96 => "111110100", 97 => "111100000", 98 => "000101111", 99 => "000101101", 
    100 => "111110100", 101 => "000001011", 102 => "000010100", 103 => "000110110", 
    104 => "000110000", 105 => "000100011", 106 => "000100110", 107 => "111101111", 
    108 => "111010011", 109 => "111111100", 110 => "000101001", 111 => "000110101", 
    112 => "000011010", 113 => "000010001", 114 => "111011110", 115 => "111010101", 
    116 => "111001001", 117 => "110100010", 118 => "000000101", 119 => "000001111", 
    120 => "111110000", 121 => "111011101", 122 => "111110010", 123 => "110001111", 
    124 => "111100010", 125 => "110111001", 126 => "111111110", 127 => "000000010", 
    128 => "111110011", 129 => "000010001", 130 => "110001010", 131 => "111101011", 
    132 => "110111011", 133 => "111011111", 134 => "111101110", 135 => "111110010", 
    136 => "111110001", 137 => "110011110", 138 => "111111000", 139 => "110111101", 
    140 => "000001001", 141 => "000010111", 142 => "111100100", 143 => "111100110", 
    144 => "111011100", 145 => "000000110", 146 => "111100011", 147 => "000001110", 
    148 => "000001110", 149 => "000011101", 150 => "000011010", 151 => "111111001", 
    152 => "111111101", 153 => "000000001", 154 => "000010010", 155 => "111111101", 
    156 => "000000111", 157 => "000001011", 158 => "111100111", 159 => "111110011", 
    160 => "000000101", 161 => "110110000", 162 => "000001010", 163 => "111110011", 
    164 => "000001000", 165 => "111101100", 166 => "000101110", 167 => "000010010", 
    168 => "111110111", 169 => "111110101", 170 => "111101100", 171 => "000011010", 
    172 => "000001101", 173 => "000110111", 174 => "000100111", 175 => "000100101", 
    176 => "111111001", 177 => "000010010", 178 => "000000011", 179 => "000001111", 
    180 => "000011111", 181 => "000001111", 182 => "000010010", 183 => "000010001", 
    184 => "000011110", 185 => "000000100", 186 => "000011000", 187 => "000000011", 
    188 => "000010111", 189 => "000010100", 190 => "000010100", 191 => "000011001", 
    192 => "000011000", 193 => "000001001", 194 => "111100110", 195 => "000100000", 
    196 => "000100100", 197 => "000001010", 198 => "000011110", 199 => "000001001", 
    200 => "111101110", 201 => "111001110", 202 => "111110100", 203 => "000100011", 
    204 => "000010010", 205 => "000010101", 206 => "111101100", 207 => "000001001", 
    208 => "111110010", 209 => "111010001", 210 => "000101011", 211 => "000011000", 
    212 => "111101011", 213 => "111111110", 214 => "111011111", 215 => "000010010", 
    216 => "111101110", 217 => "111110011", 218 => "001000000", 219 => "111111110", 
    220 => "000101110", 221 => "000010010", 222 => "111111110", 223 => "111100100", 
    224 => "111010110", 225 => "000000101", 226 => "111011011", 227 => "000110111", 
    228 => "000010011", 229 => "000011110", 230 => "111101001", 231 => "111100000", 
    232 => "000001010", 233 => "101010011", 234 => "000000001", 235 => "000010100", 
    236 => "111110010", 237 => "111001110", 238 => "111011100", 239 => "111111101", 
    240 => "110001011", 241 => "111111011", 242 => "000000110", 243 => "111110110", 
    244 => "111111001", 245 => "000001010", 246 => "111001011", 247 => "111011110", 
    248 => "000011100", 249 => "000001100", 250 => "111010000", 251 => "000001010", 
    252 => "111100111", 253 => "111000100", 254 => "001011111", 255 => "000010011", 
    256 => "000001111", 257 => "000001001", 258 => "000000000", 259 => "111110011", 
    260 => "111010001", 261 => "001010010", 262 => "000101100", 263 => "111101100", 
    264 => "000100011", 265 => "000000011", 266 => "111000100", 267 => "110111010", 
    268 => "000100101", 269 => "000111010", 270 => "111101001", 271 => "000011001", 
    272 => "000010011", 273 => "000011101", 274 => "000101001", 275 => "001100011", 
    276 => "111111100", 277 => "111101010", 278 => "000100110", 279 => "000000011", 
    280 => "000100010", 281 => "000111111", 282 => "000111010", 283 => "111110111", 
    284 => "000000000", 285 => "000000011", 286 => "000001011", 287 => "000000111", 
    288 => "000001101", 289 => "000001100", 290 => "000000100", 291 => "111111000", 
    292 => "000000010", 293 => "000000110", 294 => "000100001", 295 => "111010010", 
    296 => "111110010", 297 => "000000101", 298 => "111101010", 299 => "111011000", 
    300 => "111010001", 301 => "111010110", 302 => "111000010", 303 => "111101011", 
    304 => "000001001", 305 => "111111100", 306 => "111110100", 307 => "111101010", 
    308 => "000011001", 309 => "111001100", 310 => "111001000", 311 => "111100011", 
    312 => "000000111", 313 => "111111001", 314 => "111110010", 315 => "111011101", 
    316 => "111101100", 317 => "111011000", 318 => "111111111", 319 => "000010011", 
    320 => "000001100", 321 => "111100100", 322 => "111101011", 323 => "000000010", 
    324 => "110111010", 325 => "111110100", 326 => "000001011", 327 => "111110101", 
    328 => "000000000", 329 => "111011101", 330 => "000001100", 331 => "111001011", 
    332 => "111011001", 333 => "000011010", 334 => "111101111", 335 => "111100011", 
    336 => "000100101", 337 => "000110000", 338 => "111100110", 339 => "111111101", 
    340 => "111101110", 341 => "111010001", 342 => "111101111", 343 => "111011000", 
    344 => "000001011", 345 => "111010011", 346 => "111010011", 347 => "111110111", 
    348 => "111100101", 349 => "000000110", 350 => "111100011", 351 => "111101101", 
    352 => "110111001", 353 => "111101110", 354 => "111100001", 355 => "000010101", 
    356 => "111111011", 357 => "111110110", 358 => "000000100", 359 => "111010101", 
    360 => "000100101", 361 => "000000100", 362 => "000100011", 363 => "000001010", 
    364 => "000101101", 365 => "000001111", 366 => "111100010", 367 => "000010110", 
    368 => "000010011", 369 => "000001000", 370 => "111111100", 371 => "000000111", 
    372 => "111110011", 373 => "111010101", 374 => "111010101", 375 => "000000101", 
    376 => "111110100", 377 => "111010101", 378 => "111001000", 379 => "111101110", 
    380 => "111110101", 381 => "110110010", 382 => "111010101", 383 => "111101001", 
    384 => "111100111", 385 => "000000101", 386 => "000011100", 387 => "111111000", 
    388 => "111111001", 389 => "111100100", 390 => "111100100", 391 => "111110110");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

