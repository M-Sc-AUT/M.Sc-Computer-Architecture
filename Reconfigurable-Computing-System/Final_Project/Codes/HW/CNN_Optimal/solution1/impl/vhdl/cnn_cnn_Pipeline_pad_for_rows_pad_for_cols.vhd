-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_cnn_Pipeline_pad_for_rows_pad_for_cols is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_in_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_in_0_ce0 : OUT STD_LOGIC;
    img_in_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_in_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_in_1_ce0 : OUT STD_LOGIC;
    img_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_in_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_in_2_ce0 : OUT STD_LOGIC;
    img_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_in_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_in_3_ce0 : OUT STD_LOGIC;
    img_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_27_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_27_ce0 : OUT STD_LOGIC;
    pad_img0_27_we0 : OUT STD_LOGIC;
    pad_img0_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_26_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_26_ce0 : OUT STD_LOGIC;
    pad_img0_26_we0 : OUT STD_LOGIC;
    pad_img0_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_25_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_25_ce0 : OUT STD_LOGIC;
    pad_img0_25_we0 : OUT STD_LOGIC;
    pad_img0_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_24_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_24_ce0 : OUT STD_LOGIC;
    pad_img0_24_we0 : OUT STD_LOGIC;
    pad_img0_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_23_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_23_ce0 : OUT STD_LOGIC;
    pad_img0_23_we0 : OUT STD_LOGIC;
    pad_img0_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_22_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_22_ce0 : OUT STD_LOGIC;
    pad_img0_22_we0 : OUT STD_LOGIC;
    pad_img0_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_21_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_21_ce0 : OUT STD_LOGIC;
    pad_img0_21_we0 : OUT STD_LOGIC;
    pad_img0_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_20_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_20_ce0 : OUT STD_LOGIC;
    pad_img0_20_we0 : OUT STD_LOGIC;
    pad_img0_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_19_ce0 : OUT STD_LOGIC;
    pad_img0_19_we0 : OUT STD_LOGIC;
    pad_img0_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_18_ce0 : OUT STD_LOGIC;
    pad_img0_18_we0 : OUT STD_LOGIC;
    pad_img0_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_17_ce0 : OUT STD_LOGIC;
    pad_img0_17_we0 : OUT STD_LOGIC;
    pad_img0_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_16_ce0 : OUT STD_LOGIC;
    pad_img0_16_we0 : OUT STD_LOGIC;
    pad_img0_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_15_ce0 : OUT STD_LOGIC;
    pad_img0_15_we0 : OUT STD_LOGIC;
    pad_img0_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_14_ce0 : OUT STD_LOGIC;
    pad_img0_14_we0 : OUT STD_LOGIC;
    pad_img0_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_13_ce0 : OUT STD_LOGIC;
    pad_img0_13_we0 : OUT STD_LOGIC;
    pad_img0_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_12_ce0 : OUT STD_LOGIC;
    pad_img0_12_we0 : OUT STD_LOGIC;
    pad_img0_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_11_ce0 : OUT STD_LOGIC;
    pad_img0_11_we0 : OUT STD_LOGIC;
    pad_img0_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_10_ce0 : OUT STD_LOGIC;
    pad_img0_10_we0 : OUT STD_LOGIC;
    pad_img0_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_9_ce0 : OUT STD_LOGIC;
    pad_img0_9_we0 : OUT STD_LOGIC;
    pad_img0_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_8_ce0 : OUT STD_LOGIC;
    pad_img0_8_we0 : OUT STD_LOGIC;
    pad_img0_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_7_ce0 : OUT STD_LOGIC;
    pad_img0_7_we0 : OUT STD_LOGIC;
    pad_img0_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_6_ce0 : OUT STD_LOGIC;
    pad_img0_6_we0 : OUT STD_LOGIC;
    pad_img0_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_5_ce0 : OUT STD_LOGIC;
    pad_img0_5_we0 : OUT STD_LOGIC;
    pad_img0_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_4_ce0 : OUT STD_LOGIC;
    pad_img0_4_we0 : OUT STD_LOGIC;
    pad_img0_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_3_ce0 : OUT STD_LOGIC;
    pad_img0_3_we0 : OUT STD_LOGIC;
    pad_img0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_2_ce0 : OUT STD_LOGIC;
    pad_img0_2_we0 : OUT STD_LOGIC;
    pad_img0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_1_ce0 : OUT STD_LOGIC;
    pad_img0_1_we0 : OUT STD_LOGIC;
    pad_img0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_ce0 : OUT STD_LOGIC;
    pad_img0_we0 : OUT STD_LOGIC;
    pad_img0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn_cnn_Pipeline_pad_for_rows_pad_for_cols is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_437F0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011111110000000000000000";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv11_25 : STD_LOGIC_VECTOR (10 downto 0) := "00000100101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv11_39 : STD_LOGIC_VECTOR (10 downto 0) := "00000111001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln13_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln13_fu_633_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_reg_931_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_1_fu_641_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln_reg_943 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln_reg_943_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_fu_675_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_948 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln2_reg_954 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter17_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter18_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter19_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter20_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter21_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter22_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter23_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter24_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln2_reg_954_pp0_iter25_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln19_1_fu_763_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln19_1_reg_958 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_550_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_fu_794_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln19_1_reg_968_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln19_2_fu_830_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter15_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter16_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter17_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter18_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter20_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter21_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter22_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter23_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter24_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter25_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_2_reg_992_pp0_iter26_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_852_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv7_i_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln19_3_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln19_6_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_fu_152 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln15_1_fu_687_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c_load : STD_LOGIC_VECTOR (4 downto 0);
    signal r_fu_156 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ap_sig_allocacmp_r_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_160 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln13_1_fu_609_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_predicate_pred1017_state28 : BOOLEAN;
    signal ap_predicate_pred1023_state28 : BOOLEAN;
    signal ap_predicate_pred1029_state28 : BOOLEAN;
    signal ap_predicate_pred1035_state28 : BOOLEAN;
    signal ap_predicate_pred1041_state28 : BOOLEAN;
    signal ap_predicate_pred1047_state28 : BOOLEAN;
    signal ap_predicate_pred1057_state28 : BOOLEAN;
    signal ap_predicate_pred1062_state28 : BOOLEAN;
    signal ap_predicate_pred1066_state28 : BOOLEAN;
    signal ap_predicate_pred1070_state28 : BOOLEAN;
    signal ap_predicate_pred1074_state28 : BOOLEAN;
    signal ap_predicate_pred1078_state28 : BOOLEAN;
    signal ap_predicate_pred1082_state28 : BOOLEAN;
    signal ap_predicate_pred1088_state28 : BOOLEAN;
    signal ap_predicate_pred1093_state28 : BOOLEAN;
    signal ap_predicate_pred1097_state28 : BOOLEAN;
    signal ap_predicate_pred1101_state28 : BOOLEAN;
    signal ap_predicate_pred1105_state28 : BOOLEAN;
    signal ap_predicate_pred1109_state28 : BOOLEAN;
    signal ap_predicate_pred1113_state28 : BOOLEAN;
    signal ap_predicate_pred1119_state28 : BOOLEAN;
    signal ap_predicate_pred1124_state28 : BOOLEAN;
    signal ap_predicate_pred1128_state28 : BOOLEAN;
    signal ap_predicate_pred1132_state28 : BOOLEAN;
    signal ap_predicate_pred1136_state28 : BOOLEAN;
    signal ap_predicate_pred1140_state28 : BOOLEAN;
    signal ap_predicate_pred1144_state28 : BOOLEAN;
    signal ap_predicate_pred1150_state28 : BOOLEAN;
    signal icmp_ln15_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln13_fu_621_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_649_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln13_fu_659_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln13_fu_659_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln13_fu_659_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_681_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln15_fu_716_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln15_fu_716_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln15_fu_716_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_649_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln19_fu_732_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln19_fu_744_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln19_fu_750_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln19_fu_754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln19_2_fu_760_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln15_fu_769_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln19_fu_778_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln19_fu_778_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln19_fu_778_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_681_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_708_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln15_fu_798_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_544_fu_806_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln19_1_fu_802_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln19_fu_814_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln19_5_fu_827_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_852_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_852_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_852_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_852_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln13_fu_659_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln15_fu_716_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln19_fu_778_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_852_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_852_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_852_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_852_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component cnn_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_urem_5ns_4ns_5_9_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component cnn_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component cnn_urem_5ns_4ns_3_9_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component cnn_urem_5ns_5ns_5_9_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component cnn_sparsemux_9_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fdiv_32ns_32ns_32_16_no_dsp_1_U35 : component cnn_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_997,
        din1 => ap_const_lv32_437F0000,
        ce => ap_const_logic_1,
        dout => grp_fu_580_p2);

    urem_5ns_4ns_5_9_1_U36 : component cnn_urem_5ns_4ns_5_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln13_1_fu_641_p3,
        din1 => grp_fu_649_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_649_p2);

    mul_5ns_7ns_11_1_1_U37 : component cnn_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln13_fu_659_p0,
        din1 => mul_ln13_fu_659_p1,
        dout => mul_ln13_fu_659_p2);

    urem_5ns_4ns_3_9_1_U38 : component cnn_urem_5ns_4ns_3_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln13_fu_633_p3,
        din1 => grp_fu_681_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_681_p2);

    urem_5ns_5ns_5_9_1_U39 : component cnn_urem_5ns_5ns_5_9_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => empty_reg_948,
        din1 => ap_const_lv5_9,
        ce => ap_const_logic_1,
        dout => grp_fu_708_p2);

    mul_5ns_7ns_11_1_1_U40 : component cnn_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln15_fu_716_p0,
        din1 => mul_ln15_fu_716_p1,
        dout => mul_ln15_fu_716_p2);

    mul_5ns_7ns_11_1_1_U41 : component cnn_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln19_fu_778_p0,
        din1 => mul_ln19_fu_778_p1,
        dout => mul_ln19_fu_778_p2);

    sparsemux_9_2_32_1_1_U42 : component cnn_sparsemux_9_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 32,
        CASE1 => "01",
        din1_WIDTH => 32,
        CASE2 => "10",
        din2_WIDTH => 32,
        CASE3 => "11",
        din3_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_fu_852_p2,
        din1 => tmp_fu_852_p4,
        din2 => tmp_fu_852_p6,
        din3 => tmp_fu_852_p8,
        def => tmp_fu_852_p9,
        sel => trunc_ln_reg_943_pp0_iter9_reg,
        dout => tmp_fu_852_p11);

    flow_control_loop_pipe_sequential_init_U : component cnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter26_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    c_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_fu_603_p2 = ap_const_lv1_0))) then 
                    c_fu_152 <= add_ln15_1_fu_687_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_152 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_fu_603_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_160 <= add_ln13_1_fu_609_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_160 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    r_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_fu_603_p2 = ap_const_lv1_0))) then 
                    r_fu_156 <= select_ln13_1_fu_641_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    r_fu_156 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln19_1_reg_958 <= add_ln19_1_fu_763_p2;
                add_ln19_2_reg_992 <= add_ln19_2_fu_830_p2;
                add_ln19_2_reg_992_pp0_iter10_reg <= add_ln19_2_reg_992;
                add_ln19_2_reg_992_pp0_iter11_reg <= add_ln19_2_reg_992_pp0_iter10_reg;
                add_ln19_2_reg_992_pp0_iter12_reg <= add_ln19_2_reg_992_pp0_iter11_reg;
                add_ln19_2_reg_992_pp0_iter13_reg <= add_ln19_2_reg_992_pp0_iter12_reg;
                add_ln19_2_reg_992_pp0_iter14_reg <= add_ln19_2_reg_992_pp0_iter13_reg;
                add_ln19_2_reg_992_pp0_iter15_reg <= add_ln19_2_reg_992_pp0_iter14_reg;
                add_ln19_2_reg_992_pp0_iter16_reg <= add_ln19_2_reg_992_pp0_iter15_reg;
                add_ln19_2_reg_992_pp0_iter17_reg <= add_ln19_2_reg_992_pp0_iter16_reg;
                add_ln19_2_reg_992_pp0_iter18_reg <= add_ln19_2_reg_992_pp0_iter17_reg;
                add_ln19_2_reg_992_pp0_iter19_reg <= add_ln19_2_reg_992_pp0_iter18_reg;
                add_ln19_2_reg_992_pp0_iter20_reg <= add_ln19_2_reg_992_pp0_iter19_reg;
                add_ln19_2_reg_992_pp0_iter21_reg <= add_ln19_2_reg_992_pp0_iter20_reg;
                add_ln19_2_reg_992_pp0_iter22_reg <= add_ln19_2_reg_992_pp0_iter21_reg;
                add_ln19_2_reg_992_pp0_iter23_reg <= add_ln19_2_reg_992_pp0_iter22_reg;
                add_ln19_2_reg_992_pp0_iter24_reg <= add_ln19_2_reg_992_pp0_iter23_reg;
                add_ln19_2_reg_992_pp0_iter25_reg <= add_ln19_2_reg_992_pp0_iter24_reg;
                add_ln19_2_reg_992_pp0_iter26_reg <= add_ln19_2_reg_992_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                    ap_predicate_pred1017_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_2) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1023_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_1) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1029_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_0) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1035_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_3) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1041_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_5) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1047_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_4) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2));
                    ap_predicate_pred1057_state28 <= (((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_6) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2)) or ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_7) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_2)));
                    ap_predicate_pred1062_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_2) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1066_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_1) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1070_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_0) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1074_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_3) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1078_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_5) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1082_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_4) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1));
                    ap_predicate_pred1088_state28 <= (((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_6) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1)) or ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_7) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_1)));
                    ap_predicate_pred1093_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_2) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1097_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_1) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1101_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_0) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1105_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_3) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1109_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_5) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1113_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_4) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0));
                    ap_predicate_pred1119_state28 <= (((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_6) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0)) or ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_7) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_0)));
                    ap_predicate_pred1124_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_2) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1128_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_1) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1132_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_0) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1136_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_3) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1140_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_5) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1144_state28 <= ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_4) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3));
                    ap_predicate_pred1150_state28 <= (((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_6) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3)) or ((trunc_ln19_1_reg_968_pp0_iter25_reg = ap_const_lv3_7) and (trunc_ln2_reg_954_pp0_iter25_reg = ap_const_lv2_3)));
                conv7_i_reg_1002 <= grp_fu_580_p2;
                select_ln13_reg_931_pp0_iter2_reg <= select_ln13_reg_931_pp0_iter1_reg;
                select_ln13_reg_931_pp0_iter3_reg <= select_ln13_reg_931_pp0_iter2_reg;
                select_ln13_reg_931_pp0_iter4_reg <= select_ln13_reg_931_pp0_iter3_reg;
                select_ln13_reg_931_pp0_iter5_reg <= select_ln13_reg_931_pp0_iter4_reg;
                select_ln13_reg_931_pp0_iter6_reg <= select_ln13_reg_931_pp0_iter5_reg;
                select_ln13_reg_931_pp0_iter7_reg <= select_ln13_reg_931_pp0_iter6_reg;
                tmp_550_reg_963 <= mul_ln19_fu_778_p2(10 downto 8);
                tmp_reg_997 <= tmp_fu_852_p11;
                trunc_ln19_1_reg_968 <= trunc_ln19_1_fu_794_p1;
                trunc_ln19_1_reg_968_pp0_iter10_reg <= trunc_ln19_1_reg_968_pp0_iter9_reg;
                trunc_ln19_1_reg_968_pp0_iter11_reg <= trunc_ln19_1_reg_968_pp0_iter10_reg;
                trunc_ln19_1_reg_968_pp0_iter12_reg <= trunc_ln19_1_reg_968_pp0_iter11_reg;
                trunc_ln19_1_reg_968_pp0_iter13_reg <= trunc_ln19_1_reg_968_pp0_iter12_reg;
                trunc_ln19_1_reg_968_pp0_iter14_reg <= trunc_ln19_1_reg_968_pp0_iter13_reg;
                trunc_ln19_1_reg_968_pp0_iter15_reg <= trunc_ln19_1_reg_968_pp0_iter14_reg;
                trunc_ln19_1_reg_968_pp0_iter16_reg <= trunc_ln19_1_reg_968_pp0_iter15_reg;
                trunc_ln19_1_reg_968_pp0_iter17_reg <= trunc_ln19_1_reg_968_pp0_iter16_reg;
                trunc_ln19_1_reg_968_pp0_iter18_reg <= trunc_ln19_1_reg_968_pp0_iter17_reg;
                trunc_ln19_1_reg_968_pp0_iter19_reg <= trunc_ln19_1_reg_968_pp0_iter18_reg;
                trunc_ln19_1_reg_968_pp0_iter20_reg <= trunc_ln19_1_reg_968_pp0_iter19_reg;
                trunc_ln19_1_reg_968_pp0_iter21_reg <= trunc_ln19_1_reg_968_pp0_iter20_reg;
                trunc_ln19_1_reg_968_pp0_iter22_reg <= trunc_ln19_1_reg_968_pp0_iter21_reg;
                trunc_ln19_1_reg_968_pp0_iter23_reg <= trunc_ln19_1_reg_968_pp0_iter22_reg;
                trunc_ln19_1_reg_968_pp0_iter24_reg <= trunc_ln19_1_reg_968_pp0_iter23_reg;
                trunc_ln19_1_reg_968_pp0_iter25_reg <= trunc_ln19_1_reg_968_pp0_iter24_reg;
                trunc_ln19_1_reg_968_pp0_iter9_reg <= trunc_ln19_1_reg_968;
                trunc_ln2_reg_954_pp0_iter10_reg <= trunc_ln2_reg_954_pp0_iter9_reg;
                trunc_ln2_reg_954_pp0_iter11_reg <= trunc_ln2_reg_954_pp0_iter10_reg;
                trunc_ln2_reg_954_pp0_iter12_reg <= trunc_ln2_reg_954_pp0_iter11_reg;
                trunc_ln2_reg_954_pp0_iter13_reg <= trunc_ln2_reg_954_pp0_iter12_reg;
                trunc_ln2_reg_954_pp0_iter14_reg <= trunc_ln2_reg_954_pp0_iter13_reg;
                trunc_ln2_reg_954_pp0_iter15_reg <= trunc_ln2_reg_954_pp0_iter14_reg;
                trunc_ln2_reg_954_pp0_iter16_reg <= trunc_ln2_reg_954_pp0_iter15_reg;
                trunc_ln2_reg_954_pp0_iter17_reg <= trunc_ln2_reg_954_pp0_iter16_reg;
                trunc_ln2_reg_954_pp0_iter18_reg <= trunc_ln2_reg_954_pp0_iter17_reg;
                trunc_ln2_reg_954_pp0_iter19_reg <= trunc_ln2_reg_954_pp0_iter18_reg;
                trunc_ln2_reg_954_pp0_iter20_reg <= trunc_ln2_reg_954_pp0_iter19_reg;
                trunc_ln2_reg_954_pp0_iter21_reg <= trunc_ln2_reg_954_pp0_iter20_reg;
                trunc_ln2_reg_954_pp0_iter22_reg <= trunc_ln2_reg_954_pp0_iter21_reg;
                trunc_ln2_reg_954_pp0_iter23_reg <= trunc_ln2_reg_954_pp0_iter22_reg;
                trunc_ln2_reg_954_pp0_iter24_reg <= trunc_ln2_reg_954_pp0_iter23_reg;
                trunc_ln2_reg_954_pp0_iter25_reg <= trunc_ln2_reg_954_pp0_iter24_reg;
                trunc_ln2_reg_954_pp0_iter2_reg <= trunc_ln2_reg_954;
                trunc_ln2_reg_954_pp0_iter3_reg <= trunc_ln2_reg_954_pp0_iter2_reg;
                trunc_ln2_reg_954_pp0_iter4_reg <= trunc_ln2_reg_954_pp0_iter3_reg;
                trunc_ln2_reg_954_pp0_iter5_reg <= trunc_ln2_reg_954_pp0_iter4_reg;
                trunc_ln2_reg_954_pp0_iter6_reg <= trunc_ln2_reg_954_pp0_iter5_reg;
                trunc_ln2_reg_954_pp0_iter7_reg <= trunc_ln2_reg_954_pp0_iter6_reg;
                trunc_ln2_reg_954_pp0_iter8_reg <= trunc_ln2_reg_954_pp0_iter7_reg;
                trunc_ln2_reg_954_pp0_iter9_reg <= trunc_ln2_reg_954_pp0_iter8_reg;
                trunc_ln_reg_943_pp0_iter2_reg <= trunc_ln_reg_943_pp0_iter1_reg;
                trunc_ln_reg_943_pp0_iter3_reg <= trunc_ln_reg_943_pp0_iter2_reg;
                trunc_ln_reg_943_pp0_iter4_reg <= trunc_ln_reg_943_pp0_iter3_reg;
                trunc_ln_reg_943_pp0_iter5_reg <= trunc_ln_reg_943_pp0_iter4_reg;
                trunc_ln_reg_943_pp0_iter6_reg <= trunc_ln_reg_943_pp0_iter5_reg;
                trunc_ln_reg_943_pp0_iter7_reg <= trunc_ln_reg_943_pp0_iter6_reg;
                trunc_ln_reg_943_pp0_iter8_reg <= trunc_ln_reg_943_pp0_iter7_reg;
                trunc_ln_reg_943_pp0_iter9_reg <= trunc_ln_reg_943_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                empty_reg_948 <= empty_fu_675_p2;
                select_ln13_reg_931 <= select_ln13_fu_633_p3;
                select_ln13_reg_931_pp0_iter1_reg <= select_ln13_reg_931;
                trunc_ln2_reg_954 <= mul_ln15_fu_716_p2(10 downto 9);
                trunc_ln_reg_943 <= mul_ln13_fu_659_p2(9 downto 8);
                trunc_ln_reg_943_pp0_iter1_reg <= trunc_ln_reg_943;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln13_1_fu_609_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv10_1));
    add_ln13_fu_621_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_load) + unsigned(ap_const_lv5_1));
    add_ln15_1_fu_687_p2 <= std_logic_vector(unsigned(select_ln13_fu_633_p3) + unsigned(ap_const_lv5_1));
    add_ln15_fu_769_p2 <= std_logic_vector(unsigned(select_ln13_reg_931_pp0_iter7_reg) + unsigned(ap_const_lv5_3));
    add_ln19_1_fu_763_p2 <= std_logic_vector(unsigned(sub_ln19_fu_754_p2) + unsigned(zext_ln19_2_fu_760_p1));
    add_ln19_2_fu_830_p2 <= std_logic_vector(unsigned(add_ln19_fu_814_p2) + unsigned(zext_ln19_5_fu_827_p1));
    add_ln19_fu_814_p2 <= std_logic_vector(unsigned(tmp_544_fu_806_p3) + unsigned(zext_ln19_1_fu_802_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln13_fu_603_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_fu_603_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter26_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter26_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c_fu_152, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_c_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_c_load <= c_fu_152;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_160)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_160;
        end if; 
    end process;


    ap_sig_allocacmp_r_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, r_fu_156)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_r_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_r_load <= r_fu_156;
        end if; 
    end process;

    empty_fu_675_p2 <= std_logic_vector(unsigned(select_ln13_1_fu_641_p3) + unsigned(ap_const_lv5_3));
    grp_fu_649_p1 <= ap_const_lv5_7(4 - 1 downto 0);
    grp_fu_681_p1 <= ap_const_lv5_7(4 - 1 downto 0);
    icmp_ln13_fu_603_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv10_310) else "0";
    icmp_ln15_fu_627_p2 <= "1" when (ap_sig_allocacmp_c_load = ap_const_lv5_1C) else "0";
    img_in_0_address0 <= zext_ln19_3_fu_820_p1(8 - 1 downto 0);

    img_in_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_in_0_ce0 <= ap_const_logic_1;
        else 
            img_in_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    img_in_1_address0 <= zext_ln19_3_fu_820_p1(8 - 1 downto 0);

    img_in_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_in_1_ce0 <= ap_const_logic_1;
        else 
            img_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    img_in_2_address0 <= zext_ln19_3_fu_820_p1(8 - 1 downto 0);

    img_in_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_in_2_ce0 <= ap_const_logic_1;
        else 
            img_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    img_in_3_address0 <= zext_ln19_3_fu_820_p1(8 - 1 downto 0);

    img_in_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_in_3_ce0 <= ap_const_logic_1;
        else 
            img_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln13_fu_659_p0 <= mul_ln13_fu_659_p00(5 - 1 downto 0);
    mul_ln13_fu_659_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln13_1_fu_641_p3),11));
    mul_ln13_fu_659_p1 <= ap_const_lv11_25(7 - 1 downto 0);
    mul_ln15_fu_716_p0 <= mul_ln15_fu_716_p00(5 - 1 downto 0);
    mul_ln15_fu_716_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_948),11));
    mul_ln15_fu_716_p1 <= ap_const_lv11_39(7 - 1 downto 0);
    mul_ln19_fu_778_p0 <= mul_ln19_fu_778_p00(5 - 1 downto 0);
    mul_ln19_fu_778_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_fu_769_p2),11));
    mul_ln19_fu_778_p1 <= ap_const_lv11_25(7 - 1 downto 0);
    pad_img0_10_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_10_ce0 <= ap_const_logic_1;
        else 
            pad_img0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_10_d0 <= conv7_i_reg_1002;

    pad_img0_10_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1070_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1070_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_10_we0 <= ap_const_logic_1;
        else 
            pad_img0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_11_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_11_ce0 <= ap_const_logic_1;
        else 
            pad_img0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_11_d0 <= conv7_i_reg_1002;

    pad_img0_11_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1066_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1066_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_11_we0 <= ap_const_logic_1;
        else 
            pad_img0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_12_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_12_ce0 <= ap_const_logic_1;
        else 
            pad_img0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_12_d0 <= conv7_i_reg_1002;

    pad_img0_12_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1062_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1062_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_12_we0 <= ap_const_logic_1;
        else 
            pad_img0_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_13_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_13_ce0 <= ap_const_logic_1;
        else 
            pad_img0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_13_d0 <= conv7_i_reg_1002;

    pad_img0_13_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1074_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1074_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_13_we0 <= ap_const_logic_1;
        else 
            pad_img0_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_14_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_14_ce0 <= ap_const_logic_1;
        else 
            pad_img0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_14_d0 <= conv7_i_reg_1002;

    pad_img0_14_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1047_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1047_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_14_we0 <= ap_const_logic_1;
        else 
            pad_img0_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_15_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_15_ce0 <= ap_const_logic_1;
        else 
            pad_img0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_15_d0 <= conv7_i_reg_1002;

    pad_img0_15_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1041_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1041_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_15_we0 <= ap_const_logic_1;
        else 
            pad_img0_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_16_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_16_ce0 <= ap_const_logic_1;
        else 
            pad_img0_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_16_d0 <= conv7_i_reg_1002;

    pad_img0_16_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1057_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1057_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_16_we0 <= ap_const_logic_1;
        else 
            pad_img0_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_17_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_17_ce0 <= ap_const_logic_1;
        else 
            pad_img0_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_17_d0 <= conv7_i_reg_1002;

    pad_img0_17_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1029_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1029_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_17_we0 <= ap_const_logic_1;
        else 
            pad_img0_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_18_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_18_ce0 <= ap_const_logic_1;
        else 
            pad_img0_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_18_d0 <= conv7_i_reg_1002;

    pad_img0_18_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1023_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1023_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_18_we0 <= ap_const_logic_1;
        else 
            pad_img0_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_19_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_19_ce0 <= ap_const_logic_1;
        else 
            pad_img0_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_19_d0 <= conv7_i_reg_1002;

    pad_img0_19_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1017_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1017_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_19_we0 <= ap_const_logic_1;
        else 
            pad_img0_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_1_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_1_ce0 <= ap_const_logic_1;
        else 
            pad_img0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_1_d0 <= conv7_i_reg_1002;

    pad_img0_1_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1109_state28)
    begin
        if (((ap_predicate_pred1109_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_1_we0 <= ap_const_logic_1;
        else 
            pad_img0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_20_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_20_ce0 <= ap_const_logic_1;
        else 
            pad_img0_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_20_d0 <= conv7_i_reg_1002;

    pad_img0_20_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1035_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1035_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_20_we0 <= ap_const_logic_1;
        else 
            pad_img0_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_21_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_21_ce0 <= ap_const_logic_1;
        else 
            pad_img0_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_21_d0 <= conv7_i_reg_1002;

    pad_img0_21_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1144_state28)
    begin
        if (((ap_predicate_pred1144_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_21_we0 <= ap_const_logic_1;
        else 
            pad_img0_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_22_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_22_ce0 <= ap_const_logic_1;
        else 
            pad_img0_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_22_d0 <= conv7_i_reg_1002;

    pad_img0_22_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1140_state28)
    begin
        if (((ap_predicate_pred1140_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_22_we0 <= ap_const_logic_1;
        else 
            pad_img0_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_23_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_23_ce0 <= ap_const_logic_1;
        else 
            pad_img0_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_23_d0 <= conv7_i_reg_1002;

    pad_img0_23_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1150_state28)
    begin
        if (((ap_predicate_pred1150_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_23_we0 <= ap_const_logic_1;
        else 
            pad_img0_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_24_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_24_ce0 <= ap_const_logic_1;
        else 
            pad_img0_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_24_d0 <= conv7_i_reg_1002;

    pad_img0_24_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1132_state28)
    begin
        if (((ap_predicate_pred1132_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_24_we0 <= ap_const_logic_1;
        else 
            pad_img0_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_25_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_25_ce0 <= ap_const_logic_1;
        else 
            pad_img0_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_25_d0 <= conv7_i_reg_1002;

    pad_img0_25_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1128_state28)
    begin
        if (((ap_predicate_pred1128_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_25_we0 <= ap_const_logic_1;
        else 
            pad_img0_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_26_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_26_ce0 <= ap_const_logic_1;
        else 
            pad_img0_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_26_d0 <= conv7_i_reg_1002;

    pad_img0_26_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1124_state28)
    begin
        if (((ap_predicate_pred1124_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_26_we0 <= ap_const_logic_1;
        else 
            pad_img0_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_27_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_27_ce0 <= ap_const_logic_1;
        else 
            pad_img0_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_27_d0 <= conv7_i_reg_1002;

    pad_img0_27_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1136_state28)
    begin
        if (((ap_predicate_pred1136_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_27_we0 <= ap_const_logic_1;
        else 
            pad_img0_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_2_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_2_ce0 <= ap_const_logic_1;
        else 
            pad_img0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_2_d0 <= conv7_i_reg_1002;

    pad_img0_2_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1119_state28)
    begin
        if (((ap_predicate_pred1119_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_2_we0 <= ap_const_logic_1;
        else 
            pad_img0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_3_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_3_ce0 <= ap_const_logic_1;
        else 
            pad_img0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_3_d0 <= conv7_i_reg_1002;

    pad_img0_3_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1101_state28)
    begin
        if (((ap_predicate_pred1101_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_3_we0 <= ap_const_logic_1;
        else 
            pad_img0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_4_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_4_ce0 <= ap_const_logic_1;
        else 
            pad_img0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_4_d0 <= conv7_i_reg_1002;

    pad_img0_4_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1097_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1097_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_4_we0 <= ap_const_logic_1;
        else 
            pad_img0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_5_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_5_ce0 <= ap_const_logic_1;
        else 
            pad_img0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_5_d0 <= conv7_i_reg_1002;

    pad_img0_5_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1093_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1093_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_5_we0 <= ap_const_logic_1;
        else 
            pad_img0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_6_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_6_ce0 <= ap_const_logic_1;
        else 
            pad_img0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_6_d0 <= conv7_i_reg_1002;

    pad_img0_6_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1105_state28)
    begin
        if (((ap_predicate_pred1105_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_6_we0 <= ap_const_logic_1;
        else 
            pad_img0_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_7_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_7_ce0 <= ap_const_logic_1;
        else 
            pad_img0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_7_d0 <= conv7_i_reg_1002;

    pad_img0_7_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1082_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1082_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_7_we0 <= ap_const_logic_1;
        else 
            pad_img0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_8_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_8_ce0 <= ap_const_logic_1;
        else 
            pad_img0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_8_d0 <= conv7_i_reg_1002;

    pad_img0_8_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1078_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1078_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_8_we0 <= ap_const_logic_1;
        else 
            pad_img0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_9_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_9_ce0 <= ap_const_logic_1;
        else 
            pad_img0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_9_d0 <= conv7_i_reg_1002;

    pad_img0_9_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1088_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred1088_state28 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_9_we0 <= ap_const_logic_1;
        else 
            pad_img0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_address0 <= zext_ln19_6_fu_875_p1(6 - 1 downto 0);

    pad_img0_ce0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_ce0 <= ap_const_logic_1;
        else 
            pad_img0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_d0 <= conv7_i_reg_1002;

    pad_img0_we0_assign_proc : process(ap_enable_reg_pp0_iter27, ap_block_pp0_stage0_11001, ap_predicate_pred1113_state28)
    begin
        if (((ap_predicate_pred1113_state28 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then 
            pad_img0_we0 <= ap_const_logic_1;
        else 
            pad_img0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln13_1_fu_641_p3 <= 
        add_ln13_fu_621_p2 when (icmp_ln15_fu_627_p2(0) = '1') else 
        ap_sig_allocacmp_r_load;
    select_ln13_fu_633_p3 <= 
        ap_const_lv5_0 when (icmp_ln15_fu_627_p2(0) = '1') else 
        ap_sig_allocacmp_c_load;
    shl_ln19_fu_744_p2 <= std_logic_vector(shift_left(unsigned(grp_fu_649_p2),to_integer(unsigned('0' & ap_const_lv5_2(5-1 downto 0)))));
    sub_ln19_fu_754_p2 <= std_logic_vector(unsigned(tmp_s_fu_736_p3) - unsigned(zext_ln19_fu_750_p1));
    tmp_544_fu_806_p3 <= (trunc_ln15_fu_798_p1 & ap_const_lv2_0);
    tmp_fu_852_p2 <= img_in_0_q0;
    tmp_fu_852_p4 <= img_in_1_q0;
    tmp_fu_852_p6 <= img_in_2_q0;
    tmp_fu_852_p8 <= img_in_3_q0;
    tmp_fu_852_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_736_p3 <= (trunc_ln19_fu_732_p1 & ap_const_lv5_0);
    trunc_ln15_fu_798_p1 <= grp_fu_708_p2(4 - 1 downto 0);
    trunc_ln19_1_fu_794_p1 <= grp_fu_681_p2(3 - 1 downto 0);
    trunc_ln19_fu_732_p1 <= grp_fu_649_p2(3 - 1 downto 0);
    zext_ln19_1_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_708_p2),6));
    zext_ln19_2_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln13_reg_931_pp0_iter7_reg),8));
    zext_ln19_3_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_1_reg_958),64));
    zext_ln19_5_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_550_reg_963),6));
    zext_ln19_6_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_2_reg_992_pp0_iter26_reg),64));
    zext_ln19_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln19_fu_744_p2),8));
end behav;
