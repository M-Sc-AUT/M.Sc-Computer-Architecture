-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity cnn_dense_dense_weights_1_6_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 8; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 392
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of cnn_dense_dense_weights_1_6_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "00011000", 1 => "01000110", 2 => "01110001", 3 => "00111110", 
    4 => "00100000", 5 => "00101110", 6 => "00011001", 7 => "00011100", 
    8 => "01001001", 9 => "00110011", 10 => "00101101", 11 => "00101011", 
    12 => "00001010", 13 => "00010101", 14 => "00010101", 15 => "01001000", 
    16 => "00001111", 17 => "00011111", 18 => "00001100", 19 => "11011000", 
    20 => "11000100", 21 => "00111101", 22 => "00010100", 23 => "00010100", 
    24 => "00011100", 25 => "11100000", 26 => "11010100", 27 => "11000000", 
    28 => "00010111", 29 => "00010100", 30 => "11101011", 31 => "11111110", 
    32 => "11001010", 33 => "11010001", 34 => "00101111", 35 => "11100100", 
    36 => "00000111", 37 => "00001001", 38 => "11110001", 39 => "10110001", 
    40 => "11110001", 41 => "11110111", 42 => "11001000", 43 => "00011110", 
    44 => "00001111", 45 => "11010111", 46 => "11011001", 47 => "00010001", 
    48 => "10000111", 49 => "10111010", 50 => "11101011", 51 => "00000111", 
    52 => "00000000", 53 => "11111000", 54 => "00011111", 55 => "10010111", 
    56 => "10100011", 57 => "11111101", 58 => "00000110", 59 => "11101111", 
    60 => "00000101", 61 => "00000101", 62 => "11000001", 63 => "10110110", 
    64 => "11111011", 65 => "00011100", 66 => "11110110", 67 => "11111011", 
    68 => "10111101", 69 => "11000110", 70 => "11011011", 71 => "00010001", 
    72 => "00100010", 73 => "11100001", 74 => "00000000", 75 => "10101010", 
    76 => "00001011", 77 => "10101010", 78 => "00100110", 79 => "00011000", 
    80 => "00010111", 81 => "11011110", 82 => "11010101", 83 => "11100110", 
    84 => "11010001", 85 => "11100111", 86 => "00000110", 87 => "00110001", 
    88 => "11111110", 89 => "11100101", 90 => "11101100", 91 => "11110000", 
    92 => "10000010", 93 => "11000001", 94 => "11001010", 95 => "11001110", 
    96 => "00000111", 97 => "11001101", 98 => "11110101", 99 => "00011001", 
    100 => "11000110", 101 => "11100001", 102 => "00001010", 103 => "00001001", 
    104 => "11110110", 105 => "00000110", 106 => "11011100", 107 => "10001100", 
    108 => "10110110", 109 => "11100010", 110 => "11111101", 111 => "11101011", 
    112 => "11100100", 113 => "11100010", 114 => "10001101", 115 => "10111010", 
    116 => "00010000", 117 => "00110001", 118 => "00001011", 119 => "11111000", 
    120 => "11001000", 121 => "10001011", 122 => "11010111", 123 => "00101011", 
    124 => "01101110", 125 => "00011100", 126 => "11101100", 127 => "10011000", 
    128 => "10000100", 129 => "11100000", 130 => "00110100", 131 => "00101111", 
    132 => "11111000", 133 => "11100110", 134 => "10110110", 135 => "10010000", 
    136 => "11010000", 137 => "00010100", 138 => "00100010", 139 => "10100101", 
    140 => "11111011", 141 => "11010111", 142 => "10110110", 143 => "11010100", 
    144 => "11010110", 145 => "11011011", 146 => "10101101", 147 => "11101101", 
    148 => "11100101", 149 => "11001110", 150 => "11110111", 151 => "11100001", 
    152 => "11101100", 153 => "11101000", 154 => "00000110", 155 => "11101100", 
    156 => "11011001", 157 => "11111100", 158 => "00100111", 159 => "00010011", 
    160 => "11101001", 161 => "00011100", 162 => "00010010", 163 => "11110000", 
    164 => "01000011", 165 => "00101000", 166 => "00001110", 167 => "11011111", 
    168 => "11101100", 169 => "11110111", 170 => "00100100", 171 => "00010111", 
    172 => "00000000", 173 => "00000000", 174 => "11111111", 175 => "11110000", 
    176 => "00000010", 177 => "00100010", 178 => "00000110", 179 => "00000000", 
    180 => "00010101", 181 => "11100011", 182 => "11011010", 183 => "11111010", 
    184 => "11111111", 185 => "00000010", 186 => "11110010", 187 => "11111110", 
    188 => "11010011", 189 => "11101010", 190 => "11100100", 191 => "11100010", 
    192 => "11100111", 193 => "11100100", 194 => "11111100", 195 => "11100110", 
    196 => "11111111", 197 => "00101110", 198 => "00100100", 199 => "00011000", 
    200 => "11111001", 201 => "00101010", 202 => "00000011", 203 => "00010101", 
    204 => "00010111", 205 => "11100100", 206 => "11011110", 207 => "11100111", 
    208 => "00000101", 209 => "00111001", 210 => "11110010", 211 => "11111000", 
    212 => "11100101", 213 => "11010101", 214 => "11010101", 215 => "00000001", 
    216 => "00010100", 217 => "11010000", 218 => "11100111", 219 => "11111011", 
    220 => "11010011", 221 => "11011000", 222 => "11100000", 223 => "11101010", 
    224 => "10100011", 225 => "11101000", 226 => "00001000", 227 => "11111111", 
    228 => "11010101", 229 => "11111011", 230 => "11011000", 231 => "10011101", 
    232 => "11011111", 233 => "11110111", 234 => "00000011", 235 => "11100101", 
    236 => "00000001", 237 => "11111111", 238 => "11001001", 239 => "11100001", 
    240 => "00001001", 241 => "00010010", 242 => "11011010", 243 => "00000110", 
    244 => "00101001", 245 => "00010101", 246 => "00000000", 247 => "11110110", 
    248 => "00011010", 249 => "11100001", 250 => "00010001", 251 => "00010111", 
    252 => "11111110", 253 => "00111110", 254 => "00011110", 255 => "11111100", 
    256 => "00000001", 257 => "00011110", 258 => "11100010", 259 => "11101001", 
    260 => "00100101", 261 => "00010010", 262 => "00000010", 263 => "00100011", 
    264 => "11111110", 265 => "11100101", 266 => "00001001", 267 => "00001111", 
    268 => "00010111", 269 => "11100110", 270 => "00011101", 271 => "00000010", 
    272 => "11100010", 273 => "11100011", 274 => "11010111", 275 => "11110000", 
    276 => "11011000", 277 => "00001111", 278 => "00010100", 279 => "11101000", 
    280 => "11010111", 281 => "10101110", 282 => "11011111", 283 => "10111110", 
    284 => "11000011", 285 => "00000100", 286 => "11010010", 287 => "11101000", 
    288 => "11001011", 289 => "10111001", 290 => "10011101", 291 => "11000001", 
    292 => "11100111", 293 => "11101111", 294 => "00011010", 295 => "01001111", 
    296 => "00111001", 297 => "00110011", 298 => "11111110", 299 => "00011011", 
    300 => "11110111", 301 => "01000011", 302 => "00010110", 303 => "00010001", 
    304 => "11110101", 305 => "00001010", 306 => "00010010", 307 => "00011101", 
    308 => "00000001", 309 => "00010011", 310 => "11110011", 311 => "11111001", 
    312 => "11100000", 313 => "11111010", 314 => "00001001", 315 => "11000000", 
    316 => "11100010", 317 => "11100000", 318 => "11100001", 319 => "11011001", 
    320 => "11110011", 321 => "11000011", 322 => "11010111", 323 => "11101101", 
    324 => "11101111", 325 => "11100011", 326 => "11110100", 327 => "11111001", 
    328 => "11101100", 329 => "11010011", 330 => "11100101", 331 => "00001110", 
    332 => "00101111", 333 => "00000001", 334 => "11111101", 335 => "00100101", 
    336 => "11011100", 337 => "11000011", 338 => "00011111", 339 => "01001000", 
    340 => "00011010", 341 => "11111001", 342 => "00010011", 343 => "11101110", 
    344 => "11000111", 345 => "00100111", 346 => "00110010", 347 => "00100101", 
    348 => "11111101", 349 => "00100011", 350 => "11001011", 351 => "10111100", 
    352 => "00011001", 353 => "00100111", 354 => "11111110", 355 => "11110011", 
    356 => "11101111", 357 => "00000110", 358 => "11010000", 359 => "11101010", 
    360 => "00001001", 361 => "11110000", 362 => "11111101", 363 => "00000001", 
    364 => "11100011", 365 => "11001110", 366 => "11100111", 367 => "11111100", 
    368 => "00010111", 369 => "11101000", 370 => "11111001", 371 => "10100001", 
    372 => "10010101", 373 => "11101100", 374 => "00011010", 375 => "11101001", 
    376 => "11101010", 377 => "11101100", 378 => "11011111", 379 => "10110000", 
    380 => "11000011", 381 => "11010110", 382 => "11100000", 383 => "11110001", 
    384 => "11001101", 385 => "11111011", 386 => "11010111", 387 => "11101000", 
    388 => "10110100", 389 => "10000001", 390 => "11011000", 391 => "11100001");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

