-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_cnn_Pipeline_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    add_ln69_3 : IN STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_ce0 : OUT STD_LOGIC;
    pad_img0_we0 : OUT STD_LOGIC;
    pad_img0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_1_ce0 : OUT STD_LOGIC;
    pad_img0_1_we0 : OUT STD_LOGIC;
    pad_img0_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_2_ce0 : OUT STD_LOGIC;
    pad_img0_2_we0 : OUT STD_LOGIC;
    pad_img0_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_3_ce0 : OUT STD_LOGIC;
    pad_img0_3_we0 : OUT STD_LOGIC;
    pad_img0_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_4_ce0 : OUT STD_LOGIC;
    pad_img0_4_we0 : OUT STD_LOGIC;
    pad_img0_4_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_5_ce0 : OUT STD_LOGIC;
    pad_img0_5_we0 : OUT STD_LOGIC;
    pad_img0_5_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_6_ce0 : OUT STD_LOGIC;
    pad_img0_6_we0 : OUT STD_LOGIC;
    pad_img0_6_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_7_ce0 : OUT STD_LOGIC;
    pad_img0_7_we0 : OUT STD_LOGIC;
    pad_img0_7_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_8_ce0 : OUT STD_LOGIC;
    pad_img0_8_we0 : OUT STD_LOGIC;
    pad_img0_8_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_9_ce0 : OUT STD_LOGIC;
    pad_img0_9_we0 : OUT STD_LOGIC;
    pad_img0_9_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_10_ce0 : OUT STD_LOGIC;
    pad_img0_10_we0 : OUT STD_LOGIC;
    pad_img0_10_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_11_ce0 : OUT STD_LOGIC;
    pad_img0_11_we0 : OUT STD_LOGIC;
    pad_img0_11_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_12_ce0 : OUT STD_LOGIC;
    pad_img0_12_we0 : OUT STD_LOGIC;
    pad_img0_12_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_13_ce0 : OUT STD_LOGIC;
    pad_img0_13_we0 : OUT STD_LOGIC;
    pad_img0_13_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_14_ce0 : OUT STD_LOGIC;
    pad_img0_14_we0 : OUT STD_LOGIC;
    pad_img0_14_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_15_ce0 : OUT STD_LOGIC;
    pad_img0_15_we0 : OUT STD_LOGIC;
    pad_img0_15_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_16_ce0 : OUT STD_LOGIC;
    pad_img0_16_we0 : OUT STD_LOGIC;
    pad_img0_16_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_17_ce0 : OUT STD_LOGIC;
    pad_img0_17_we0 : OUT STD_LOGIC;
    pad_img0_17_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_18_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_18_ce0 : OUT STD_LOGIC;
    pad_img0_18_we0 : OUT STD_LOGIC;
    pad_img0_18_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_19_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_19_ce0 : OUT STD_LOGIC;
    pad_img0_19_we0 : OUT STD_LOGIC;
    pad_img0_19_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_20_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_20_ce0 : OUT STD_LOGIC;
    pad_img0_20_we0 : OUT STD_LOGIC;
    pad_img0_20_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_21_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_21_ce0 : OUT STD_LOGIC;
    pad_img0_21_we0 : OUT STD_LOGIC;
    pad_img0_21_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_22_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_22_ce0 : OUT STD_LOGIC;
    pad_img0_22_we0 : OUT STD_LOGIC;
    pad_img0_22_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_23_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_23_ce0 : OUT STD_LOGIC;
    pad_img0_23_we0 : OUT STD_LOGIC;
    pad_img0_23_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_24_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_24_ce0 : OUT STD_LOGIC;
    pad_img0_24_we0 : OUT STD_LOGIC;
    pad_img0_24_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_25_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_25_ce0 : OUT STD_LOGIC;
    pad_img0_25_we0 : OUT STD_LOGIC;
    pad_img0_25_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_26_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_26_ce0 : OUT STD_LOGIC;
    pad_img0_26_we0 : OUT STD_LOGIC;
    pad_img0_26_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    pad_img0_27_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    pad_img0_27_ce0 : OUT STD_LOGIC;
    pad_img0_27_we0 : OUT STD_LOGIC;
    pad_img0_27_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of cnn_cnn_Pipeline_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_4A : STD_LOGIC_VECTOR (11 downto 0) := "000001001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln69_1_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln69_1_fu_584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_urem_fu_118 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln69_fu_638_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_phi_urem_load : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul_fu_122 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal add_ln69_fu_558_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_phi_mul_load : STD_LOGIC_VECTOR (11 downto 0);
    signal arrayinit_curidx8_fu_126 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln69_1_fu_620_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_allocacmp_arrayinit_curidx8_load : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln_read_read_fu_130_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln69_fu_616_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_564_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln69_fu_574_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln69_2_fu_578_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln69_4_fu_626_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln69_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component cnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    arrayinit_curidx8_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                arrayinit_curidx8_fu_126 <= add_ln69_1_fu_620_p2;
            end if;
        end if;
    end process;

    phi_mul_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                phi_mul_fu_122 <= add_ln69_fu_558_p2;
            end if;
        end if;
    end process;

    phi_urem_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                phi_urem_fu_118 <= select_ln69_fu_638_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln69_1_fu_620_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_arrayinit_curidx8_load) + unsigned(ap_const_lv6_1));
    add_ln69_2_fu_578_p2 <= std_logic_vector(unsigned(add_ln69_3) + unsigned(zext_ln69_fu_574_p1));
    add_ln69_4_fu_626_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_urem_load) + unsigned(ap_const_lv6_1));
    add_ln69_fu_558_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_mul_load) + unsigned(ap_const_lv12_4A));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln69_1_fu_646_p2)
    begin
        if (((icmp_ln69_1_fu_646_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_arrayinit_curidx8_load_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, arrayinit_curidx8_fu_126)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_arrayinit_curidx8_load <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_arrayinit_curidx8_load <= arrayinit_curidx8_fu_126;
        end if; 
    end process;


    ap_sig_allocacmp_phi_mul_load_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, phi_mul_fu_122)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_phi_mul_load <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_phi_mul_load <= phi_mul_fu_122;
        end if; 
    end process;


    ap_sig_allocacmp_phi_urem_load_assign_proc : process(ap_CS_fsm_state1, phi_urem_fu_118, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_phi_urem_load <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_phi_urem_load <= phi_urem_fu_118;
        end if; 
    end process;

    icmp_ln69_1_fu_646_p2 <= "1" when (ap_sig_allocacmp_arrayinit_curidx8_load = ap_const_lv6_21) else "0";
    icmp_ln69_fu_632_p2 <= "1" when (unsigned(add_ln69_4_fu_626_p2) < unsigned(ap_const_lv6_7)) else "0";
    pad_img0_10_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_10_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_10_ce0 <= ap_const_logic_1;
        else 
            pad_img0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_10_d0 <= ap_const_lv24_0;

    pad_img0_10_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_3) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_10_we0 <= ap_const_logic_1;
        else 
            pad_img0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_11_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_11_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_11_ce0 <= ap_const_logic_1;
        else 
            pad_img0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_11_d0 <= ap_const_lv24_0;

    pad_img0_11_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_4) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_11_we0 <= ap_const_logic_1;
        else 
            pad_img0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_12_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_12_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_12_ce0 <= ap_const_logic_1;
        else 
            pad_img0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_12_d0 <= ap_const_lv24_0;

    pad_img0_12_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_5) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_12_we0 <= ap_const_logic_1;
        else 
            pad_img0_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_13_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_13_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_13_ce0 <= ap_const_logic_1;
        else 
            pad_img0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_13_d0 <= ap_const_lv24_0;

    pad_img0_13_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((trunc_ln69_fu_616_p1 = ap_const_lv3_6) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1)) or ((trunc_ln69_fu_616_p1 = ap_const_lv3_7) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1))))) then 
            pad_img0_13_we0 <= ap_const_logic_1;
        else 
            pad_img0_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_14_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_14_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_14_ce0 <= ap_const_logic_1;
        else 
            pad_img0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_14_d0 <= ap_const_lv24_0;

    pad_img0_14_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_0) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_14_we0 <= ap_const_logic_1;
        else 
            pad_img0_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_15_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_15_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_15_ce0 <= ap_const_logic_1;
        else 
            pad_img0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_15_d0 <= ap_const_lv24_0;

    pad_img0_15_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_1) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_15_we0 <= ap_const_logic_1;
        else 
            pad_img0_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_16_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_16_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_16_ce0 <= ap_const_logic_1;
        else 
            pad_img0_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_16_d0 <= ap_const_lv24_0;

    pad_img0_16_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_2) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_16_we0 <= ap_const_logic_1;
        else 
            pad_img0_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_17_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_17_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_17_ce0 <= ap_const_logic_1;
        else 
            pad_img0_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_17_d0 <= ap_const_lv24_0;

    pad_img0_17_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_3) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_17_we0 <= ap_const_logic_1;
        else 
            pad_img0_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_18_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_18_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_18_ce0 <= ap_const_logic_1;
        else 
            pad_img0_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_18_d0 <= ap_const_lv24_0;

    pad_img0_18_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_4) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_18_we0 <= ap_const_logic_1;
        else 
            pad_img0_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_19_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_19_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_19_ce0 <= ap_const_logic_1;
        else 
            pad_img0_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_19_d0 <= ap_const_lv24_0;

    pad_img0_19_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_5) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_19_we0 <= ap_const_logic_1;
        else 
            pad_img0_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_1_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_1_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_1_ce0 <= ap_const_logic_1;
        else 
            pad_img0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_1_d0 <= ap_const_lv24_0;

    pad_img0_1_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_1) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_1_we0 <= ap_const_logic_1;
        else 
            pad_img0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_20_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_20_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_20_ce0 <= ap_const_logic_1;
        else 
            pad_img0_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_20_d0 <= ap_const_lv24_0;

    pad_img0_20_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((trunc_ln69_fu_616_p1 = ap_const_lv3_6) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2)) or ((trunc_ln69_fu_616_p1 = ap_const_lv3_7) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_2))))) then 
            pad_img0_20_we0 <= ap_const_logic_1;
        else 
            pad_img0_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_21_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_21_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_21_ce0 <= ap_const_logic_1;
        else 
            pad_img0_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_21_d0 <= ap_const_lv24_0;

    pad_img0_21_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_0) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_21_we0 <= ap_const_logic_1;
        else 
            pad_img0_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_22_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_22_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_22_ce0 <= ap_const_logic_1;
        else 
            pad_img0_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_22_d0 <= ap_const_lv24_0;

    pad_img0_22_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_1) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_22_we0 <= ap_const_logic_1;
        else 
            pad_img0_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_23_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_23_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_23_ce0 <= ap_const_logic_1;
        else 
            pad_img0_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_23_d0 <= ap_const_lv24_0;

    pad_img0_23_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_2) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_23_we0 <= ap_const_logic_1;
        else 
            pad_img0_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_24_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_24_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_24_ce0 <= ap_const_logic_1;
        else 
            pad_img0_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_24_d0 <= ap_const_lv24_0;

    pad_img0_24_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_3) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_24_we0 <= ap_const_logic_1;
        else 
            pad_img0_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_25_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_25_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_25_ce0 <= ap_const_logic_1;
        else 
            pad_img0_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_25_d0 <= ap_const_lv24_0;

    pad_img0_25_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_4) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_25_we0 <= ap_const_logic_1;
        else 
            pad_img0_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_26_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_26_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_26_ce0 <= ap_const_logic_1;
        else 
            pad_img0_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_26_d0 <= ap_const_lv24_0;

    pad_img0_26_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_5) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_26_we0 <= ap_const_logic_1;
        else 
            pad_img0_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_27_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_27_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_27_ce0 <= ap_const_logic_1;
        else 
            pad_img0_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_27_d0 <= ap_const_lv24_0;

    pad_img0_27_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((trunc_ln69_fu_616_p1 = ap_const_lv3_6) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3)) or ((trunc_ln69_fu_616_p1 = ap_const_lv3_7) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_3))))) then 
            pad_img0_27_we0 <= ap_const_logic_1;
        else 
            pad_img0_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_2_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_2_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_2_ce0 <= ap_const_logic_1;
        else 
            pad_img0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_2_d0 <= ap_const_lv24_0;

    pad_img0_2_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_2) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_2_we0 <= ap_const_logic_1;
        else 
            pad_img0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_3_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_3_ce0 <= ap_const_logic_1;
        else 
            pad_img0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_3_d0 <= ap_const_lv24_0;

    pad_img0_3_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_3) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_3_we0 <= ap_const_logic_1;
        else 
            pad_img0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_4_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_4_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_4_ce0 <= ap_const_logic_1;
        else 
            pad_img0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_4_d0 <= ap_const_lv24_0;

    pad_img0_4_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_4) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_4_we0 <= ap_const_logic_1;
        else 
            pad_img0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_5_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_5_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_5_ce0 <= ap_const_logic_1;
        else 
            pad_img0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_5_d0 <= ap_const_lv24_0;

    pad_img0_5_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_5) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_5_we0 <= ap_const_logic_1;
        else 
            pad_img0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_6_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_6_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_6_ce0 <= ap_const_logic_1;
        else 
            pad_img0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_6_d0 <= ap_const_lv24_0;

    pad_img0_6_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((trunc_ln69_fu_616_p1 = ap_const_lv3_6) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0)) or ((trunc_ln69_fu_616_p1 = ap_const_lv3_7) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0))))) then 
            pad_img0_6_we0 <= ap_const_logic_1;
        else 
            pad_img0_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_7_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_7_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_7_ce0 <= ap_const_logic_1;
        else 
            pad_img0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_7_d0 <= ap_const_lv24_0;

    pad_img0_7_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_0) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_7_we0 <= ap_const_logic_1;
        else 
            pad_img0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_8_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_8_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_8_ce0 <= ap_const_logic_1;
        else 
            pad_img0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_8_d0 <= ap_const_lv24_0;

    pad_img0_8_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_1) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_8_we0 <= ap_const_logic_1;
        else 
            pad_img0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_9_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_9_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_9_ce0 <= ap_const_logic_1;
        else 
            pad_img0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_9_d0 <= ap_const_lv24_0;

    pad_img0_9_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_2) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_9_we0 <= ap_const_logic_1;
        else 
            pad_img0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_address0 <= zext_ln69_1_fu_584_p1(6 - 1 downto 0);

    pad_img0_ce0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_ce0 <= ap_const_logic_1;
        else 
            pad_img0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img0_d0 <= ap_const_lv24_0;

    pad_img0_we0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, trunc_ln_read_read_fu_130_p2, trunc_ln69_fu_616_p1)
    begin
        if (((trunc_ln69_fu_616_p1 = ap_const_lv3_0) and (trunc_ln_read_read_fu_130_p2 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pad_img0_we0 <= ap_const_logic_1;
        else 
            pad_img0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln69_fu_638_p3 <= 
        add_ln69_4_fu_626_p2 when (icmp_ln69_fu_632_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_fu_564_p4 <= ap_sig_allocacmp_phi_mul_load(11 downto 9);
    trunc_ln69_fu_616_p1 <= ap_sig_allocacmp_phi_urem_load(3 - 1 downto 0);
    trunc_ln_read_read_fu_130_p2 <= trunc_ln;
    zext_ln69_1_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln69_2_fu_578_p2),64));
    zext_ln69_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_564_p4),6));
end behav;
