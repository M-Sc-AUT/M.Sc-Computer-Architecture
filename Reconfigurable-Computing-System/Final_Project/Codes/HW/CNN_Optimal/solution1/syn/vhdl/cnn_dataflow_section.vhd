-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_dataflow_section is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pad_img0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img0_ce0 : OUT STD_LOGIC;
    pad_img0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img0_ce1 : OUT STD_LOGIC;
    pad_img0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img1_ce0 : OUT STD_LOGIC;
    pad_img1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img1_ce1 : OUT STD_LOGIC;
    pad_img1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img2_ce0 : OUT STD_LOGIC;
    pad_img2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pad_img2_ce1 : OUT STD_LOGIC;
    pad_img2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_0_ce0 : OUT STD_LOGIC;
    pad_img3_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_1_ce0 : OUT STD_LOGIC;
    pad_img3_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_2_ce0 : OUT STD_LOGIC;
    pad_img3_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_3_ce0 : OUT STD_LOGIC;
    pad_img3_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_4_ce0 : OUT STD_LOGIC;
    pad_img3_0_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_5_ce0 : OUT STD_LOGIC;
    pad_img3_0_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_0_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_0_6_ce0 : OUT STD_LOGIC;
    pad_img3_0_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_0_ce0 : OUT STD_LOGIC;
    pad_img3_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_1_ce0 : OUT STD_LOGIC;
    pad_img3_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_2_ce0 : OUT STD_LOGIC;
    pad_img3_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_3_ce0 : OUT STD_LOGIC;
    pad_img3_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_4_ce0 : OUT STD_LOGIC;
    pad_img3_1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_5_ce0 : OUT STD_LOGIC;
    pad_img3_1_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_1_6_ce0 : OUT STD_LOGIC;
    pad_img3_1_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_0_ce0 : OUT STD_LOGIC;
    pad_img3_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_1_ce0 : OUT STD_LOGIC;
    pad_img3_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_2_ce0 : OUT STD_LOGIC;
    pad_img3_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_3_ce0 : OUT STD_LOGIC;
    pad_img3_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_4_ce0 : OUT STD_LOGIC;
    pad_img3_2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_5_ce0 : OUT STD_LOGIC;
    pad_img3_2_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_2_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_2_6_ce0 : OUT STD_LOGIC;
    pad_img3_2_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_0_ce0 : OUT STD_LOGIC;
    pad_img3_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_1_ce0 : OUT STD_LOGIC;
    pad_img3_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_2_ce0 : OUT STD_LOGIC;
    pad_img3_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_3_ce0 : OUT STD_LOGIC;
    pad_img3_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_4_ce0 : OUT STD_LOGIC;
    pad_img3_3_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_5_ce0 : OUT STD_LOGIC;
    pad_img3_3_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_3_6_ce0 : OUT STD_LOGIC;
    pad_img3_3_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_0_ce0 : OUT STD_LOGIC;
    pad_img3_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_1_ce0 : OUT STD_LOGIC;
    pad_img3_4_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_2_ce0 : OUT STD_LOGIC;
    pad_img3_4_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_3_ce0 : OUT STD_LOGIC;
    pad_img3_4_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_4_ce0 : OUT STD_LOGIC;
    pad_img3_4_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_5_ce0 : OUT STD_LOGIC;
    pad_img3_4_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_4_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_4_6_ce0 : OUT STD_LOGIC;
    pad_img3_4_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_0_ce0 : OUT STD_LOGIC;
    pad_img3_5_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_1_ce0 : OUT STD_LOGIC;
    pad_img3_5_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_2_ce0 : OUT STD_LOGIC;
    pad_img3_5_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_3_ce0 : OUT STD_LOGIC;
    pad_img3_5_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_4_ce0 : OUT STD_LOGIC;
    pad_img3_5_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_5_ce0 : OUT STD_LOGIC;
    pad_img3_5_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_5_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_5_6_ce0 : OUT STD_LOGIC;
    pad_img3_5_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_0_ce0 : OUT STD_LOGIC;
    pad_img3_6_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_1_ce0 : OUT STD_LOGIC;
    pad_img3_6_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_2_ce0 : OUT STD_LOGIC;
    pad_img3_6_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_3_ce0 : OUT STD_LOGIC;
    pad_img3_6_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_4_ce0 : OUT STD_LOGIC;
    pad_img3_6_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_5_ce0 : OUT STD_LOGIC;
    pad_img3_6_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pad_img3_6_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    pad_img3_6_6_ce0 : OUT STD_LOGIC;
    pad_img3_6_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_ce0 : OUT STD_LOGIC;
    prediction_we0 : OUT STD_LOGIC;
    prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_ce1 : OUT STD_LOGIC;
    prediction_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_409_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_409_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_409_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_409_p_ce : OUT STD_LOGIC );
end;


architecture behav of cnn_dataflow_section is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_convolution_fu_284_ap_start : STD_LOGIC;
    signal grp_convolution_fu_284_ap_done : STD_LOGIC;
    signal grp_convolution_fu_284_ap_idle : STD_LOGIC;
    signal grp_convolution_fu_284_ap_ready : STD_LOGIC;
    signal grp_convolution_fu_284_pad_img_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_convolution_fu_284_pad_img_ce0 : STD_LOGIC;
    signal grp_convolution_fu_284_pad_img_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_fu_284_pad_img_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_convolution_fu_284_pad_img_ce1 : STD_LOGIC;
    signal grp_convolution_fu_284_pad_img_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_fu_284_filter : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_convolution_fu_284_conv_to_pool_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_fu_284_conv_to_pool_streams_0_full_n : STD_LOGIC;
    signal grp_convolution_fu_284_conv_to_pool_streams_0_write : STD_LOGIC;
    signal grp_convolution_fu_295_ap_start : STD_LOGIC;
    signal grp_convolution_fu_295_ap_done : STD_LOGIC;
    signal grp_convolution_fu_295_ap_idle : STD_LOGIC;
    signal grp_convolution_fu_295_ap_ready : STD_LOGIC;
    signal grp_convolution_fu_295_pad_img_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_convolution_fu_295_pad_img_ce0 : STD_LOGIC;
    signal grp_convolution_fu_295_pad_img_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_convolution_fu_295_pad_img_ce1 : STD_LOGIC;
    signal grp_convolution_fu_295_conv_to_pool_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_fu_295_conv_to_pool_streams_0_write : STD_LOGIC;
    signal grp_convolution_1_fu_304_ap_start : STD_LOGIC;
    signal grp_convolution_1_fu_304_ap_done : STD_LOGIC;
    signal grp_convolution_1_fu_304_ap_idle : STD_LOGIC;
    signal grp_convolution_1_fu_304_ap_ready : STD_LOGIC;
    signal grp_convolution_1_fu_304_conv_to_pool_streams_3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_1_fu_304_conv_to_pool_streams_3_write : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_0_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_0_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_1_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_1_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_2_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_2_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_3_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_3_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_4_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_4_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_5_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_5_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_0_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_1_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_2_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_3_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_4_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_5_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_pad_img_6_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_1_fu_304_pad_img_6_6_ce0 : STD_LOGIC;
    signal grp_convolution_1_fu_304_grp_fu_684_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_1_fu_304_grp_fu_684_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_convolution_1_fu_304_grp_fu_684_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_convolution_1_fu_304_grp_fu_684_p_ce : STD_LOGIC;
    signal grp_max_pooling_fu_407_ap_start : STD_LOGIC;
    signal grp_max_pooling_fu_407_ap_done : STD_LOGIC;
    signal grp_max_pooling_fu_407_ap_idle : STD_LOGIC;
    signal grp_max_pooling_fu_407_ap_ready : STD_LOGIC;
    signal grp_max_pooling_fu_407_conv_to_pool_streams_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n : STD_LOGIC;
    signal grp_max_pooling_fu_407_conv_to_pool_streams_0_read : STD_LOGIC;
    signal grp_max_pooling_fu_407_pool_to_flat_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n : STD_LOGIC;
    signal grp_max_pooling_fu_407_pool_to_flat_streams_0_write : STD_LOGIC;
    signal grp_max_pooling_fu_413_ap_start : STD_LOGIC;
    signal grp_max_pooling_fu_413_ap_done : STD_LOGIC;
    signal grp_max_pooling_fu_413_ap_idle : STD_LOGIC;
    signal grp_max_pooling_fu_413_ap_ready : STD_LOGIC;
    signal grp_max_pooling_fu_413_conv_to_pool_streams_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n : STD_LOGIC;
    signal grp_max_pooling_fu_413_conv_to_pool_streams_0_read : STD_LOGIC;
    signal grp_max_pooling_fu_413_pool_to_flat_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n : STD_LOGIC;
    signal grp_max_pooling_fu_413_pool_to_flat_streams_0_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_pool_to_flat_streams_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_pool_to_flat_streams_1_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_pool_to_flat_streams_2_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_pool_to_flat_streams_3_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_write : STD_LOGIC;
    signal grp_dense_fu_443_ap_start : STD_LOGIC;
    signal grp_dense_fu_443_ap_done : STD_LOGIC;
    signal grp_dense_fu_443_ap_idle : STD_LOGIC;
    signal grp_dense_fu_443_ap_ready : STD_LOGIC;
    signal grp_dense_fu_443_flat_to_dense_streams_0_read : STD_LOGIC;
    signal grp_dense_fu_443_dense_to_softmax_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_fu_443_dense_to_softmax_streams_0_write : STD_LOGIC;
    signal grp_dense_fu_471_ap_start : STD_LOGIC;
    signal grp_dense_fu_471_ap_done : STD_LOGIC;
    signal grp_dense_fu_471_ap_idle : STD_LOGIC;
    signal grp_dense_fu_471_ap_ready : STD_LOGIC;
    signal grp_dense_fu_471_flat_to_dense_streams_0_read : STD_LOGIC;
    signal grp_dense_fu_471_dense_to_softmax_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_fu_471_dense_to_softmax_streams_0_write : STD_LOGIC;
    signal grp_dense_fu_499_ap_start : STD_LOGIC;
    signal grp_dense_fu_499_ap_done : STD_LOGIC;
    signal grp_dense_fu_499_ap_idle : STD_LOGIC;
    signal grp_dense_fu_499_ap_ready : STD_LOGIC;
    signal grp_dense_fu_499_flat_to_dense_streams_0_read : STD_LOGIC;
    signal grp_dense_fu_499_dense_to_softmax_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_fu_499_dense_to_softmax_streams_0_write : STD_LOGIC;
    signal grp_dense_fu_527_ap_start : STD_LOGIC;
    signal grp_dense_fu_527_ap_done : STD_LOGIC;
    signal grp_dense_fu_527_ap_idle : STD_LOGIC;
    signal grp_dense_fu_527_ap_ready : STD_LOGIC;
    signal grp_dense_fu_527_flat_to_dense_streams_0_read : STD_LOGIC;
    signal grp_dense_fu_527_dense_to_softmax_streams_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_fu_527_dense_to_softmax_streams_0_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_1_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_2_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_3_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_ce0 : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_we0 : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_exp_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_exp_sum_out_ap_vld : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_ce : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_idle : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_ready : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce0 : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_we0 : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce1 : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_ce : STD_LOGIC;
    signal grp_convolution_fu_284_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal conv_to_pool_streams_full_n : STD_LOGIC;
    signal conv_to_pool_streams_write : STD_LOGIC;
    signal conv_to_pool_streams_1_full_n : STD_LOGIC;
    signal conv_to_pool_streams_1_write : STD_LOGIC;
    signal grp_convolution_fu_295_ap_start_reg : STD_LOGIC := '0';
    signal conv_to_pool_streams_2_full_n : STD_LOGIC;
    signal conv_to_pool_streams_2_write : STD_LOGIC;
    signal grp_convolution_1_fu_304_ap_start_reg : STD_LOGIC := '0';
    signal conv_to_pool_streams_3_full_n : STD_LOGIC;
    signal conv_to_pool_streams_3_write : STD_LOGIC;
    signal grp_max_pooling_fu_407_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal conv_to_pool_streams_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_to_pool_streams_empty_n : STD_LOGIC;
    signal conv_to_pool_streams_read : STD_LOGIC;
    signal conv_to_pool_streams_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_to_pool_streams_1_empty_n : STD_LOGIC;
    signal conv_to_pool_streams_1_read : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal pool_to_flat_streams_full_n : STD_LOGIC;
    signal pool_to_flat_streams_write : STD_LOGIC;
    signal pool_to_flat_streams_1_full_n : STD_LOGIC;
    signal pool_to_flat_streams_1_write : STD_LOGIC;
    signal grp_max_pooling_fu_413_ap_start_reg : STD_LOGIC := '0';
    signal conv_to_pool_streams_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_to_pool_streams_3_empty_n : STD_LOGIC;
    signal conv_to_pool_streams_3_read : STD_LOGIC;
    signal conv_to_pool_streams_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_to_pool_streams_2_empty_n : STD_LOGIC;
    signal conv_to_pool_streams_2_read : STD_LOGIC;
    signal pool_to_flat_streams_3_full_n : STD_LOGIC;
    signal pool_to_flat_streams_3_write : STD_LOGIC;
    signal pool_to_flat_streams_2_full_n : STD_LOGIC;
    signal pool_to_flat_streams_2_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal pool_to_flat_streams_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_to_flat_streams_empty_n : STD_LOGIC;
    signal pool_to_flat_streams_read : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal flat_to_dense_streams_full_n : STD_LOGIC;
    signal flat_to_dense_streams_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal pool_to_flat_streams_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_to_flat_streams_1_empty_n : STD_LOGIC;
    signal pool_to_flat_streams_1_read : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal flat_to_dense_streams_1_full_n : STD_LOGIC;
    signal flat_to_dense_streams_1_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal pool_to_flat_streams_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_to_flat_streams_2_empty_n : STD_LOGIC;
    signal pool_to_flat_streams_2_read : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal flat_to_dense_streams_2_full_n : STD_LOGIC;
    signal flat_to_dense_streams_2_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal pool_to_flat_streams_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_to_flat_streams_3_empty_n : STD_LOGIC;
    signal pool_to_flat_streams_3_read : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal flat_to_dense_streams_3_full_n : STD_LOGIC;
    signal flat_to_dense_streams_3_write : STD_LOGIC;
    signal grp_dense_fu_443_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal flat_to_dense_streams_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_to_dense_streams_empty_n : STD_LOGIC;
    signal flat_to_dense_streams_read : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal dense_to_softmax_streams_full_n : STD_LOGIC;
    signal dense_to_softmax_streams_write : STD_LOGIC;
    signal grp_dense_fu_471_ap_start_reg : STD_LOGIC := '0';
    signal flat_to_dense_streams_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_to_dense_streams_1_empty_n : STD_LOGIC;
    signal flat_to_dense_streams_1_read : STD_LOGIC;
    signal dense_to_softmax_streams_1_full_n : STD_LOGIC;
    signal dense_to_softmax_streams_1_write : STD_LOGIC;
    signal grp_dense_fu_499_ap_start_reg : STD_LOGIC := '0';
    signal flat_to_dense_streams_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_to_dense_streams_2_empty_n : STD_LOGIC;
    signal flat_to_dense_streams_2_read : STD_LOGIC;
    signal dense_to_softmax_streams_2_full_n : STD_LOGIC;
    signal dense_to_softmax_streams_2_write : STD_LOGIC;
    signal grp_dense_fu_527_ap_start_reg : STD_LOGIC := '0';
    signal flat_to_dense_streams_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_to_dense_streams_3_empty_n : STD_LOGIC;
    signal flat_to_dense_streams_3_read : STD_LOGIC;
    signal dense_to_softmax_streams_3_full_n : STD_LOGIC;
    signal dense_to_softmax_streams_3_write : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal dense_to_softmax_streams_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_to_softmax_streams_empty_n : STD_LOGIC;
    signal dense_to_softmax_streams_read : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal dense_to_softmax_streams_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_to_softmax_streams_1_empty_n : STD_LOGIC;
    signal dense_to_softmax_streams_1_read : STD_LOGIC;
    signal dense_to_softmax_streams_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_to_softmax_streams_2_empty_n : STD_LOGIC;
    signal dense_to_softmax_streams_2_read : STD_LOGIC;
    signal dense_to_softmax_streams_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_to_softmax_streams_3_empty_n : STD_LOGIC;
    signal dense_to_softmax_streams_3_read : STD_LOGIC;
    signal grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fu_684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_684_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_684_ce : STD_LOGIC;
    signal grp_fu_688_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_convolution IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pad_img_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pad_img_ce0 : OUT STD_LOGIC;
        pad_img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pad_img_ce1 : OUT STD_LOGIC;
        pad_img_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        filter : IN STD_LOGIC_VECTOR (1 downto 0);
        conv_to_pool_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_full_n : IN STD_LOGIC;
        conv_to_pool_streams_0_write : OUT STD_LOGIC );
    end component;


    component cnn_convolution_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_to_pool_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_3_full_n : IN STD_LOGIC;
        conv_to_pool_streams_3_write : OUT STD_LOGIC;
        pad_img_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_0_ce0 : OUT STD_LOGIC;
        pad_img_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_1_ce0 : OUT STD_LOGIC;
        pad_img_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_2_ce0 : OUT STD_LOGIC;
        pad_img_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_3_ce0 : OUT STD_LOGIC;
        pad_img_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_4_ce0 : OUT STD_LOGIC;
        pad_img_0_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_5_ce0 : OUT STD_LOGIC;
        pad_img_0_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_0_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_0_6_ce0 : OUT STD_LOGIC;
        pad_img_0_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_0_ce0 : OUT STD_LOGIC;
        pad_img_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_1_ce0 : OUT STD_LOGIC;
        pad_img_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_2_ce0 : OUT STD_LOGIC;
        pad_img_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_3_ce0 : OUT STD_LOGIC;
        pad_img_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_4_ce0 : OUT STD_LOGIC;
        pad_img_1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_5_ce0 : OUT STD_LOGIC;
        pad_img_1_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_1_6_ce0 : OUT STD_LOGIC;
        pad_img_1_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_0_ce0 : OUT STD_LOGIC;
        pad_img_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_1_ce0 : OUT STD_LOGIC;
        pad_img_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_2_ce0 : OUT STD_LOGIC;
        pad_img_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_3_ce0 : OUT STD_LOGIC;
        pad_img_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_4_ce0 : OUT STD_LOGIC;
        pad_img_2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_5_ce0 : OUT STD_LOGIC;
        pad_img_2_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_2_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_2_6_ce0 : OUT STD_LOGIC;
        pad_img_2_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_0_ce0 : OUT STD_LOGIC;
        pad_img_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_1_ce0 : OUT STD_LOGIC;
        pad_img_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_2_ce0 : OUT STD_LOGIC;
        pad_img_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_3_ce0 : OUT STD_LOGIC;
        pad_img_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_4_ce0 : OUT STD_LOGIC;
        pad_img_3_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_5_ce0 : OUT STD_LOGIC;
        pad_img_3_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_3_6_ce0 : OUT STD_LOGIC;
        pad_img_3_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_0_ce0 : OUT STD_LOGIC;
        pad_img_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_1_ce0 : OUT STD_LOGIC;
        pad_img_4_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_2_ce0 : OUT STD_LOGIC;
        pad_img_4_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_3_ce0 : OUT STD_LOGIC;
        pad_img_4_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_4_ce0 : OUT STD_LOGIC;
        pad_img_4_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_5_ce0 : OUT STD_LOGIC;
        pad_img_4_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_4_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_4_6_ce0 : OUT STD_LOGIC;
        pad_img_4_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_0_ce0 : OUT STD_LOGIC;
        pad_img_5_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_1_ce0 : OUT STD_LOGIC;
        pad_img_5_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_2_ce0 : OUT STD_LOGIC;
        pad_img_5_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_3_ce0 : OUT STD_LOGIC;
        pad_img_5_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_4_ce0 : OUT STD_LOGIC;
        pad_img_5_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_5_ce0 : OUT STD_LOGIC;
        pad_img_5_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_5_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_5_6_ce0 : OUT STD_LOGIC;
        pad_img_5_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_0_ce0 : OUT STD_LOGIC;
        pad_img_6_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_1_ce0 : OUT STD_LOGIC;
        pad_img_6_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_2_ce0 : OUT STD_LOGIC;
        pad_img_6_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_3_ce0 : OUT STD_LOGIC;
        pad_img_6_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_4_ce0 : OUT STD_LOGIC;
        pad_img_6_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_5_ce0 : OUT STD_LOGIC;
        pad_img_6_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_img_6_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pad_img_6_6_ce0 : OUT STD_LOGIC;
        pad_img_6_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_684_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_max_pooling IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_to_pool_streams_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_to_pool_streams_0_empty_n : IN STD_LOGIC;
        conv_to_pool_streams_0_read : OUT STD_LOGIC;
        pool_to_flat_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pool_to_flat_streams_0_full_n : IN STD_LOGIC;
        pool_to_flat_streams_0_write : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_to_flat_streams_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pool_to_flat_streams_empty_n : IN STD_LOGIC;
        pool_to_flat_streams_read : OUT STD_LOGIC;
        flat_to_dense_streams_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_full_n : IN STD_LOGIC;
        flat_to_dense_streams_write : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_to_flat_streams_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pool_to_flat_streams_1_empty_n : IN STD_LOGIC;
        pool_to_flat_streams_1_read : OUT STD_LOGIC;
        flat_to_dense_streams_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_1_full_n : IN STD_LOGIC;
        flat_to_dense_streams_1_write : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_to_flat_streams_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pool_to_flat_streams_2_empty_n : IN STD_LOGIC;
        pool_to_flat_streams_2_read : OUT STD_LOGIC;
        flat_to_dense_streams_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_2_full_n : IN STD_LOGIC;
        flat_to_dense_streams_2_write : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_to_flat_streams_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pool_to_flat_streams_3_empty_n : IN STD_LOGIC;
        pool_to_flat_streams_3_read : OUT STD_LOGIC;
        flat_to_dense_streams_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_3_full_n : IN STD_LOGIC;
        flat_to_dense_streams_3_write : OUT STD_LOGIC );
    end component;


    component cnn_dense IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flat_to_dense_streams_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_to_dense_streams_0_empty_n : IN STD_LOGIC;
        flat_to_dense_streams_0_read : OUT STD_LOGIC;
        filter : IN STD_LOGIC_VECTOR (1 downto 0);
        dense_to_softmax_streams_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_0_full_n : IN STD_LOGIC;
        dense_to_softmax_streams_0_write : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_dense_soft_max_for_dense_size IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_to_softmax_streams_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_read : OUT STD_LOGIC;
        dense_to_softmax_streams_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_1_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_1_read : OUT STD_LOGIC;
        dense_to_softmax_streams_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_2_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_2_read : OUT STD_LOGIC;
        dense_to_softmax_streams_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_to_softmax_streams_3_empty_n : IN STD_LOGIC;
        dense_to_softmax_streams_3_read : OUT STD_LOGIC;
        prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce0 : OUT STD_LOGIC;
        prediction_we0 : OUT STD_LOGIC;
        prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_out_ap_vld : OUT STD_LOGIC;
        grp_fu_684_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_684_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_dataflow_section_Pipeline_dense_soft_max_for_digits IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        prediction_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce0 : OUT STD_LOGIC;
        prediction_we0 : OUT STD_LOGIC;
        prediction_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_ce1 : OUT STD_LOGIC;
        prediction_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        exp_sum_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_ce : OUT STD_LOGIC );
    end component;


    component cnn_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fifo_w32_d784_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component cnn_fifo_w32_d196_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component cnn_fifo_w32_d10_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_convolution_fu_284 : component cnn_convolution
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_fu_284_ap_start,
        ap_done => grp_convolution_fu_284_ap_done,
        ap_idle => grp_convolution_fu_284_ap_idle,
        ap_ready => grp_convolution_fu_284_ap_ready,
        pad_img_address0 => grp_convolution_fu_284_pad_img_address0,
        pad_img_ce0 => grp_convolution_fu_284_pad_img_ce0,
        pad_img_q0 => grp_convolution_fu_284_pad_img_q0,
        pad_img_address1 => grp_convolution_fu_284_pad_img_address1,
        pad_img_ce1 => grp_convolution_fu_284_pad_img_ce1,
        pad_img_q1 => grp_convolution_fu_284_pad_img_q1,
        filter => grp_convolution_fu_284_filter,
        conv_to_pool_streams_0_din => grp_convolution_fu_284_conv_to_pool_streams_0_din,
        conv_to_pool_streams_0_full_n => grp_convolution_fu_284_conv_to_pool_streams_0_full_n,
        conv_to_pool_streams_0_write => grp_convolution_fu_284_conv_to_pool_streams_0_write);

    grp_convolution_fu_295 : component cnn_convolution
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_fu_295_ap_start,
        ap_done => grp_convolution_fu_295_ap_done,
        ap_idle => grp_convolution_fu_295_ap_idle,
        ap_ready => grp_convolution_fu_295_ap_ready,
        pad_img_address0 => grp_convolution_fu_295_pad_img_address0,
        pad_img_ce0 => grp_convolution_fu_295_pad_img_ce0,
        pad_img_q0 => pad_img2_q0,
        pad_img_address1 => grp_convolution_fu_295_pad_img_address1,
        pad_img_ce1 => grp_convolution_fu_295_pad_img_ce1,
        pad_img_q1 => pad_img2_q1,
        filter => ap_const_lv2_2,
        conv_to_pool_streams_0_din => grp_convolution_fu_295_conv_to_pool_streams_0_din,
        conv_to_pool_streams_0_full_n => conv_to_pool_streams_2_full_n,
        conv_to_pool_streams_0_write => grp_convolution_fu_295_conv_to_pool_streams_0_write);

    grp_convolution_1_fu_304 : component cnn_convolution_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_1_fu_304_ap_start,
        ap_done => grp_convolution_1_fu_304_ap_done,
        ap_idle => grp_convolution_1_fu_304_ap_idle,
        ap_ready => grp_convolution_1_fu_304_ap_ready,
        conv_to_pool_streams_3_din => grp_convolution_1_fu_304_conv_to_pool_streams_3_din,
        conv_to_pool_streams_3_full_n => conv_to_pool_streams_3_full_n,
        conv_to_pool_streams_3_write => grp_convolution_1_fu_304_conv_to_pool_streams_3_write,
        pad_img_0_0_address0 => grp_convolution_1_fu_304_pad_img_0_0_address0,
        pad_img_0_0_ce0 => grp_convolution_1_fu_304_pad_img_0_0_ce0,
        pad_img_0_0_q0 => pad_img3_0_0_q0,
        pad_img_0_1_address0 => grp_convolution_1_fu_304_pad_img_0_1_address0,
        pad_img_0_1_ce0 => grp_convolution_1_fu_304_pad_img_0_1_ce0,
        pad_img_0_1_q0 => pad_img3_0_1_q0,
        pad_img_0_2_address0 => grp_convolution_1_fu_304_pad_img_0_2_address0,
        pad_img_0_2_ce0 => grp_convolution_1_fu_304_pad_img_0_2_ce0,
        pad_img_0_2_q0 => pad_img3_0_2_q0,
        pad_img_0_3_address0 => grp_convolution_1_fu_304_pad_img_0_3_address0,
        pad_img_0_3_ce0 => grp_convolution_1_fu_304_pad_img_0_3_ce0,
        pad_img_0_3_q0 => pad_img3_0_3_q0,
        pad_img_0_4_address0 => grp_convolution_1_fu_304_pad_img_0_4_address0,
        pad_img_0_4_ce0 => grp_convolution_1_fu_304_pad_img_0_4_ce0,
        pad_img_0_4_q0 => pad_img3_0_4_q0,
        pad_img_0_5_address0 => grp_convolution_1_fu_304_pad_img_0_5_address0,
        pad_img_0_5_ce0 => grp_convolution_1_fu_304_pad_img_0_5_ce0,
        pad_img_0_5_q0 => pad_img3_0_5_q0,
        pad_img_0_6_address0 => grp_convolution_1_fu_304_pad_img_0_6_address0,
        pad_img_0_6_ce0 => grp_convolution_1_fu_304_pad_img_0_6_ce0,
        pad_img_0_6_q0 => pad_img3_0_6_q0,
        pad_img_1_0_address0 => grp_convolution_1_fu_304_pad_img_1_0_address0,
        pad_img_1_0_ce0 => grp_convolution_1_fu_304_pad_img_1_0_ce0,
        pad_img_1_0_q0 => pad_img3_1_0_q0,
        pad_img_1_1_address0 => grp_convolution_1_fu_304_pad_img_1_1_address0,
        pad_img_1_1_ce0 => grp_convolution_1_fu_304_pad_img_1_1_ce0,
        pad_img_1_1_q0 => pad_img3_1_1_q0,
        pad_img_1_2_address0 => grp_convolution_1_fu_304_pad_img_1_2_address0,
        pad_img_1_2_ce0 => grp_convolution_1_fu_304_pad_img_1_2_ce0,
        pad_img_1_2_q0 => pad_img3_1_2_q0,
        pad_img_1_3_address0 => grp_convolution_1_fu_304_pad_img_1_3_address0,
        pad_img_1_3_ce0 => grp_convolution_1_fu_304_pad_img_1_3_ce0,
        pad_img_1_3_q0 => pad_img3_1_3_q0,
        pad_img_1_4_address0 => grp_convolution_1_fu_304_pad_img_1_4_address0,
        pad_img_1_4_ce0 => grp_convolution_1_fu_304_pad_img_1_4_ce0,
        pad_img_1_4_q0 => pad_img3_1_4_q0,
        pad_img_1_5_address0 => grp_convolution_1_fu_304_pad_img_1_5_address0,
        pad_img_1_5_ce0 => grp_convolution_1_fu_304_pad_img_1_5_ce0,
        pad_img_1_5_q0 => pad_img3_1_5_q0,
        pad_img_1_6_address0 => grp_convolution_1_fu_304_pad_img_1_6_address0,
        pad_img_1_6_ce0 => grp_convolution_1_fu_304_pad_img_1_6_ce0,
        pad_img_1_6_q0 => pad_img3_1_6_q0,
        pad_img_2_0_address0 => grp_convolution_1_fu_304_pad_img_2_0_address0,
        pad_img_2_0_ce0 => grp_convolution_1_fu_304_pad_img_2_0_ce0,
        pad_img_2_0_q0 => pad_img3_2_0_q0,
        pad_img_2_1_address0 => grp_convolution_1_fu_304_pad_img_2_1_address0,
        pad_img_2_1_ce0 => grp_convolution_1_fu_304_pad_img_2_1_ce0,
        pad_img_2_1_q0 => pad_img3_2_1_q0,
        pad_img_2_2_address0 => grp_convolution_1_fu_304_pad_img_2_2_address0,
        pad_img_2_2_ce0 => grp_convolution_1_fu_304_pad_img_2_2_ce0,
        pad_img_2_2_q0 => pad_img3_2_2_q0,
        pad_img_2_3_address0 => grp_convolution_1_fu_304_pad_img_2_3_address0,
        pad_img_2_3_ce0 => grp_convolution_1_fu_304_pad_img_2_3_ce0,
        pad_img_2_3_q0 => pad_img3_2_3_q0,
        pad_img_2_4_address0 => grp_convolution_1_fu_304_pad_img_2_4_address0,
        pad_img_2_4_ce0 => grp_convolution_1_fu_304_pad_img_2_4_ce0,
        pad_img_2_4_q0 => pad_img3_2_4_q0,
        pad_img_2_5_address0 => grp_convolution_1_fu_304_pad_img_2_5_address0,
        pad_img_2_5_ce0 => grp_convolution_1_fu_304_pad_img_2_5_ce0,
        pad_img_2_5_q0 => pad_img3_2_5_q0,
        pad_img_2_6_address0 => grp_convolution_1_fu_304_pad_img_2_6_address0,
        pad_img_2_6_ce0 => grp_convolution_1_fu_304_pad_img_2_6_ce0,
        pad_img_2_6_q0 => pad_img3_2_6_q0,
        pad_img_3_0_address0 => grp_convolution_1_fu_304_pad_img_3_0_address0,
        pad_img_3_0_ce0 => grp_convolution_1_fu_304_pad_img_3_0_ce0,
        pad_img_3_0_q0 => pad_img3_3_0_q0,
        pad_img_3_1_address0 => grp_convolution_1_fu_304_pad_img_3_1_address0,
        pad_img_3_1_ce0 => grp_convolution_1_fu_304_pad_img_3_1_ce0,
        pad_img_3_1_q0 => pad_img3_3_1_q0,
        pad_img_3_2_address0 => grp_convolution_1_fu_304_pad_img_3_2_address0,
        pad_img_3_2_ce0 => grp_convolution_1_fu_304_pad_img_3_2_ce0,
        pad_img_3_2_q0 => pad_img3_3_2_q0,
        pad_img_3_3_address0 => grp_convolution_1_fu_304_pad_img_3_3_address0,
        pad_img_3_3_ce0 => grp_convolution_1_fu_304_pad_img_3_3_ce0,
        pad_img_3_3_q0 => pad_img3_3_3_q0,
        pad_img_3_4_address0 => grp_convolution_1_fu_304_pad_img_3_4_address0,
        pad_img_3_4_ce0 => grp_convolution_1_fu_304_pad_img_3_4_ce0,
        pad_img_3_4_q0 => pad_img3_3_4_q0,
        pad_img_3_5_address0 => grp_convolution_1_fu_304_pad_img_3_5_address0,
        pad_img_3_5_ce0 => grp_convolution_1_fu_304_pad_img_3_5_ce0,
        pad_img_3_5_q0 => pad_img3_3_5_q0,
        pad_img_3_6_address0 => grp_convolution_1_fu_304_pad_img_3_6_address0,
        pad_img_3_6_ce0 => grp_convolution_1_fu_304_pad_img_3_6_ce0,
        pad_img_3_6_q0 => pad_img3_3_6_q0,
        pad_img_4_0_address0 => grp_convolution_1_fu_304_pad_img_4_0_address0,
        pad_img_4_0_ce0 => grp_convolution_1_fu_304_pad_img_4_0_ce0,
        pad_img_4_0_q0 => pad_img3_4_0_q0,
        pad_img_4_1_address0 => grp_convolution_1_fu_304_pad_img_4_1_address0,
        pad_img_4_1_ce0 => grp_convolution_1_fu_304_pad_img_4_1_ce0,
        pad_img_4_1_q0 => pad_img3_4_1_q0,
        pad_img_4_2_address0 => grp_convolution_1_fu_304_pad_img_4_2_address0,
        pad_img_4_2_ce0 => grp_convolution_1_fu_304_pad_img_4_2_ce0,
        pad_img_4_2_q0 => pad_img3_4_2_q0,
        pad_img_4_3_address0 => grp_convolution_1_fu_304_pad_img_4_3_address0,
        pad_img_4_3_ce0 => grp_convolution_1_fu_304_pad_img_4_3_ce0,
        pad_img_4_3_q0 => pad_img3_4_3_q0,
        pad_img_4_4_address0 => grp_convolution_1_fu_304_pad_img_4_4_address0,
        pad_img_4_4_ce0 => grp_convolution_1_fu_304_pad_img_4_4_ce0,
        pad_img_4_4_q0 => pad_img3_4_4_q0,
        pad_img_4_5_address0 => grp_convolution_1_fu_304_pad_img_4_5_address0,
        pad_img_4_5_ce0 => grp_convolution_1_fu_304_pad_img_4_5_ce0,
        pad_img_4_5_q0 => pad_img3_4_5_q0,
        pad_img_4_6_address0 => grp_convolution_1_fu_304_pad_img_4_6_address0,
        pad_img_4_6_ce0 => grp_convolution_1_fu_304_pad_img_4_6_ce0,
        pad_img_4_6_q0 => pad_img3_4_6_q0,
        pad_img_5_0_address0 => grp_convolution_1_fu_304_pad_img_5_0_address0,
        pad_img_5_0_ce0 => grp_convolution_1_fu_304_pad_img_5_0_ce0,
        pad_img_5_0_q0 => pad_img3_5_0_q0,
        pad_img_5_1_address0 => grp_convolution_1_fu_304_pad_img_5_1_address0,
        pad_img_5_1_ce0 => grp_convolution_1_fu_304_pad_img_5_1_ce0,
        pad_img_5_1_q0 => pad_img3_5_1_q0,
        pad_img_5_2_address0 => grp_convolution_1_fu_304_pad_img_5_2_address0,
        pad_img_5_2_ce0 => grp_convolution_1_fu_304_pad_img_5_2_ce0,
        pad_img_5_2_q0 => pad_img3_5_2_q0,
        pad_img_5_3_address0 => grp_convolution_1_fu_304_pad_img_5_3_address0,
        pad_img_5_3_ce0 => grp_convolution_1_fu_304_pad_img_5_3_ce0,
        pad_img_5_3_q0 => pad_img3_5_3_q0,
        pad_img_5_4_address0 => grp_convolution_1_fu_304_pad_img_5_4_address0,
        pad_img_5_4_ce0 => grp_convolution_1_fu_304_pad_img_5_4_ce0,
        pad_img_5_4_q0 => pad_img3_5_4_q0,
        pad_img_5_5_address0 => grp_convolution_1_fu_304_pad_img_5_5_address0,
        pad_img_5_5_ce0 => grp_convolution_1_fu_304_pad_img_5_5_ce0,
        pad_img_5_5_q0 => pad_img3_5_5_q0,
        pad_img_5_6_address0 => grp_convolution_1_fu_304_pad_img_5_6_address0,
        pad_img_5_6_ce0 => grp_convolution_1_fu_304_pad_img_5_6_ce0,
        pad_img_5_6_q0 => pad_img3_5_6_q0,
        pad_img_6_0_address0 => grp_convolution_1_fu_304_pad_img_6_0_address0,
        pad_img_6_0_ce0 => grp_convolution_1_fu_304_pad_img_6_0_ce0,
        pad_img_6_0_q0 => pad_img3_6_0_q0,
        pad_img_6_1_address0 => grp_convolution_1_fu_304_pad_img_6_1_address0,
        pad_img_6_1_ce0 => grp_convolution_1_fu_304_pad_img_6_1_ce0,
        pad_img_6_1_q0 => pad_img3_6_1_q0,
        pad_img_6_2_address0 => grp_convolution_1_fu_304_pad_img_6_2_address0,
        pad_img_6_2_ce0 => grp_convolution_1_fu_304_pad_img_6_2_ce0,
        pad_img_6_2_q0 => pad_img3_6_2_q0,
        pad_img_6_3_address0 => grp_convolution_1_fu_304_pad_img_6_3_address0,
        pad_img_6_3_ce0 => grp_convolution_1_fu_304_pad_img_6_3_ce0,
        pad_img_6_3_q0 => pad_img3_6_3_q0,
        pad_img_6_4_address0 => grp_convolution_1_fu_304_pad_img_6_4_address0,
        pad_img_6_4_ce0 => grp_convolution_1_fu_304_pad_img_6_4_ce0,
        pad_img_6_4_q0 => pad_img3_6_4_q0,
        pad_img_6_5_address0 => grp_convolution_1_fu_304_pad_img_6_5_address0,
        pad_img_6_5_ce0 => grp_convolution_1_fu_304_pad_img_6_5_ce0,
        pad_img_6_5_q0 => pad_img3_6_5_q0,
        pad_img_6_6_address0 => grp_convolution_1_fu_304_pad_img_6_6_address0,
        pad_img_6_6_ce0 => grp_convolution_1_fu_304_pad_img_6_6_ce0,
        pad_img_6_6_q0 => pad_img3_6_6_q0,
        grp_fu_684_p_din0 => grp_convolution_1_fu_304_grp_fu_684_p_din0,
        grp_fu_684_p_din1 => grp_convolution_1_fu_304_grp_fu_684_p_din1,
        grp_fu_684_p_opcode => grp_convolution_1_fu_304_grp_fu_684_p_opcode,
        grp_fu_684_p_dout0 => grp_fu_684_p2,
        grp_fu_684_p_ce => grp_convolution_1_fu_304_grp_fu_684_p_ce);

    grp_max_pooling_fu_407 : component cnn_max_pooling
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pooling_fu_407_ap_start,
        ap_done => grp_max_pooling_fu_407_ap_done,
        ap_idle => grp_max_pooling_fu_407_ap_idle,
        ap_ready => grp_max_pooling_fu_407_ap_ready,
        conv_to_pool_streams_0_dout => grp_max_pooling_fu_407_conv_to_pool_streams_0_dout,
        conv_to_pool_streams_0_empty_n => grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n,
        conv_to_pool_streams_0_read => grp_max_pooling_fu_407_conv_to_pool_streams_0_read,
        pool_to_flat_streams_0_din => grp_max_pooling_fu_407_pool_to_flat_streams_0_din,
        pool_to_flat_streams_0_full_n => grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n,
        pool_to_flat_streams_0_write => grp_max_pooling_fu_407_pool_to_flat_streams_0_write);

    grp_max_pooling_fu_413 : component cnn_max_pooling
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pooling_fu_413_ap_start,
        ap_done => grp_max_pooling_fu_413_ap_done,
        ap_idle => grp_max_pooling_fu_413_ap_idle,
        ap_ready => grp_max_pooling_fu_413_ap_ready,
        conv_to_pool_streams_0_dout => grp_max_pooling_fu_413_conv_to_pool_streams_0_dout,
        conv_to_pool_streams_0_empty_n => grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n,
        conv_to_pool_streams_0_read => grp_max_pooling_fu_413_conv_to_pool_streams_0_read,
        pool_to_flat_streams_0_din => grp_max_pooling_fu_413_pool_to_flat_streams_0_din,
        pool_to_flat_streams_0_full_n => grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n,
        pool_to_flat_streams_0_write => grp_max_pooling_fu_413_pool_to_flat_streams_0_write);

    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419 : component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start,
        ap_done => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_ready,
        pool_to_flat_streams_dout => pool_to_flat_streams_dout,
        pool_to_flat_streams_empty_n => pool_to_flat_streams_empty_n,
        pool_to_flat_streams_read => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_pool_to_flat_streams_read,
        flat_to_dense_streams_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_din,
        flat_to_dense_streams_full_n => flat_to_dense_streams_full_n,
        flat_to_dense_streams_write => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_write);

    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425 : component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start,
        ap_done => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_ready,
        pool_to_flat_streams_1_dout => pool_to_flat_streams_1_dout,
        pool_to_flat_streams_1_empty_n => pool_to_flat_streams_1_empty_n,
        pool_to_flat_streams_1_read => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_pool_to_flat_streams_1_read,
        flat_to_dense_streams_1_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_din,
        flat_to_dense_streams_1_full_n => flat_to_dense_streams_1_full_n,
        flat_to_dense_streams_1_write => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_write);

    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431 : component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start,
        ap_done => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_ready,
        pool_to_flat_streams_2_dout => pool_to_flat_streams_2_dout,
        pool_to_flat_streams_2_empty_n => pool_to_flat_streams_2_empty_n,
        pool_to_flat_streams_2_read => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_pool_to_flat_streams_2_read,
        flat_to_dense_streams_2_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_din,
        flat_to_dense_streams_2_full_n => flat_to_dense_streams_2_full_n,
        flat_to_dense_streams_2_write => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_write);

    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437 : component cnn_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start,
        ap_done => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_ready,
        pool_to_flat_streams_3_dout => pool_to_flat_streams_3_dout,
        pool_to_flat_streams_3_empty_n => pool_to_flat_streams_3_empty_n,
        pool_to_flat_streams_3_read => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_pool_to_flat_streams_3_read,
        flat_to_dense_streams_3_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_din,
        flat_to_dense_streams_3_full_n => flat_to_dense_streams_3_full_n,
        flat_to_dense_streams_3_write => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_write);

    grp_dense_fu_443 : component cnn_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_fu_443_ap_start,
        ap_done => grp_dense_fu_443_ap_done,
        ap_idle => grp_dense_fu_443_ap_idle,
        ap_ready => grp_dense_fu_443_ap_ready,
        flat_to_dense_streams_0_dout => flat_to_dense_streams_dout,
        flat_to_dense_streams_0_empty_n => flat_to_dense_streams_empty_n,
        flat_to_dense_streams_0_read => grp_dense_fu_443_flat_to_dense_streams_0_read,
        filter => ap_const_lv2_0,
        dense_to_softmax_streams_0_din => grp_dense_fu_443_dense_to_softmax_streams_0_din,
        dense_to_softmax_streams_0_full_n => dense_to_softmax_streams_full_n,
        dense_to_softmax_streams_0_write => grp_dense_fu_443_dense_to_softmax_streams_0_write);

    grp_dense_fu_471 : component cnn_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_fu_471_ap_start,
        ap_done => grp_dense_fu_471_ap_done,
        ap_idle => grp_dense_fu_471_ap_idle,
        ap_ready => grp_dense_fu_471_ap_ready,
        flat_to_dense_streams_0_dout => flat_to_dense_streams_1_dout,
        flat_to_dense_streams_0_empty_n => flat_to_dense_streams_1_empty_n,
        flat_to_dense_streams_0_read => grp_dense_fu_471_flat_to_dense_streams_0_read,
        filter => ap_const_lv2_1,
        dense_to_softmax_streams_0_din => grp_dense_fu_471_dense_to_softmax_streams_0_din,
        dense_to_softmax_streams_0_full_n => dense_to_softmax_streams_1_full_n,
        dense_to_softmax_streams_0_write => grp_dense_fu_471_dense_to_softmax_streams_0_write);

    grp_dense_fu_499 : component cnn_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_fu_499_ap_start,
        ap_done => grp_dense_fu_499_ap_done,
        ap_idle => grp_dense_fu_499_ap_idle,
        ap_ready => grp_dense_fu_499_ap_ready,
        flat_to_dense_streams_0_dout => flat_to_dense_streams_2_dout,
        flat_to_dense_streams_0_empty_n => flat_to_dense_streams_2_empty_n,
        flat_to_dense_streams_0_read => grp_dense_fu_499_flat_to_dense_streams_0_read,
        filter => ap_const_lv2_2,
        dense_to_softmax_streams_0_din => grp_dense_fu_499_dense_to_softmax_streams_0_din,
        dense_to_softmax_streams_0_full_n => dense_to_softmax_streams_2_full_n,
        dense_to_softmax_streams_0_write => grp_dense_fu_499_dense_to_softmax_streams_0_write);

    grp_dense_fu_527 : component cnn_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_fu_527_ap_start,
        ap_done => grp_dense_fu_527_ap_done,
        ap_idle => grp_dense_fu_527_ap_idle,
        ap_ready => grp_dense_fu_527_ap_ready,
        flat_to_dense_streams_0_dout => flat_to_dense_streams_3_dout,
        flat_to_dense_streams_0_empty_n => flat_to_dense_streams_3_empty_n,
        flat_to_dense_streams_0_read => grp_dense_fu_527_flat_to_dense_streams_0_read,
        filter => ap_const_lv2_3,
        dense_to_softmax_streams_0_din => grp_dense_fu_527_dense_to_softmax_streams_0_din,
        dense_to_softmax_streams_0_full_n => dense_to_softmax_streams_3_full_n,
        dense_to_softmax_streams_0_write => grp_dense_fu_527_dense_to_softmax_streams_0_write);

    grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555 : component cnn_dataflow_section_Pipeline_dense_soft_max_for_dense_size
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start,
        ap_done => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_ready,
        dense_to_softmax_streams_dout => dense_to_softmax_streams_dout,
        dense_to_softmax_streams_empty_n => dense_to_softmax_streams_empty_n,
        dense_to_softmax_streams_read => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_read,
        dense_to_softmax_streams_1_dout => dense_to_softmax_streams_1_dout,
        dense_to_softmax_streams_1_empty_n => dense_to_softmax_streams_1_empty_n,
        dense_to_softmax_streams_1_read => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_1_read,
        dense_to_softmax_streams_2_dout => dense_to_softmax_streams_2_dout,
        dense_to_softmax_streams_2_empty_n => dense_to_softmax_streams_2_empty_n,
        dense_to_softmax_streams_2_read => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_2_read,
        dense_to_softmax_streams_3_dout => dense_to_softmax_streams_3_dout,
        dense_to_softmax_streams_3_empty_n => dense_to_softmax_streams_3_empty_n,
        dense_to_softmax_streams_3_read => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_3_read,
        prediction_address0 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_address0,
        prediction_ce0 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_ce0,
        prediction_we0 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_we0,
        prediction_d0 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_d0,
        exp_sum_out => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_exp_sum_out,
        exp_sum_out_ap_vld => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_exp_sum_out_ap_vld,
        grp_fu_684_p_din0 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din0,
        grp_fu_684_p_din1 => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din1,
        grp_fu_684_p_opcode => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_opcode,
        grp_fu_684_p_dout0 => grp_fu_684_p2,
        grp_fu_684_p_ce => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_ce);

    grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568 : component cnn_dataflow_section_Pipeline_dense_soft_max_for_digits
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start,
        ap_done => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done,
        ap_idle => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_idle,
        ap_ready => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_ready,
        prediction_address0 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address0,
        prediction_ce0 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce0,
        prediction_we0 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_we0,
        prediction_d0 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_d0,
        prediction_address1 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address1,
        prediction_ce1 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce1,
        prediction_q1 => prediction_q1,
        exp_sum_reload => grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_exp_sum_out,
        grp_fu_688_p_din0 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din0,
        grp_fu_688_p_din1 => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din1,
        grp_fu_688_p_dout0 => grp_fu_409_p_dout0,
        grp_fu_688_p_ce => grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_ce);

    fadd_32ns_32ns_32_5_full_dsp_1_U448 : component cnn_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_684_p0,
        din1 => grp_fu_684_p1,
        ce => grp_fu_684_ce,
        dout => grp_fu_684_p2);

    conv_to_pool_streams_fifo_U : component cnn_fifo_w32_d784_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_convolution_fu_284_conv_to_pool_streams_0_din,
        if_full_n => conv_to_pool_streams_full_n,
        if_write => conv_to_pool_streams_write,
        if_dout => conv_to_pool_streams_dout,
        if_empty_n => conv_to_pool_streams_empty_n,
        if_read => conv_to_pool_streams_read);

    conv_to_pool_streams_1_fifo_U : component cnn_fifo_w32_d784_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_convolution_fu_284_conv_to_pool_streams_0_din,
        if_full_n => conv_to_pool_streams_1_full_n,
        if_write => conv_to_pool_streams_1_write,
        if_dout => conv_to_pool_streams_1_dout,
        if_empty_n => conv_to_pool_streams_1_empty_n,
        if_read => conv_to_pool_streams_1_read);

    conv_to_pool_streams_2_fifo_U : component cnn_fifo_w32_d784_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_convolution_fu_295_conv_to_pool_streams_0_din,
        if_full_n => conv_to_pool_streams_2_full_n,
        if_write => conv_to_pool_streams_2_write,
        if_dout => conv_to_pool_streams_2_dout,
        if_empty_n => conv_to_pool_streams_2_empty_n,
        if_read => conv_to_pool_streams_2_read);

    conv_to_pool_streams_3_fifo_U : component cnn_fifo_w32_d784_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_convolution_1_fu_304_conv_to_pool_streams_3_din,
        if_full_n => conv_to_pool_streams_3_full_n,
        if_write => conv_to_pool_streams_3_write,
        if_dout => conv_to_pool_streams_3_dout,
        if_empty_n => conv_to_pool_streams_3_empty_n,
        if_read => conv_to_pool_streams_3_read);

    pool_to_flat_streams_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_max_pooling_fu_407_pool_to_flat_streams_0_din,
        if_full_n => pool_to_flat_streams_full_n,
        if_write => pool_to_flat_streams_write,
        if_dout => pool_to_flat_streams_dout,
        if_empty_n => pool_to_flat_streams_empty_n,
        if_read => pool_to_flat_streams_read);

    pool_to_flat_streams_1_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_max_pooling_fu_407_pool_to_flat_streams_0_din,
        if_full_n => pool_to_flat_streams_1_full_n,
        if_write => pool_to_flat_streams_1_write,
        if_dout => pool_to_flat_streams_1_dout,
        if_empty_n => pool_to_flat_streams_1_empty_n,
        if_read => pool_to_flat_streams_1_read);

    pool_to_flat_streams_2_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_max_pooling_fu_413_pool_to_flat_streams_0_din,
        if_full_n => pool_to_flat_streams_2_full_n,
        if_write => pool_to_flat_streams_2_write,
        if_dout => pool_to_flat_streams_2_dout,
        if_empty_n => pool_to_flat_streams_2_empty_n,
        if_read => pool_to_flat_streams_2_read);

    pool_to_flat_streams_3_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_max_pooling_fu_413_pool_to_flat_streams_0_din,
        if_full_n => pool_to_flat_streams_3_full_n,
        if_write => pool_to_flat_streams_3_write,
        if_dout => pool_to_flat_streams_3_dout,
        if_empty_n => pool_to_flat_streams_3_empty_n,
        if_read => pool_to_flat_streams_3_read);

    flat_to_dense_streams_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_din,
        if_full_n => flat_to_dense_streams_full_n,
        if_write => flat_to_dense_streams_write,
        if_dout => flat_to_dense_streams_dout,
        if_empty_n => flat_to_dense_streams_empty_n,
        if_read => flat_to_dense_streams_read);

    flat_to_dense_streams_1_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_din,
        if_full_n => flat_to_dense_streams_1_full_n,
        if_write => flat_to_dense_streams_1_write,
        if_dout => flat_to_dense_streams_1_dout,
        if_empty_n => flat_to_dense_streams_1_empty_n,
        if_read => flat_to_dense_streams_1_read);

    flat_to_dense_streams_2_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_din,
        if_full_n => flat_to_dense_streams_2_full_n,
        if_write => flat_to_dense_streams_2_write,
        if_dout => flat_to_dense_streams_2_dout,
        if_empty_n => flat_to_dense_streams_2_empty_n,
        if_read => flat_to_dense_streams_2_read);

    flat_to_dense_streams_3_fifo_U : component cnn_fifo_w32_d196_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_din,
        if_full_n => flat_to_dense_streams_3_full_n,
        if_write => flat_to_dense_streams_3_write,
        if_dout => flat_to_dense_streams_3_dout,
        if_empty_n => flat_to_dense_streams_3_empty_n,
        if_read => flat_to_dense_streams_3_read);

    dense_to_softmax_streams_fifo_U : component cnn_fifo_w32_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dense_fu_443_dense_to_softmax_streams_0_din,
        if_full_n => dense_to_softmax_streams_full_n,
        if_write => dense_to_softmax_streams_write,
        if_dout => dense_to_softmax_streams_dout,
        if_empty_n => dense_to_softmax_streams_empty_n,
        if_read => dense_to_softmax_streams_read);

    dense_to_softmax_streams_1_fifo_U : component cnn_fifo_w32_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dense_fu_471_dense_to_softmax_streams_0_din,
        if_full_n => dense_to_softmax_streams_1_full_n,
        if_write => dense_to_softmax_streams_1_write,
        if_dout => dense_to_softmax_streams_1_dout,
        if_empty_n => dense_to_softmax_streams_1_empty_n,
        if_read => dense_to_softmax_streams_1_read);

    dense_to_softmax_streams_2_fifo_U : component cnn_fifo_w32_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dense_fu_499_dense_to_softmax_streams_0_din,
        if_full_n => dense_to_softmax_streams_2_full_n,
        if_write => dense_to_softmax_streams_2_write,
        if_dout => dense_to_softmax_streams_2_dout,
        if_empty_n => dense_to_softmax_streams_2_empty_n,
        if_read => dense_to_softmax_streams_2_read);

    dense_to_softmax_streams_3_fifo_U : component cnn_fifo_w32_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_dense_fu_527_dense_to_softmax_streams_0_din,
        if_full_n => dense_to_softmax_streams_3_full_n,
        if_write => dense_to_softmax_streams_3_write,
        if_dout => dense_to_softmax_streams_3_dout,
        if_empty_n => dense_to_softmax_streams_3_empty_n,
        if_read => dense_to_softmax_streams_3_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_convolution_1_fu_304_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_1_fu_304_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_convolution_1_fu_304_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_1_fu_304_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_1_fu_304_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_convolution_fu_284_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_fu_284_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_convolution_fu_284_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_fu_284_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_fu_284_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_convolution_fu_295_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_fu_295_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_convolution_fu_295_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_fu_295_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_fu_295_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_ready = ap_const_logic_1)) then 
                    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_fu_443_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_fu_443_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_dense_fu_443_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_fu_443_ap_ready = ap_const_logic_1)) then 
                    grp_dense_fu_443_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_fu_471_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_fu_471_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_dense_fu_471_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_fu_471_ap_ready = ap_const_logic_1)) then 
                    grp_dense_fu_471_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_fu_499_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_fu_499_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_dense_fu_499_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_fu_499_ap_ready = ap_const_logic_1)) then 
                    grp_dense_fu_499_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_fu_527_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_fu_527_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_dense_fu_527_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_fu_527_ap_ready = ap_const_logic_1)) then 
                    grp_dense_fu_527_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pooling_fu_407_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pooling_fu_407_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_max_pooling_fu_407_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pooling_fu_407_ap_ready = ap_const_logic_1)) then 
                    grp_max_pooling_fu_407_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pooling_fu_413_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pooling_fu_413_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_max_pooling_fu_413_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pooling_fu_413_ap_ready = ap_const_logic_1)) then 
                    grp_max_pooling_fu_413_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done, grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done, grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done, grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done, grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done, ap_block_state6_on_subcall_done, ap_block_state19_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (ap_const_boolean_0 = ap_block_state19_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(ap_block_state19_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state19_on_subcall_done)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state6_on_subcall_done)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done)
    begin
        if ((grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state19_on_subcall_done_assign_proc : process(grp_dense_fu_443_ap_done, grp_dense_fu_471_ap_done, grp_dense_fu_499_ap_done, grp_dense_fu_527_ap_done)
    begin
                ap_block_state19_on_subcall_done <= ((grp_dense_fu_527_ap_done = ap_const_logic_0) or (grp_dense_fu_499_ap_done = ap_const_logic_0) or (grp_dense_fu_471_ap_done = ap_const_logic_0) or (grp_dense_fu_443_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_convolution_fu_284_ap_done, grp_convolution_1_fu_304_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_convolution_1_fu_304_ap_done = ap_const_logic_0) or (grp_convolution_fu_284_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_convolution_fu_284_ap_done, grp_convolution_fu_295_ap_done, grp_max_pooling_fu_407_ap_done, grp_max_pooling_fu_413_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_max_pooling_fu_413_ap_done = ap_const_logic_0) or (grp_max_pooling_fu_407_ap_done = ap_const_logic_0) or (grp_convolution_fu_295_ap_done = ap_const_logic_0) or (grp_convolution_fu_284_ap_done = ap_const_logic_0));
    end process;


    ap_block_state6_on_subcall_done_assign_proc : process(grp_max_pooling_fu_407_ap_done, grp_max_pooling_fu_413_ap_done)
    begin
                ap_block_state6_on_subcall_done <= ((grp_max_pooling_fu_413_ap_done = ap_const_logic_0) or (grp_max_pooling_fu_407_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done, ap_CS_fsm_state23)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done, ap_CS_fsm_state23)
    begin
        if (((grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_1_read_assign_proc : process(grp_max_pooling_fu_407_conv_to_pool_streams_0_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_to_pool_streams_1_read <= grp_max_pooling_fu_407_conv_to_pool_streams_0_read;
        else 
            conv_to_pool_streams_1_read <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_1_write_assign_proc : process(grp_convolution_fu_284_conv_to_pool_streams_0_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_to_pool_streams_1_write <= grp_convolution_fu_284_conv_to_pool_streams_0_write;
        else 
            conv_to_pool_streams_1_write <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_2_read_assign_proc : process(grp_max_pooling_fu_413_conv_to_pool_streams_0_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_to_pool_streams_2_read <= grp_max_pooling_fu_413_conv_to_pool_streams_0_read;
        else 
            conv_to_pool_streams_2_read <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_2_write_assign_proc : process(grp_convolution_fu_295_conv_to_pool_streams_0_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_to_pool_streams_2_write <= grp_convolution_fu_295_conv_to_pool_streams_0_write;
        else 
            conv_to_pool_streams_2_write <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_3_read_assign_proc : process(grp_max_pooling_fu_413_conv_to_pool_streams_0_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_to_pool_streams_3_read <= grp_max_pooling_fu_413_conv_to_pool_streams_0_read;
        else 
            conv_to_pool_streams_3_read <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_3_write_assign_proc : process(grp_convolution_1_fu_304_conv_to_pool_streams_3_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_to_pool_streams_3_write <= grp_convolution_1_fu_304_conv_to_pool_streams_3_write;
        else 
            conv_to_pool_streams_3_write <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_read_assign_proc : process(grp_max_pooling_fu_407_conv_to_pool_streams_0_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_to_pool_streams_read <= grp_max_pooling_fu_407_conv_to_pool_streams_0_read;
        else 
            conv_to_pool_streams_read <= ap_const_logic_0;
        end if; 
    end process;


    conv_to_pool_streams_write_assign_proc : process(grp_convolution_fu_284_conv_to_pool_streams_0_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_to_pool_streams_write <= grp_convolution_fu_284_conv_to_pool_streams_0_write;
        else 
            conv_to_pool_streams_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_1_read_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_1_read, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_to_softmax_streams_1_read <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_1_read;
        else 
            dense_to_softmax_streams_1_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_1_write_assign_proc : process(grp_dense_fu_471_dense_to_softmax_streams_0_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_to_softmax_streams_1_write <= grp_dense_fu_471_dense_to_softmax_streams_0_write;
        else 
            dense_to_softmax_streams_1_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_2_read_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_2_read, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_to_softmax_streams_2_read <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_2_read;
        else 
            dense_to_softmax_streams_2_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_2_write_assign_proc : process(grp_dense_fu_499_dense_to_softmax_streams_0_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_to_softmax_streams_2_write <= grp_dense_fu_499_dense_to_softmax_streams_0_write;
        else 
            dense_to_softmax_streams_2_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_3_read_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_3_read, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_to_softmax_streams_3_read <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_3_read;
        else 
            dense_to_softmax_streams_3_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_3_write_assign_proc : process(grp_dense_fu_527_dense_to_softmax_streams_0_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_to_softmax_streams_3_write <= grp_dense_fu_527_dense_to_softmax_streams_0_write;
        else 
            dense_to_softmax_streams_3_write <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_read_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_read, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_to_softmax_streams_read <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_dense_to_softmax_streams_read;
        else 
            dense_to_softmax_streams_read <= ap_const_logic_0;
        end if; 
    end process;


    dense_to_softmax_streams_write_assign_proc : process(grp_dense_fu_443_dense_to_softmax_streams_0_write, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_to_softmax_streams_write <= grp_dense_fu_443_dense_to_softmax_streams_0_write;
        else 
            dense_to_softmax_streams_write <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_1_read_assign_proc : process(grp_dense_fu_471_flat_to_dense_streams_0_read, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            flat_to_dense_streams_1_read <= grp_dense_fu_471_flat_to_dense_streams_0_read;
        else 
            flat_to_dense_streams_1_read <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_1_write_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_write, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            flat_to_dense_streams_1_write <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_flat_to_dense_streams_1_write;
        else 
            flat_to_dense_streams_1_write <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_2_read_assign_proc : process(grp_dense_fu_499_flat_to_dense_streams_0_read, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            flat_to_dense_streams_2_read <= grp_dense_fu_499_flat_to_dense_streams_0_read;
        else 
            flat_to_dense_streams_2_read <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_2_write_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_write, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            flat_to_dense_streams_2_write <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_flat_to_dense_streams_2_write;
        else 
            flat_to_dense_streams_2_write <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_3_read_assign_proc : process(grp_dense_fu_527_flat_to_dense_streams_0_read, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            flat_to_dense_streams_3_read <= grp_dense_fu_527_flat_to_dense_streams_0_read;
        else 
            flat_to_dense_streams_3_read <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_3_write_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            flat_to_dense_streams_3_write <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_flat_to_dense_streams_3_write;
        else 
            flat_to_dense_streams_3_write <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_read_assign_proc : process(grp_dense_fu_443_flat_to_dense_streams_0_read, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            flat_to_dense_streams_read <= grp_dense_fu_443_flat_to_dense_streams_0_read;
        else 
            flat_to_dense_streams_read <= ap_const_logic_0;
        end if; 
    end process;


    flat_to_dense_streams_write_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            flat_to_dense_streams_write <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_flat_to_dense_streams_write;
        else 
            flat_to_dense_streams_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_convolution_1_fu_304_ap_start <= grp_convolution_1_fu_304_ap_start_reg;
    grp_convolution_fu_284_ap_start <= grp_convolution_fu_284_ap_start_reg;

    grp_convolution_fu_284_conv_to_pool_streams_0_full_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, conv_to_pool_streams_full_n, conv_to_pool_streams_1_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_convolution_fu_284_conv_to_pool_streams_0_full_n <= conv_to_pool_streams_1_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_convolution_fu_284_conv_to_pool_streams_0_full_n <= conv_to_pool_streams_full_n;
        else 
            grp_convolution_fu_284_conv_to_pool_streams_0_full_n <= conv_to_pool_streams_1_full_n;
        end if; 
    end process;


    grp_convolution_fu_284_filter_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_convolution_fu_284_filter <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_convolution_fu_284_filter <= ap_const_lv2_0;
        else 
            grp_convolution_fu_284_filter <= "XX";
        end if; 
    end process;


    grp_convolution_fu_284_pad_img_q0_assign_proc : process(pad_img0_q0, pad_img1_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_convolution_fu_284_pad_img_q0 <= pad_img1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_convolution_fu_284_pad_img_q0 <= pad_img0_q0;
        else 
            grp_convolution_fu_284_pad_img_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_convolution_fu_284_pad_img_q1_assign_proc : process(pad_img0_q1, pad_img1_q1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_convolution_fu_284_pad_img_q1 <= pad_img1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_convolution_fu_284_pad_img_q1 <= pad_img0_q1;
        else 
            grp_convolution_fu_284_pad_img_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_convolution_fu_295_ap_start <= grp_convolution_fu_295_ap_start_reg;
    grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_ap_start_reg;
    grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_ap_start_reg;
    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_ap_start_reg;
    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_ap_start_reg;
    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_ap_start_reg;
    grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_ap_start_reg;
    grp_dense_fu_443_ap_start <= grp_dense_fu_443_ap_start_reg;
    grp_dense_fu_471_ap_start <= grp_dense_fu_471_ap_start_reg;
    grp_dense_fu_499_ap_start <= grp_dense_fu_499_ap_start_reg;
    grp_dense_fu_527_ap_start <= grp_dense_fu_527_ap_start_reg;
    grp_fu_409_p_ce <= grp_fu_688_ce;
    grp_fu_409_p_din0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din0;
    grp_fu_409_p_din1 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_din1;

    grp_fu_684_ce_assign_proc : process(grp_convolution_1_fu_304_grp_fu_684_p_ce, grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_684_ce <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_684_ce <= grp_convolution_1_fu_304_grp_fu_684_p_ce;
        else 
            grp_fu_684_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_684_p0_assign_proc : process(grp_convolution_1_fu_304_grp_fu_684_p_din0, grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_684_p0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_684_p0 <= grp_convolution_1_fu_304_grp_fu_684_p_din0;
        else 
            grp_fu_684_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_684_p1_assign_proc : process(grp_convolution_1_fu_304_grp_fu_684_p_din1, grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_684_p1 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_grp_fu_684_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_684_p1 <= grp_convolution_1_fu_304_grp_fu_684_p_din1;
        else 
            grp_fu_684_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_688_ce_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_ce, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_688_ce <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_grp_fu_688_p_ce;
        else 
            grp_fu_688_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_max_pooling_fu_407_ap_start <= grp_max_pooling_fu_407_ap_start_reg;

    grp_max_pooling_fu_407_conv_to_pool_streams_0_dout_assign_proc : process(ap_CS_fsm_state4, conv_to_pool_streams_dout, conv_to_pool_streams_1_dout, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_dout <= conv_to_pool_streams_1_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_dout <= conv_to_pool_streams_dout;
        else 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_dout <= conv_to_pool_streams_1_dout;
        end if; 
    end process;


    grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n_assign_proc : process(ap_CS_fsm_state4, conv_to_pool_streams_empty_n, conv_to_pool_streams_1_empty_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_1_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_empty_n;
        else 
            grp_max_pooling_fu_407_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_1_empty_n;
        end if; 
    end process;


    grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, pool_to_flat_streams_full_n, pool_to_flat_streams_1_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_1_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_full_n;
        else 
            grp_max_pooling_fu_407_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_1_full_n;
        end if; 
    end process;

    grp_max_pooling_fu_413_ap_start <= grp_max_pooling_fu_413_ap_start_reg;

    grp_max_pooling_fu_413_conv_to_pool_streams_0_dout_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, conv_to_pool_streams_3_dout, conv_to_pool_streams_2_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_dout <= conv_to_pool_streams_2_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_dout <= conv_to_pool_streams_3_dout;
        else 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_dout <= conv_to_pool_streams_2_dout;
        end if; 
    end process;


    grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, conv_to_pool_streams_3_empty_n, conv_to_pool_streams_2_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_2_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_3_empty_n;
        else 
            grp_max_pooling_fu_413_conv_to_pool_streams_0_empty_n <= conv_to_pool_streams_2_empty_n;
        end if; 
    end process;


    grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, pool_to_flat_streams_3_full_n, pool_to_flat_streams_2_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_2_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_3_full_n;
        else 
            grp_max_pooling_fu_413_pool_to_flat_streams_0_full_n <= pool_to_flat_streams_2_full_n;
        end if; 
    end process;

    pad_img0_address0 <= grp_convolution_fu_284_pad_img_address0;
    pad_img0_address1 <= grp_convolution_fu_284_pad_img_address1;

    pad_img0_ce0_assign_proc : process(grp_convolution_fu_284_pad_img_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pad_img0_ce0 <= grp_convolution_fu_284_pad_img_ce0;
        else 
            pad_img0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pad_img0_ce1_assign_proc : process(grp_convolution_fu_284_pad_img_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pad_img0_ce1 <= grp_convolution_fu_284_pad_img_ce1;
        else 
            pad_img0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img1_address0 <= grp_convolution_fu_284_pad_img_address0;
    pad_img1_address1 <= grp_convolution_fu_284_pad_img_address1;

    pad_img1_ce0_assign_proc : process(grp_convolution_fu_284_pad_img_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pad_img1_ce0 <= grp_convolution_fu_284_pad_img_ce0;
        else 
            pad_img1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pad_img1_ce1_assign_proc : process(grp_convolution_fu_284_pad_img_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pad_img1_ce1 <= grp_convolution_fu_284_pad_img_ce1;
        else 
            pad_img1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    pad_img2_address0 <= grp_convolution_fu_295_pad_img_address0;
    pad_img2_address1 <= grp_convolution_fu_295_pad_img_address1;
    pad_img2_ce0 <= grp_convolution_fu_295_pad_img_ce0;
    pad_img2_ce1 <= grp_convolution_fu_295_pad_img_ce1;
    pad_img3_0_0_address0 <= grp_convolution_1_fu_304_pad_img_0_0_address0;
    pad_img3_0_0_ce0 <= grp_convolution_1_fu_304_pad_img_0_0_ce0;
    pad_img3_0_1_address0 <= grp_convolution_1_fu_304_pad_img_0_1_address0;
    pad_img3_0_1_ce0 <= grp_convolution_1_fu_304_pad_img_0_1_ce0;
    pad_img3_0_2_address0 <= grp_convolution_1_fu_304_pad_img_0_2_address0;
    pad_img3_0_2_ce0 <= grp_convolution_1_fu_304_pad_img_0_2_ce0;
    pad_img3_0_3_address0 <= grp_convolution_1_fu_304_pad_img_0_3_address0;
    pad_img3_0_3_ce0 <= grp_convolution_1_fu_304_pad_img_0_3_ce0;
    pad_img3_0_4_address0 <= grp_convolution_1_fu_304_pad_img_0_4_address0;
    pad_img3_0_4_ce0 <= grp_convolution_1_fu_304_pad_img_0_4_ce0;
    pad_img3_0_5_address0 <= grp_convolution_1_fu_304_pad_img_0_5_address0;
    pad_img3_0_5_ce0 <= grp_convolution_1_fu_304_pad_img_0_5_ce0;
    pad_img3_0_6_address0 <= grp_convolution_1_fu_304_pad_img_0_6_address0;
    pad_img3_0_6_ce0 <= grp_convolution_1_fu_304_pad_img_0_6_ce0;
    pad_img3_1_0_address0 <= grp_convolution_1_fu_304_pad_img_1_0_address0;
    pad_img3_1_0_ce0 <= grp_convolution_1_fu_304_pad_img_1_0_ce0;
    pad_img3_1_1_address0 <= grp_convolution_1_fu_304_pad_img_1_1_address0;
    pad_img3_1_1_ce0 <= grp_convolution_1_fu_304_pad_img_1_1_ce0;
    pad_img3_1_2_address0 <= grp_convolution_1_fu_304_pad_img_1_2_address0;
    pad_img3_1_2_ce0 <= grp_convolution_1_fu_304_pad_img_1_2_ce0;
    pad_img3_1_3_address0 <= grp_convolution_1_fu_304_pad_img_1_3_address0;
    pad_img3_1_3_ce0 <= grp_convolution_1_fu_304_pad_img_1_3_ce0;
    pad_img3_1_4_address0 <= grp_convolution_1_fu_304_pad_img_1_4_address0;
    pad_img3_1_4_ce0 <= grp_convolution_1_fu_304_pad_img_1_4_ce0;
    pad_img3_1_5_address0 <= grp_convolution_1_fu_304_pad_img_1_5_address0;
    pad_img3_1_5_ce0 <= grp_convolution_1_fu_304_pad_img_1_5_ce0;
    pad_img3_1_6_address0 <= grp_convolution_1_fu_304_pad_img_1_6_address0;
    pad_img3_1_6_ce0 <= grp_convolution_1_fu_304_pad_img_1_6_ce0;
    pad_img3_2_0_address0 <= grp_convolution_1_fu_304_pad_img_2_0_address0;
    pad_img3_2_0_ce0 <= grp_convolution_1_fu_304_pad_img_2_0_ce0;
    pad_img3_2_1_address0 <= grp_convolution_1_fu_304_pad_img_2_1_address0;
    pad_img3_2_1_ce0 <= grp_convolution_1_fu_304_pad_img_2_1_ce0;
    pad_img3_2_2_address0 <= grp_convolution_1_fu_304_pad_img_2_2_address0;
    pad_img3_2_2_ce0 <= grp_convolution_1_fu_304_pad_img_2_2_ce0;
    pad_img3_2_3_address0 <= grp_convolution_1_fu_304_pad_img_2_3_address0;
    pad_img3_2_3_ce0 <= grp_convolution_1_fu_304_pad_img_2_3_ce0;
    pad_img3_2_4_address0 <= grp_convolution_1_fu_304_pad_img_2_4_address0;
    pad_img3_2_4_ce0 <= grp_convolution_1_fu_304_pad_img_2_4_ce0;
    pad_img3_2_5_address0 <= grp_convolution_1_fu_304_pad_img_2_5_address0;
    pad_img3_2_5_ce0 <= grp_convolution_1_fu_304_pad_img_2_5_ce0;
    pad_img3_2_6_address0 <= grp_convolution_1_fu_304_pad_img_2_6_address0;
    pad_img3_2_6_ce0 <= grp_convolution_1_fu_304_pad_img_2_6_ce0;
    pad_img3_3_0_address0 <= grp_convolution_1_fu_304_pad_img_3_0_address0;
    pad_img3_3_0_ce0 <= grp_convolution_1_fu_304_pad_img_3_0_ce0;
    pad_img3_3_1_address0 <= grp_convolution_1_fu_304_pad_img_3_1_address0;
    pad_img3_3_1_ce0 <= grp_convolution_1_fu_304_pad_img_3_1_ce0;
    pad_img3_3_2_address0 <= grp_convolution_1_fu_304_pad_img_3_2_address0;
    pad_img3_3_2_ce0 <= grp_convolution_1_fu_304_pad_img_3_2_ce0;
    pad_img3_3_3_address0 <= grp_convolution_1_fu_304_pad_img_3_3_address0;
    pad_img3_3_3_ce0 <= grp_convolution_1_fu_304_pad_img_3_3_ce0;
    pad_img3_3_4_address0 <= grp_convolution_1_fu_304_pad_img_3_4_address0;
    pad_img3_3_4_ce0 <= grp_convolution_1_fu_304_pad_img_3_4_ce0;
    pad_img3_3_5_address0 <= grp_convolution_1_fu_304_pad_img_3_5_address0;
    pad_img3_3_5_ce0 <= grp_convolution_1_fu_304_pad_img_3_5_ce0;
    pad_img3_3_6_address0 <= grp_convolution_1_fu_304_pad_img_3_6_address0;
    pad_img3_3_6_ce0 <= grp_convolution_1_fu_304_pad_img_3_6_ce0;
    pad_img3_4_0_address0 <= grp_convolution_1_fu_304_pad_img_4_0_address0;
    pad_img3_4_0_ce0 <= grp_convolution_1_fu_304_pad_img_4_0_ce0;
    pad_img3_4_1_address0 <= grp_convolution_1_fu_304_pad_img_4_1_address0;
    pad_img3_4_1_ce0 <= grp_convolution_1_fu_304_pad_img_4_1_ce0;
    pad_img3_4_2_address0 <= grp_convolution_1_fu_304_pad_img_4_2_address0;
    pad_img3_4_2_ce0 <= grp_convolution_1_fu_304_pad_img_4_2_ce0;
    pad_img3_4_3_address0 <= grp_convolution_1_fu_304_pad_img_4_3_address0;
    pad_img3_4_3_ce0 <= grp_convolution_1_fu_304_pad_img_4_3_ce0;
    pad_img3_4_4_address0 <= grp_convolution_1_fu_304_pad_img_4_4_address0;
    pad_img3_4_4_ce0 <= grp_convolution_1_fu_304_pad_img_4_4_ce0;
    pad_img3_4_5_address0 <= grp_convolution_1_fu_304_pad_img_4_5_address0;
    pad_img3_4_5_ce0 <= grp_convolution_1_fu_304_pad_img_4_5_ce0;
    pad_img3_4_6_address0 <= grp_convolution_1_fu_304_pad_img_4_6_address0;
    pad_img3_4_6_ce0 <= grp_convolution_1_fu_304_pad_img_4_6_ce0;
    pad_img3_5_0_address0 <= grp_convolution_1_fu_304_pad_img_5_0_address0;
    pad_img3_5_0_ce0 <= grp_convolution_1_fu_304_pad_img_5_0_ce0;
    pad_img3_5_1_address0 <= grp_convolution_1_fu_304_pad_img_5_1_address0;
    pad_img3_5_1_ce0 <= grp_convolution_1_fu_304_pad_img_5_1_ce0;
    pad_img3_5_2_address0 <= grp_convolution_1_fu_304_pad_img_5_2_address0;
    pad_img3_5_2_ce0 <= grp_convolution_1_fu_304_pad_img_5_2_ce0;
    pad_img3_5_3_address0 <= grp_convolution_1_fu_304_pad_img_5_3_address0;
    pad_img3_5_3_ce0 <= grp_convolution_1_fu_304_pad_img_5_3_ce0;
    pad_img3_5_4_address0 <= grp_convolution_1_fu_304_pad_img_5_4_address0;
    pad_img3_5_4_ce0 <= grp_convolution_1_fu_304_pad_img_5_4_ce0;
    pad_img3_5_5_address0 <= grp_convolution_1_fu_304_pad_img_5_5_address0;
    pad_img3_5_5_ce0 <= grp_convolution_1_fu_304_pad_img_5_5_ce0;
    pad_img3_5_6_address0 <= grp_convolution_1_fu_304_pad_img_5_6_address0;
    pad_img3_5_6_ce0 <= grp_convolution_1_fu_304_pad_img_5_6_ce0;
    pad_img3_6_0_address0 <= grp_convolution_1_fu_304_pad_img_6_0_address0;
    pad_img3_6_0_ce0 <= grp_convolution_1_fu_304_pad_img_6_0_ce0;
    pad_img3_6_1_address0 <= grp_convolution_1_fu_304_pad_img_6_1_address0;
    pad_img3_6_1_ce0 <= grp_convolution_1_fu_304_pad_img_6_1_ce0;
    pad_img3_6_2_address0 <= grp_convolution_1_fu_304_pad_img_6_2_address0;
    pad_img3_6_2_ce0 <= grp_convolution_1_fu_304_pad_img_6_2_ce0;
    pad_img3_6_3_address0 <= grp_convolution_1_fu_304_pad_img_6_3_address0;
    pad_img3_6_3_ce0 <= grp_convolution_1_fu_304_pad_img_6_3_ce0;
    pad_img3_6_4_address0 <= grp_convolution_1_fu_304_pad_img_6_4_address0;
    pad_img3_6_4_ce0 <= grp_convolution_1_fu_304_pad_img_6_4_ce0;
    pad_img3_6_5_address0 <= grp_convolution_1_fu_304_pad_img_6_5_address0;
    pad_img3_6_5_ce0 <= grp_convolution_1_fu_304_pad_img_6_5_ce0;
    pad_img3_6_6_address0 <= grp_convolution_1_fu_304_pad_img_6_6_address0;
    pad_img3_6_6_ce0 <= grp_convolution_1_fu_304_pad_img_6_6_ce0;

    pool_to_flat_streams_1_read_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_pool_to_flat_streams_1_read, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            pool_to_flat_streams_1_read <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols4_fu_425_pool_to_flat_streams_1_read;
        else 
            pool_to_flat_streams_1_read <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_1_write_assign_proc : process(grp_max_pooling_fu_407_pool_to_flat_streams_0_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            pool_to_flat_streams_1_write <= grp_max_pooling_fu_407_pool_to_flat_streams_0_write;
        else 
            pool_to_flat_streams_1_write <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_2_read_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_pool_to_flat_streams_2_read, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            pool_to_flat_streams_2_read <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols5_fu_431_pool_to_flat_streams_2_read;
        else 
            pool_to_flat_streams_2_read <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_2_write_assign_proc : process(grp_max_pooling_fu_413_pool_to_flat_streams_0_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            pool_to_flat_streams_2_write <= grp_max_pooling_fu_413_pool_to_flat_streams_0_write;
        else 
            pool_to_flat_streams_2_write <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_3_read_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_pool_to_flat_streams_3_read, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            pool_to_flat_streams_3_read <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols6_fu_437_pool_to_flat_streams_3_read;
        else 
            pool_to_flat_streams_3_read <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_3_write_assign_proc : process(grp_max_pooling_fu_413_pool_to_flat_streams_0_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pool_to_flat_streams_3_write <= grp_max_pooling_fu_413_pool_to_flat_streams_0_write;
        else 
            pool_to_flat_streams_3_write <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_read_assign_proc : process(grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_pool_to_flat_streams_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pool_to_flat_streams_read <= grp_dataflow_section_Pipeline_flat_for_rows_flat_for_cols_fu_419_pool_to_flat_streams_read;
        else 
            pool_to_flat_streams_read <= ap_const_logic_0;
        end if; 
    end process;


    pool_to_flat_streams_write_assign_proc : process(grp_max_pooling_fu_407_pool_to_flat_streams_0_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            pool_to_flat_streams_write <= grp_max_pooling_fu_407_pool_to_flat_streams_0_write;
        else 
            pool_to_flat_streams_write <= ap_const_logic_0;
        end if; 
    end process;


    prediction_address0_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_address0, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_address0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_address0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_address0;
        else 
            prediction_address0 <= "XXXX";
        end if; 
    end process;

    prediction_address1 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_address1;

    prediction_ce0_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_ce0, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_ce0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_ce0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_ce0;
        else 
            prediction_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_ce1_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce1, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_ce1 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_ce1;
        else 
            prediction_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_d0_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_d0, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_d0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_d0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_d0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_d0;
        else 
            prediction_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    prediction_we0_assign_proc : process(grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_we0, grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_we0, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_we0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_digits_fu_568_prediction_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_we0 <= grp_dataflow_section_Pipeline_dense_soft_max_for_dense_size_fu_555_prediction_we0;
        else 
            prediction_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
