// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_cnn_Pipeline_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln69_3,
        pad_img0_address0,
        pad_img0_ce0,
        pad_img0_we0,
        pad_img0_d0,
        pad_img0_1_address0,
        pad_img0_1_ce0,
        pad_img0_1_we0,
        pad_img0_1_d0,
        pad_img0_2_address0,
        pad_img0_2_ce0,
        pad_img0_2_we0,
        pad_img0_2_d0,
        pad_img0_3_address0,
        pad_img0_3_ce0,
        pad_img0_3_we0,
        pad_img0_3_d0,
        pad_img0_4_address0,
        pad_img0_4_ce0,
        pad_img0_4_we0,
        pad_img0_4_d0,
        pad_img0_5_address0,
        pad_img0_5_ce0,
        pad_img0_5_we0,
        pad_img0_5_d0,
        pad_img0_6_address0,
        pad_img0_6_ce0,
        pad_img0_6_we0,
        pad_img0_6_d0,
        pad_img0_7_address0,
        pad_img0_7_ce0,
        pad_img0_7_we0,
        pad_img0_7_d0,
        pad_img0_8_address0,
        pad_img0_8_ce0,
        pad_img0_8_we0,
        pad_img0_8_d0,
        pad_img0_9_address0,
        pad_img0_9_ce0,
        pad_img0_9_we0,
        pad_img0_9_d0,
        pad_img0_10_address0,
        pad_img0_10_ce0,
        pad_img0_10_we0,
        pad_img0_10_d0,
        pad_img0_11_address0,
        pad_img0_11_ce0,
        pad_img0_11_we0,
        pad_img0_11_d0,
        pad_img0_12_address0,
        pad_img0_12_ce0,
        pad_img0_12_we0,
        pad_img0_12_d0,
        pad_img0_13_address0,
        pad_img0_13_ce0,
        pad_img0_13_we0,
        pad_img0_13_d0,
        pad_img0_14_address0,
        pad_img0_14_ce0,
        pad_img0_14_we0,
        pad_img0_14_d0,
        pad_img0_15_address0,
        pad_img0_15_ce0,
        pad_img0_15_we0,
        pad_img0_15_d0,
        pad_img0_16_address0,
        pad_img0_16_ce0,
        pad_img0_16_we0,
        pad_img0_16_d0,
        pad_img0_17_address0,
        pad_img0_17_ce0,
        pad_img0_17_we0,
        pad_img0_17_d0,
        pad_img0_18_address0,
        pad_img0_18_ce0,
        pad_img0_18_we0,
        pad_img0_18_d0,
        pad_img0_19_address0,
        pad_img0_19_ce0,
        pad_img0_19_we0,
        pad_img0_19_d0,
        pad_img0_20_address0,
        pad_img0_20_ce0,
        pad_img0_20_we0,
        pad_img0_20_d0,
        pad_img0_21_address0,
        pad_img0_21_ce0,
        pad_img0_21_we0,
        pad_img0_21_d0,
        pad_img0_22_address0,
        pad_img0_22_ce0,
        pad_img0_22_we0,
        pad_img0_22_d0,
        pad_img0_23_address0,
        pad_img0_23_ce0,
        pad_img0_23_we0,
        pad_img0_23_d0,
        pad_img0_24_address0,
        pad_img0_24_ce0,
        pad_img0_24_we0,
        pad_img0_24_d0,
        pad_img0_25_address0,
        pad_img0_25_ce0,
        pad_img0_25_we0,
        pad_img0_25_d0,
        pad_img0_26_address0,
        pad_img0_26_ce0,
        pad_img0_26_we0,
        pad_img0_26_d0,
        pad_img0_27_address0,
        pad_img0_27_ce0,
        pad_img0_27_we0,
        pad_img0_27_d0,
        trunc_ln
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] add_ln69_3;
output  [5:0] pad_img0_address0;
output   pad_img0_ce0;
output   pad_img0_we0;
output  [23:0] pad_img0_d0;
output  [5:0] pad_img0_1_address0;
output   pad_img0_1_ce0;
output   pad_img0_1_we0;
output  [23:0] pad_img0_1_d0;
output  [5:0] pad_img0_2_address0;
output   pad_img0_2_ce0;
output   pad_img0_2_we0;
output  [23:0] pad_img0_2_d0;
output  [5:0] pad_img0_3_address0;
output   pad_img0_3_ce0;
output   pad_img0_3_we0;
output  [23:0] pad_img0_3_d0;
output  [5:0] pad_img0_4_address0;
output   pad_img0_4_ce0;
output   pad_img0_4_we0;
output  [23:0] pad_img0_4_d0;
output  [5:0] pad_img0_5_address0;
output   pad_img0_5_ce0;
output   pad_img0_5_we0;
output  [23:0] pad_img0_5_d0;
output  [5:0] pad_img0_6_address0;
output   pad_img0_6_ce0;
output   pad_img0_6_we0;
output  [23:0] pad_img0_6_d0;
output  [5:0] pad_img0_7_address0;
output   pad_img0_7_ce0;
output   pad_img0_7_we0;
output  [23:0] pad_img0_7_d0;
output  [5:0] pad_img0_8_address0;
output   pad_img0_8_ce0;
output   pad_img0_8_we0;
output  [23:0] pad_img0_8_d0;
output  [5:0] pad_img0_9_address0;
output   pad_img0_9_ce0;
output   pad_img0_9_we0;
output  [23:0] pad_img0_9_d0;
output  [5:0] pad_img0_10_address0;
output   pad_img0_10_ce0;
output   pad_img0_10_we0;
output  [23:0] pad_img0_10_d0;
output  [5:0] pad_img0_11_address0;
output   pad_img0_11_ce0;
output   pad_img0_11_we0;
output  [23:0] pad_img0_11_d0;
output  [5:0] pad_img0_12_address0;
output   pad_img0_12_ce0;
output   pad_img0_12_we0;
output  [23:0] pad_img0_12_d0;
output  [5:0] pad_img0_13_address0;
output   pad_img0_13_ce0;
output   pad_img0_13_we0;
output  [23:0] pad_img0_13_d0;
output  [5:0] pad_img0_14_address0;
output   pad_img0_14_ce0;
output   pad_img0_14_we0;
output  [23:0] pad_img0_14_d0;
output  [5:0] pad_img0_15_address0;
output   pad_img0_15_ce0;
output   pad_img0_15_we0;
output  [23:0] pad_img0_15_d0;
output  [5:0] pad_img0_16_address0;
output   pad_img0_16_ce0;
output   pad_img0_16_we0;
output  [23:0] pad_img0_16_d0;
output  [5:0] pad_img0_17_address0;
output   pad_img0_17_ce0;
output   pad_img0_17_we0;
output  [23:0] pad_img0_17_d0;
output  [5:0] pad_img0_18_address0;
output   pad_img0_18_ce0;
output   pad_img0_18_we0;
output  [23:0] pad_img0_18_d0;
output  [5:0] pad_img0_19_address0;
output   pad_img0_19_ce0;
output   pad_img0_19_we0;
output  [23:0] pad_img0_19_d0;
output  [5:0] pad_img0_20_address0;
output   pad_img0_20_ce0;
output   pad_img0_20_we0;
output  [23:0] pad_img0_20_d0;
output  [5:0] pad_img0_21_address0;
output   pad_img0_21_ce0;
output   pad_img0_21_we0;
output  [23:0] pad_img0_21_d0;
output  [5:0] pad_img0_22_address0;
output   pad_img0_22_ce0;
output   pad_img0_22_we0;
output  [23:0] pad_img0_22_d0;
output  [5:0] pad_img0_23_address0;
output   pad_img0_23_ce0;
output   pad_img0_23_we0;
output  [23:0] pad_img0_23_d0;
output  [5:0] pad_img0_24_address0;
output   pad_img0_24_ce0;
output   pad_img0_24_we0;
output  [23:0] pad_img0_24_d0;
output  [5:0] pad_img0_25_address0;
output   pad_img0_25_ce0;
output   pad_img0_25_we0;
output  [23:0] pad_img0_25_d0;
output  [5:0] pad_img0_26_address0;
output   pad_img0_26_ce0;
output   pad_img0_26_we0;
output  [23:0] pad_img0_26_d0;
output  [5:0] pad_img0_27_address0;
output   pad_img0_27_ce0;
output   pad_img0_27_we0;
output  [23:0] pad_img0_27_d0;
input  [1:0] trunc_ln;

reg ap_idle;
reg pad_img0_ce0;
reg pad_img0_we0;
reg pad_img0_1_ce0;
reg pad_img0_1_we0;
reg pad_img0_2_ce0;
reg pad_img0_2_we0;
reg pad_img0_3_ce0;
reg pad_img0_3_we0;
reg pad_img0_4_ce0;
reg pad_img0_4_we0;
reg pad_img0_5_ce0;
reg pad_img0_5_we0;
reg pad_img0_6_ce0;
reg pad_img0_6_we0;
reg pad_img0_7_ce0;
reg pad_img0_7_we0;
reg pad_img0_8_ce0;
reg pad_img0_8_we0;
reg pad_img0_9_ce0;
reg pad_img0_9_we0;
reg pad_img0_10_ce0;
reg pad_img0_10_we0;
reg pad_img0_11_ce0;
reg pad_img0_11_we0;
reg pad_img0_12_ce0;
reg pad_img0_12_we0;
reg pad_img0_13_ce0;
reg pad_img0_13_we0;
reg pad_img0_14_ce0;
reg pad_img0_14_we0;
reg pad_img0_15_ce0;
reg pad_img0_15_we0;
reg pad_img0_16_ce0;
reg pad_img0_16_we0;
reg pad_img0_17_ce0;
reg pad_img0_17_we0;
reg pad_img0_18_ce0;
reg pad_img0_18_we0;
reg pad_img0_19_ce0;
reg pad_img0_19_we0;
reg pad_img0_20_ce0;
reg pad_img0_20_we0;
reg pad_img0_21_ce0;
reg pad_img0_21_we0;
reg pad_img0_22_ce0;
reg pad_img0_22_we0;
reg pad_img0_23_ce0;
reg pad_img0_23_we0;
reg pad_img0_24_ce0;
reg pad_img0_24_we0;
reg pad_img0_25_ce0;
reg pad_img0_25_we0;
reg pad_img0_26_ce0;
reg pad_img0_26_we0;
reg pad_img0_27_ce0;
reg pad_img0_27_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln69_1_fu_646_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln69_1_fu_584_p1;
reg   [5:0] phi_urem_fu_118;
wire   [5:0] select_ln69_fu_638_p3;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_phi_urem_load;
reg   [11:0] phi_mul_fu_122;
wire   [11:0] add_ln69_fu_558_p2;
reg   [11:0] ap_sig_allocacmp_phi_mul_load;
reg   [5:0] arrayinit_curidx8_fu_126;
wire   [5:0] add_ln69_1_fu_620_p2;
reg   [5:0] ap_sig_allocacmp_arrayinit_curidx8_load;
wire   [1:0] trunc_ln_read_read_fu_130_p2;
wire   [2:0] trunc_ln69_fu_616_p1;
wire   [2:0] tmp_fu_564_p4;
wire   [5:0] zext_ln69_fu_574_p1;
wire   [5:0] add_ln69_2_fu_578_p2;
wire   [5:0] add_ln69_4_fu_626_p2;
wire   [0:0] icmp_ln69_fu_632_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 phi_urem_fu_118 = 6'd0;
#0 phi_mul_fu_122 = 12'd0;
#0 arrayinit_curidx8_fu_126 = 6'd0;
#0 ap_done_reg = 1'b0;
end

cnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        arrayinit_curidx8_fu_126 <= add_ln69_1_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
    phi_mul_fu_122 <= add_ln69_fu_558_p2;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
    phi_urem_fu_118 <= select_ln69_fu_638_p3;
end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln69_1_fu_646_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_arrayinit_curidx8_load = 6'd0;
    end else begin
        ap_sig_allocacmp_arrayinit_curidx8_load = arrayinit_curidx8_fu_126;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_phi_mul_load = 12'd0;
    end else begin
        ap_sig_allocacmp_phi_mul_load = phi_mul_fu_122;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_phi_urem_load = 6'd0;
    end else begin
        ap_sig_allocacmp_phi_urem_load = phi_urem_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_10_ce0 = 1'b1;
    end else begin
        pad_img0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd3) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_10_we0 = 1'b1;
    end else begin
        pad_img0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_11_ce0 = 1'b1;
    end else begin
        pad_img0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd4) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_11_we0 = 1'b1;
    end else begin
        pad_img0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_12_ce0 = 1'b1;
    end else begin
        pad_img0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd5) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_12_we0 = 1'b1;
    end else begin
        pad_img0_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_13_ce0 = 1'b1;
    end else begin
        pad_img0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (((trunc_ln69_fu_616_p1 == 3'd6) & (trunc_ln_read_read_fu_130_p2 == 2'd1)) | ((trunc_ln69_fu_616_p1 == 3'd7) & (trunc_ln_read_read_fu_130_p2 == 2'd1))))) begin
        pad_img0_13_we0 = 1'b1;
    end else begin
        pad_img0_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_14_ce0 = 1'b1;
    end else begin
        pad_img0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd0) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_14_we0 = 1'b1;
    end else begin
        pad_img0_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_15_ce0 = 1'b1;
    end else begin
        pad_img0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd1) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_15_we0 = 1'b1;
    end else begin
        pad_img0_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_16_ce0 = 1'b1;
    end else begin
        pad_img0_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd2) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_16_we0 = 1'b1;
    end else begin
        pad_img0_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_17_ce0 = 1'b1;
    end else begin
        pad_img0_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd3) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_17_we0 = 1'b1;
    end else begin
        pad_img0_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_18_ce0 = 1'b1;
    end else begin
        pad_img0_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd4) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_18_we0 = 1'b1;
    end else begin
        pad_img0_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_19_ce0 = 1'b1;
    end else begin
        pad_img0_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd5) & (trunc_ln_read_read_fu_130_p2 == 2'd2) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_19_we0 = 1'b1;
    end else begin
        pad_img0_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_1_ce0 = 1'b1;
    end else begin
        pad_img0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd1) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_1_we0 = 1'b1;
    end else begin
        pad_img0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_20_ce0 = 1'b1;
    end else begin
        pad_img0_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (((trunc_ln69_fu_616_p1 == 3'd6) & (trunc_ln_read_read_fu_130_p2 == 2'd2)) | ((trunc_ln69_fu_616_p1 == 3'd7) & (trunc_ln_read_read_fu_130_p2 == 2'd2))))) begin
        pad_img0_20_we0 = 1'b1;
    end else begin
        pad_img0_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_21_ce0 = 1'b1;
    end else begin
        pad_img0_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd0) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_21_we0 = 1'b1;
    end else begin
        pad_img0_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_22_ce0 = 1'b1;
    end else begin
        pad_img0_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd1) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_22_we0 = 1'b1;
    end else begin
        pad_img0_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_23_ce0 = 1'b1;
    end else begin
        pad_img0_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd2) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_23_we0 = 1'b1;
    end else begin
        pad_img0_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_24_ce0 = 1'b1;
    end else begin
        pad_img0_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd3) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_24_we0 = 1'b1;
    end else begin
        pad_img0_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_25_ce0 = 1'b1;
    end else begin
        pad_img0_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd4) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_25_we0 = 1'b1;
    end else begin
        pad_img0_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_26_ce0 = 1'b1;
    end else begin
        pad_img0_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd5) & (trunc_ln_read_read_fu_130_p2 == 2'd3) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_26_we0 = 1'b1;
    end else begin
        pad_img0_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_27_ce0 = 1'b1;
    end else begin
        pad_img0_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (((trunc_ln69_fu_616_p1 == 3'd6) & (trunc_ln_read_read_fu_130_p2 == 2'd3)) | ((trunc_ln69_fu_616_p1 == 3'd7) & (trunc_ln_read_read_fu_130_p2 == 2'd3))))) begin
        pad_img0_27_we0 = 1'b1;
    end else begin
        pad_img0_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_2_ce0 = 1'b1;
    end else begin
        pad_img0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd2) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_2_we0 = 1'b1;
    end else begin
        pad_img0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_3_ce0 = 1'b1;
    end else begin
        pad_img0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd3) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_3_we0 = 1'b1;
    end else begin
        pad_img0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_4_ce0 = 1'b1;
    end else begin
        pad_img0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd4) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_4_we0 = 1'b1;
    end else begin
        pad_img0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_5_ce0 = 1'b1;
    end else begin
        pad_img0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd5) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_5_we0 = 1'b1;
    end else begin
        pad_img0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_6_ce0 = 1'b1;
    end else begin
        pad_img0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (((trunc_ln69_fu_616_p1 == 3'd6) & (trunc_ln_read_read_fu_130_p2 == 2'd0)) | ((trunc_ln69_fu_616_p1 == 3'd7) & (trunc_ln_read_read_fu_130_p2 == 2'd0))))) begin
        pad_img0_6_we0 = 1'b1;
    end else begin
        pad_img0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_7_ce0 = 1'b1;
    end else begin
        pad_img0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd0) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_7_we0 = 1'b1;
    end else begin
        pad_img0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_8_ce0 = 1'b1;
    end else begin
        pad_img0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd1) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_8_we0 = 1'b1;
    end else begin
        pad_img0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_9_ce0 = 1'b1;
    end else begin
        pad_img0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd2) & (trunc_ln_read_read_fu_130_p2 == 2'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_9_we0 = 1'b1;
    end else begin
        pad_img0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_ce0 = 1'b1;
    end else begin
        pad_img0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln69_fu_616_p1 == 3'd0) & (trunc_ln_read_read_fu_130_p2 == 2'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        pad_img0_we0 = 1'b1;
    end else begin
        pad_img0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln69_1_fu_620_p2 = (ap_sig_allocacmp_arrayinit_curidx8_load + 6'd1);

assign add_ln69_2_fu_578_p2 = (add_ln69_3 + zext_ln69_fu_574_p1);

assign add_ln69_4_fu_626_p2 = (ap_sig_allocacmp_phi_urem_load + 6'd1);

assign add_ln69_fu_558_p2 = (ap_sig_allocacmp_phi_mul_load + 12'd74);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln69_1_fu_646_p2 = ((ap_sig_allocacmp_arrayinit_curidx8_load == 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_632_p2 = ((add_ln69_4_fu_626_p2 < 6'd7) ? 1'b1 : 1'b0);

assign pad_img0_10_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_10_d0 = 24'd0;

assign pad_img0_11_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_11_d0 = 24'd0;

assign pad_img0_12_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_12_d0 = 24'd0;

assign pad_img0_13_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_13_d0 = 24'd0;

assign pad_img0_14_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_14_d0 = 24'd0;

assign pad_img0_15_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_15_d0 = 24'd0;

assign pad_img0_16_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_16_d0 = 24'd0;

assign pad_img0_17_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_17_d0 = 24'd0;

assign pad_img0_18_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_18_d0 = 24'd0;

assign pad_img0_19_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_19_d0 = 24'd0;

assign pad_img0_1_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_1_d0 = 24'd0;

assign pad_img0_20_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_20_d0 = 24'd0;

assign pad_img0_21_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_21_d0 = 24'd0;

assign pad_img0_22_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_22_d0 = 24'd0;

assign pad_img0_23_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_23_d0 = 24'd0;

assign pad_img0_24_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_24_d0 = 24'd0;

assign pad_img0_25_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_25_d0 = 24'd0;

assign pad_img0_26_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_26_d0 = 24'd0;

assign pad_img0_27_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_27_d0 = 24'd0;

assign pad_img0_2_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_2_d0 = 24'd0;

assign pad_img0_3_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_3_d0 = 24'd0;

assign pad_img0_4_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_4_d0 = 24'd0;

assign pad_img0_5_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_5_d0 = 24'd0;

assign pad_img0_6_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_6_d0 = 24'd0;

assign pad_img0_7_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_7_d0 = 24'd0;

assign pad_img0_8_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_8_d0 = 24'd0;

assign pad_img0_9_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_9_d0 = 24'd0;

assign pad_img0_address0 = zext_ln69_1_fu_584_p1;

assign pad_img0_d0 = 24'd0;

assign select_ln69_fu_638_p3 = ((icmp_ln69_fu_632_p2[0:0] == 1'b1) ? add_ln69_4_fu_626_p2 : 6'd0);

assign tmp_fu_564_p4 = {{ap_sig_allocacmp_phi_mul_load[11:9]}};

assign trunc_ln69_fu_616_p1 = ap_sig_allocacmp_phi_urem_load[2:0];

assign trunc_ln_read_read_fu_130_p2 = trunc_ln;

assign zext_ln69_1_fu_584_p1 = add_ln69_2_fu_578_p2;

assign zext_ln69_fu_574_p1 = tmp_fu_564_p4;

endmodule //cnn_cnn_Pipeline_2
