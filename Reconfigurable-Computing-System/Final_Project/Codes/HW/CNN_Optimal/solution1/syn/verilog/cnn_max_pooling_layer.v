// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_max_pooling_layer (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        conv_to_pool_streams_0_dout,
        conv_to_pool_streams_0_num_data_valid,
        conv_to_pool_streams_0_fifo_cap,
        conv_to_pool_streams_0_empty_n,
        conv_to_pool_streams_0_read,
        conv_to_pool_streams_1_dout,
        conv_to_pool_streams_1_num_data_valid,
        conv_to_pool_streams_1_fifo_cap,
        conv_to_pool_streams_1_empty_n,
        conv_to_pool_streams_1_read,
        conv_to_pool_streams_2_dout,
        conv_to_pool_streams_2_num_data_valid,
        conv_to_pool_streams_2_fifo_cap,
        conv_to_pool_streams_2_empty_n,
        conv_to_pool_streams_2_read,
        conv_to_pool_streams_3_dout,
        conv_to_pool_streams_3_num_data_valid,
        conv_to_pool_streams_3_fifo_cap,
        conv_to_pool_streams_3_empty_n,
        conv_to_pool_streams_3_read,
        pool_to_flat_streams_0_din,
        pool_to_flat_streams_0_num_data_valid,
        pool_to_flat_streams_0_fifo_cap,
        pool_to_flat_streams_0_full_n,
        pool_to_flat_streams_0_write,
        pool_to_flat_streams_1_din,
        pool_to_flat_streams_1_num_data_valid,
        pool_to_flat_streams_1_fifo_cap,
        pool_to_flat_streams_1_full_n,
        pool_to_flat_streams_1_write,
        pool_to_flat_streams_2_din,
        pool_to_flat_streams_2_num_data_valid,
        pool_to_flat_streams_2_fifo_cap,
        pool_to_flat_streams_2_full_n,
        pool_to_flat_streams_2_write,
        pool_to_flat_streams_3_din,
        pool_to_flat_streams_3_num_data_valid,
        pool_to_flat_streams_3_fifo_cap,
        pool_to_flat_streams_3_full_n,
        pool_to_flat_streams_3_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] conv_to_pool_streams_0_dout;
input  [10:0] conv_to_pool_streams_0_num_data_valid;
input  [10:0] conv_to_pool_streams_0_fifo_cap;
input   conv_to_pool_streams_0_empty_n;
output   conv_to_pool_streams_0_read;
input  [31:0] conv_to_pool_streams_1_dout;
input  [10:0] conv_to_pool_streams_1_num_data_valid;
input  [10:0] conv_to_pool_streams_1_fifo_cap;
input   conv_to_pool_streams_1_empty_n;
output   conv_to_pool_streams_1_read;
input  [31:0] conv_to_pool_streams_2_dout;
input  [10:0] conv_to_pool_streams_2_num_data_valid;
input  [10:0] conv_to_pool_streams_2_fifo_cap;
input   conv_to_pool_streams_2_empty_n;
output   conv_to_pool_streams_2_read;
input  [31:0] conv_to_pool_streams_3_dout;
input  [10:0] conv_to_pool_streams_3_num_data_valid;
input  [10:0] conv_to_pool_streams_3_fifo_cap;
input   conv_to_pool_streams_3_empty_n;
output   conv_to_pool_streams_3_read;
output  [31:0] pool_to_flat_streams_0_din;
input  [8:0] pool_to_flat_streams_0_num_data_valid;
input  [8:0] pool_to_flat_streams_0_fifo_cap;
input   pool_to_flat_streams_0_full_n;
output   pool_to_flat_streams_0_write;
output  [31:0] pool_to_flat_streams_1_din;
input  [8:0] pool_to_flat_streams_1_num_data_valid;
input  [8:0] pool_to_flat_streams_1_fifo_cap;
input   pool_to_flat_streams_1_full_n;
output   pool_to_flat_streams_1_write;
output  [31:0] pool_to_flat_streams_2_din;
input  [8:0] pool_to_flat_streams_2_num_data_valid;
input  [8:0] pool_to_flat_streams_2_fifo_cap;
input   pool_to_flat_streams_2_full_n;
output   pool_to_flat_streams_2_write;
output  [31:0] pool_to_flat_streams_3_din;
input  [8:0] pool_to_flat_streams_3_num_data_valid;
input  [8:0] pool_to_flat_streams_3_fifo_cap;
input   pool_to_flat_streams_3_full_n;
output   pool_to_flat_streams_3_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg conv_to_pool_streams_0_read;
reg conv_to_pool_streams_1_read;
reg conv_to_pool_streams_2_read;
reg conv_to_pool_streams_3_read;
reg pool_to_flat_streams_0_write;
reg pool_to_flat_streams_1_write;
reg pool_to_flat_streams_2_write;
reg pool_to_flat_streams_3_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_done;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_idle;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_ready;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_conv_to_pool_streams_0_read;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_din;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_write;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din0;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din1;
wire   [4:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_opcode;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_ce;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_done;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_idle;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_ready;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_conv_to_pool_streams_1_read;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_din;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_write;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din0;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din1;
wire   [4:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_opcode;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_ce;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_done;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_idle;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_ready;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_conv_to_pool_streams_2_read;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_din;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_write;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din0;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din1;
wire   [4:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_opcode;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_ce;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_idle;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_ready;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_conv_to_pool_streams_3_read;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_din;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_write;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din0;
wire   [31:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din1;
wire   [4:0] grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_opcode;
wire    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_ce;
reg    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg;
reg    ap_block_state1_ignore_call9;
wire    ap_CS_fsm_state2;
reg    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [0:0] grp_fu_68_p2;
reg   [31:0] grp_fu_68_p0;
reg   [31:0] grp_fu_68_p1;
reg    grp_fu_68_ce;
reg   [4:0] grp_fu_68_opcode;
reg   [10:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg = 1'b0;
#0 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg = 1'b0;
#0 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg = 1'b0;
#0 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg = 1'b0;
end

cnn_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start),
    .ap_done(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_done),
    .ap_idle(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_idle),
    .ap_ready(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_ready),
    .conv_to_pool_streams_0_dout(conv_to_pool_streams_0_dout),
    .conv_to_pool_streams_0_num_data_valid(11'd0),
    .conv_to_pool_streams_0_fifo_cap(11'd0),
    .conv_to_pool_streams_0_empty_n(conv_to_pool_streams_0_empty_n),
    .conv_to_pool_streams_0_read(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_conv_to_pool_streams_0_read),
    .pool_to_flat_streams_0_din(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_din),
    .pool_to_flat_streams_0_num_data_valid(9'd0),
    .pool_to_flat_streams_0_fifo_cap(9'd0),
    .pool_to_flat_streams_0_full_n(pool_to_flat_streams_0_full_n),
    .pool_to_flat_streams_0_write(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_write),
    .grp_fu_68_p_din0(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din0),
    .grp_fu_68_p_din1(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din1),
    .grp_fu_68_p_opcode(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_opcode),
    .grp_fu_68_p_dout0(grp_fu_68_p2),
    .grp_fu_68_p_ce(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_ce)
);

cnn_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start),
    .ap_done(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_done),
    .ap_idle(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_idle),
    .ap_ready(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_ready),
    .conv_to_pool_streams_1_dout(conv_to_pool_streams_1_dout),
    .conv_to_pool_streams_1_num_data_valid(11'd0),
    .conv_to_pool_streams_1_fifo_cap(11'd0),
    .conv_to_pool_streams_1_empty_n(conv_to_pool_streams_1_empty_n),
    .conv_to_pool_streams_1_read(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_conv_to_pool_streams_1_read),
    .pool_to_flat_streams_1_din(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_din),
    .pool_to_flat_streams_1_num_data_valid(9'd0),
    .pool_to_flat_streams_1_fifo_cap(9'd0),
    .pool_to_flat_streams_1_full_n(pool_to_flat_streams_1_full_n),
    .pool_to_flat_streams_1_write(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_write),
    .grp_fu_68_p_din0(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din0),
    .grp_fu_68_p_din1(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din1),
    .grp_fu_68_p_opcode(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_opcode),
    .grp_fu_68_p_dout0(grp_fu_68_p2),
    .grp_fu_68_p_ce(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_ce)
);

cnn_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start),
    .ap_done(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_done),
    .ap_idle(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_idle),
    .ap_ready(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_ready),
    .conv_to_pool_streams_2_dout(conv_to_pool_streams_2_dout),
    .conv_to_pool_streams_2_num_data_valid(11'd0),
    .conv_to_pool_streams_2_fifo_cap(11'd0),
    .conv_to_pool_streams_2_empty_n(conv_to_pool_streams_2_empty_n),
    .conv_to_pool_streams_2_read(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_conv_to_pool_streams_2_read),
    .pool_to_flat_streams_2_din(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_din),
    .pool_to_flat_streams_2_num_data_valid(9'd0),
    .pool_to_flat_streams_2_fifo_cap(9'd0),
    .pool_to_flat_streams_2_full_n(pool_to_flat_streams_2_full_n),
    .pool_to_flat_streams_2_write(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_write),
    .grp_fu_68_p_din0(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din0),
    .grp_fu_68_p_din1(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din1),
    .grp_fu_68_p_opcode(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_opcode),
    .grp_fu_68_p_dout0(grp_fu_68_p2),
    .grp_fu_68_p_ce(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_ce)
);

cnn_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7 grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start),
    .ap_done(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done),
    .ap_idle(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_idle),
    .ap_ready(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_ready),
    .conv_to_pool_streams_3_dout(conv_to_pool_streams_3_dout),
    .conv_to_pool_streams_3_num_data_valid(11'd0),
    .conv_to_pool_streams_3_fifo_cap(11'd0),
    .conv_to_pool_streams_3_empty_n(conv_to_pool_streams_3_empty_n),
    .conv_to_pool_streams_3_read(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_conv_to_pool_streams_3_read),
    .pool_to_flat_streams_3_din(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_din),
    .pool_to_flat_streams_3_num_data_valid(9'd0),
    .pool_to_flat_streams_3_fifo_cap(9'd0),
    .pool_to_flat_streams_3_full_n(pool_to_flat_streams_3_full_n),
    .pool_to_flat_streams_3_write(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_write),
    .grp_fu_68_p_din0(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din0),
    .grp_fu_68_p_din1(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din1),
    .grp_fu_68_p_opcode(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_opcode),
    .grp_fu_68_p_dout0(grp_fu_68_p2),
    .grp_fu_68_p_ce(grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_ce)
);

cnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U520(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_68_p0),
    .din1(grp_fu_68_p1),
    .ce(grp_fu_68_ce),
    .opcode(grp_fu_68_opcode),
    .dout(grp_fu_68_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_ready == 1'b1)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_ready == 1'b1)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_ready == 1'b1)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1_ignore_call9))) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_ready == 1'b1)) begin
            grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_to_pool_streams_0_read = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_conv_to_pool_streams_0_read;
    end else begin
        conv_to_pool_streams_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_to_pool_streams_1_read = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_conv_to_pool_streams_1_read;
    end else begin
        conv_to_pool_streams_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_to_pool_streams_2_read = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_conv_to_pool_streams_2_read;
    end else begin
        conv_to_pool_streams_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_to_pool_streams_3_read = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_conv_to_pool_streams_3_read;
    end else begin
        conv_to_pool_streams_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_68_ce = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_68_ce = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_68_ce = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_68_ce = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_ce;
    end else begin
        grp_fu_68_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_68_opcode = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_68_opcode = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_68_opcode = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_68_opcode = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_opcode;
    end else begin
        grp_fu_68_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_68_p0 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_68_p0 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_68_p0 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_68_p0 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din0;
    end else begin
        grp_fu_68_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_68_p1 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_grp_fu_68_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_68_p1 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_grp_fu_68_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_68_p1 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_grp_fu_68_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_68_p1 = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_grp_fu_68_p_din1;
    end else begin
        grp_fu_68_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done == 1'b1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        pool_to_flat_streams_0_write = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_write;
    end else begin
        pool_to_flat_streams_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        pool_to_flat_streams_1_write = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_write;
    end else begin
        pool_to_flat_streams_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_to_flat_streams_2_write = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_write;
    end else begin
        pool_to_flat_streams_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        pool_to_flat_streams_3_write = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_write;
    end else begin
        pool_to_flat_streams_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call9 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_ap_start_reg;

assign grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_ap_start_reg;

assign grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_ap_start_reg;

assign grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_ap_start_reg;

assign pool_to_flat_streams_0_din = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols_fu_36_pool_to_flat_streams_0_din;

assign pool_to_flat_streams_1_din = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols5_fu_44_pool_to_flat_streams_1_din;

assign pool_to_flat_streams_2_din = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols6_fu_52_pool_to_flat_streams_2_din;

assign pool_to_flat_streams_3_din = grp_max_pooling_layer_Pipeline_pool_for_rows_pool_for_cols7_fu_60_pool_to_flat_streams_3_din;

assign start_out = real_start;

endmodule //cnn_max_pooling_layer
