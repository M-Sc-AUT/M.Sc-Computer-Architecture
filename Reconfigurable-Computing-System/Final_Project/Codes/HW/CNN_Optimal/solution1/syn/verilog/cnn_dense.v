// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        flat_to_dense_streams_0_dout,
        flat_to_dense_streams_0_num_data_valid,
        flat_to_dense_streams_0_fifo_cap,
        flat_to_dense_streams_0_empty_n,
        flat_to_dense_streams_0_read,
        filter,
        dense_to_softmax_streams_0_din,
        dense_to_softmax_streams_0_num_data_valid,
        dense_to_softmax_streams_0_fifo_cap,
        dense_to_softmax_streams_0_full_n,
        dense_to_softmax_streams_0_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] flat_to_dense_streams_0_dout;
input  [8:0] flat_to_dense_streams_0_num_data_valid;
input  [8:0] flat_to_dense_streams_0_fifo_cap;
input   flat_to_dense_streams_0_empty_n;
output   flat_to_dense_streams_0_read;
input  [1:0] filter;
output  [31:0] dense_to_softmax_streams_0_din;
input  [4:0] dense_to_softmax_streams_0_num_data_valid;
input  [4:0] dense_to_softmax_streams_0_fifo_cap;
input   dense_to_softmax_streams_0_full_n;
output   dense_to_softmax_streams_0_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg flat_to_dense_streams_0_read;
reg dense_to_softmax_streams_0_write;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [9:0] mul_ln36_fu_68_p2;
reg   [9:0] mul_ln36_reg_80;
wire    ap_CS_fsm_state3;
reg   [3:0] dense_array_address0;
reg    dense_array_ce0;
reg    dense_array_we0;
reg   [31:0] dense_array_d0;
wire   [31:0] dense_array_q0;
reg    dense_array_ce1;
wire   [31:0] dense_array_q1;
wire    grp_dense_Pipeline_1_fu_42_ap_start;
wire    grp_dense_Pipeline_1_fu_42_ap_done;
wire    grp_dense_Pipeline_1_fu_42_ap_idle;
wire    grp_dense_Pipeline_1_fu_42_ap_ready;
wire   [3:0] grp_dense_Pipeline_1_fu_42_dense_array_address0;
wire    grp_dense_Pipeline_1_fu_42_dense_array_ce0;
wire    grp_dense_Pipeline_1_fu_42_dense_array_we0;
wire   [31:0] grp_dense_Pipeline_1_fu_42_dense_array_d0;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_done;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_idle;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_ready;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_flat_to_dense_streams_0_read;
wire   [3:0] grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address0;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce0;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_we0;
wire   [31:0] grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_d0;
wire   [3:0] grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address1;
wire    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce1;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_idle;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_ready;
wire   [31:0] grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_din;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_write;
wire   [3:0] grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_address0;
wire    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_ce0;
reg    grp_dense_Pipeline_1_fu_42_ap_start_reg;
reg    grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [1:0] mul_ln36_fu_68_p0;
wire   [8:0] mul_ln36_fu_68_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire   [9:0] mul_ln36_fu_68_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_dense_Pipeline_1_fu_42_ap_start_reg = 1'b0;
#0 grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg = 1'b0;
#0 grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg = 1'b0;
end

cnn_dense_dense_array_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_address0),
    .ce0(dense_array_ce0),
    .we0(dense_array_we0),
    .d0(dense_array_d0),
    .q0(dense_array_q0),
    .address1(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address1),
    .ce1(dense_array_ce1),
    .q1(dense_array_q1)
);

cnn_dense_Pipeline_1 grp_dense_Pipeline_1_fu_42(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_Pipeline_1_fu_42_ap_start),
    .ap_done(grp_dense_Pipeline_1_fu_42_ap_done),
    .ap_idle(grp_dense_Pipeline_1_fu_42_ap_idle),
    .ap_ready(grp_dense_Pipeline_1_fu_42_ap_ready),
    .dense_array_address0(grp_dense_Pipeline_1_fu_42_dense_array_address0),
    .dense_array_ce0(grp_dense_Pipeline_1_fu_42_dense_array_ce0),
    .dense_array_we0(grp_dense_Pipeline_1_fu_42_dense_array_we0),
    .dense_array_d0(grp_dense_Pipeline_1_fu_42_dense_array_d0)
);

cnn_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1 grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start),
    .ap_done(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_done),
    .ap_idle(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_idle),
    .ap_ready(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_ready),
    .flat_to_dense_streams_0_dout(flat_to_dense_streams_0_dout),
    .flat_to_dense_streams_0_num_data_valid(9'd0),
    .flat_to_dense_streams_0_fifo_cap(9'd0),
    .flat_to_dense_streams_0_empty_n(flat_to_dense_streams_0_empty_n),
    .flat_to_dense_streams_0_read(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_flat_to_dense_streams_0_read),
    .mul_ln36(mul_ln36_reg_80),
    .dense_array_address0(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address0),
    .dense_array_ce0(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce0),
    .dense_array_we0(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_we0),
    .dense_array_d0(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_d0),
    .dense_array_address1(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address1),
    .dense_array_ce1(grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce1),
    .dense_array_q1(dense_array_q1)
);

cnn_dense_Pipeline_VITIS_LOOP_49_2 grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start),
    .ap_done(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done),
    .ap_idle(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_idle),
    .ap_ready(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_ready),
    .dense_to_softmax_streams_0_din(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_din),
    .dense_to_softmax_streams_0_num_data_valid(5'd0),
    .dense_to_softmax_streams_0_fifo_cap(5'd0),
    .dense_to_softmax_streams_0_full_n(dense_to_softmax_streams_0_full_n),
    .dense_to_softmax_streams_0_write(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_write),
    .dense_array_address0(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_address0),
    .dense_array_ce0(grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_ce0),
    .dense_array_q0(dense_array_q0)
);

cnn_mul_2ns_9ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 10 ))
mul_2ns_9ns_10_1_1_U548(
    .din0(mul_ln36_fu_68_p0),
    .din1(mul_ln36_fu_68_p1),
    .dout(mul_ln36_fu_68_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_Pipeline_1_fu_42_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_dense_Pipeline_1_fu_42_ap_start_reg <= 1'b1;
        end else if ((grp_dense_Pipeline_1_fu_42_ap_ready == 1'b1)) begin
            grp_dense_Pipeline_1_fu_42_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg <= 1'b1;
        end else if ((grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_ready == 1'b1)) begin
            grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg <= 1'b1;
        end else if ((grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_ready == 1'b1)) begin
            grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln36_reg_80 <= mul_ln36_fu_68_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_dense_Pipeline_1_fu_42_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_address0 = grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_array_address0 = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_array_address0 = grp_dense_Pipeline_1_fu_42_dense_array_address0;
    end else begin
        dense_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_ce0 = grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_array_ce0 = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_array_ce0 = grp_dense_Pipeline_1_fu_42_dense_array_ce0;
    end else begin
        dense_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_array_ce1 = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_ce1;
    end else begin
        dense_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_array_d0 = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_array_d0 = grp_dense_Pipeline_1_fu_42_dense_array_d0;
    end else begin
        dense_array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_array_we0 = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_dense_array_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_array_we0 = grp_dense_Pipeline_1_fu_42_dense_array_we0;
    end else begin
        dense_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_to_softmax_streams_0_write = grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_write;
    end else begin
        dense_to_softmax_streams_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        flat_to_dense_streams_0_read = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_flat_to_dense_streams_0_read;
    end else begin
        flat_to_dense_streams_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_dense_Pipeline_1_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign dense_to_softmax_streams_0_din = grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_dense_to_softmax_streams_0_din;

assign grp_dense_Pipeline_1_fu_42_ap_start = grp_dense_Pipeline_1_fu_42_ap_start_reg;

assign grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start = grp_dense_Pipeline_VITIS_LOOP_49_2_fu_58_ap_start_reg;

assign grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start = grp_dense_Pipeline_dense_for_flat_VITIS_LOOP_40_1_fu_48_ap_start_reg;

assign mul_ln36_fu_68_p0 = mul_ln36_fu_68_p00;

assign mul_ln36_fu_68_p00 = filter;

assign mul_ln36_fu_68_p1 = 10'd196;

endmodule //cnn_dense
